
simpleserial-lea.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00008e4e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000020  00802000  00008e4e  00008ee2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000391  00802020  00802020  00008f02  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  00008f02  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000108  00000000  00000000  00008f13  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001a1b  00000000  00000000  0000901b  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a6a  00000000  00000000  0000aa36  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000abc  00000000  00000000  0000b4a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000364  00000000  00000000  0000bf5c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000878  00000000  00000000  0000c2c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001457  00000000  00000000  0000cb38  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  0000df8f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__ctors_end>
       4:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
       8:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
       c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      10:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      14:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      18:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      1c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      20:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      24:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      28:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      2c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      30:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      34:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      38:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      3c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      40:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      44:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      48:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      4c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      50:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      54:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      58:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      5c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      60:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      64:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      68:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      6c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      70:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      74:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      78:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      7c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      80:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      84:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      88:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      8c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      90:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      94:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      98:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      9c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      a0:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      a4:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      a8:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      ac:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      b0:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      b4:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      b8:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      bc:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      c0:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      c4:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      c8:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      cc:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      d0:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      d4:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      d8:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      dc:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      e0:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      e4:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      e8:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      ec:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      f0:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      f4:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      f8:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
      fc:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     100:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     104:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     108:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     10c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     110:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     114:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     118:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     11c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     120:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     124:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     128:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     12c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     130:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     134:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     138:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     13c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     140:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     144:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     148:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     14c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     150:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     154:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     158:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     15c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     160:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     164:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     168:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     16c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     170:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     174:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     178:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     17c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     180:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     184:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     188:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     18c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     190:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     194:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     198:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     19c:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     1a0:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     1a4:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     1a8:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     1ac:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     1b0:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     1b4:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     1b8:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     1bc:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     1c0:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>
     1c4:	0c 94 05 01 	jmp	0x20a	; 0x20a <__bad_interrupt>

000001c8 <__ctors_end>:
     1c8:	11 24       	eor	r1, r1
     1ca:	1f be       	out	0x3f, r1	; 63
     1cc:	cf ef       	ldi	r28, 0xFF	; 255
     1ce:	cd bf       	out	0x3d, r28	; 61
     1d0:	df e3       	ldi	r29, 0x3F	; 63
     1d2:	de bf       	out	0x3e, r29	; 62
     1d4:	00 e0       	ldi	r16, 0x00	; 0
     1d6:	0c bf       	out	0x3c, r16	; 60

000001d8 <__do_copy_data>:
     1d8:	10 e2       	ldi	r17, 0x20	; 32
     1da:	a0 e0       	ldi	r26, 0x00	; 0
     1dc:	b0 e2       	ldi	r27, 0x20	; 32
     1de:	ee e4       	ldi	r30, 0x4E	; 78
     1e0:	fe e8       	ldi	r31, 0x8E	; 142
     1e2:	00 e0       	ldi	r16, 0x00	; 0
     1e4:	0b bf       	out	0x3b, r16	; 59
     1e6:	02 c0       	rjmp	.+4      	; 0x1ec <__do_copy_data+0x14>
     1e8:	07 90       	elpm	r0, Z+
     1ea:	0d 92       	st	X+, r0
     1ec:	a0 32       	cpi	r26, 0x20	; 32
     1ee:	b1 07       	cpc	r27, r17
     1f0:	d9 f7       	brne	.-10     	; 0x1e8 <__do_copy_data+0x10>

000001f2 <__do_clear_bss>:
     1f2:	23 e2       	ldi	r18, 0x23	; 35
     1f4:	a0 e2       	ldi	r26, 0x20	; 32
     1f6:	b0 e2       	ldi	r27, 0x20	; 32
     1f8:	01 c0       	rjmp	.+2      	; 0x1fc <.do_clear_bss_start>

000001fa <.do_clear_bss_loop>:
     1fa:	1d 92       	st	X+, r1

000001fc <.do_clear_bss_start>:
     1fc:	a1 3b       	cpi	r26, 0xB1	; 177
     1fe:	b2 07       	cpc	r27, r18
     200:	e1 f7       	brne	.-8      	; 0x1fa <.do_clear_bss_loop>
     202:	0e 94 af 46 	call	0x8d5e	; 0x8d5e <main>
     206:	0c 94 25 47 	jmp	0x8e4a	; 0x8e4a <_exit>

0000020a <__bad_interrupt>:
     20a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000020e <hex_decode>:
#define PLAIN 2

char hex_lookup[16] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};

uint8_t* hex_decode(const char *in, int len,uint8_t *out)
{
     20e:	cf 93       	push	r28
     210:	df 93       	push	r29
     212:	fa 01       	movw	r30, r20
        unsigned int i, t, hn, ln;

        for (t = 0,i = 0; i < len; i+=2,++t) {
     214:	20 e0       	ldi	r18, 0x00	; 0
     216:	30 e0       	ldi	r19, 0x00	; 0
     218:	26 17       	cp	r18, r22
     21a:	37 07       	cpc	r19, r23
     21c:	f8 f4       	brcc	.+62     	; 0x25c <hex_decode+0x4e>
     21e:	dc 01       	movw	r26, r24
     220:	a2 0f       	add	r26, r18
     222:	b3 1f       	adc	r27, r19

                hn = in[i] > '9' ? (in[i]|32) - 'a' + 10 : in[i] - '0';
     224:	cc 91       	ld	r28, X
     226:	ca 33       	cpi	r28, 0x3A	; 58
     228:	28 f0       	brcs	.+10     	; 0x234 <hex_decode+0x26>
     22a:	c0 62       	ori	r28, 0x20	; 32
     22c:	d0 e0       	ldi	r29, 0x00	; 0
     22e:	c7 55       	subi	r28, 0x57	; 87
     230:	d1 09       	sbc	r29, r1
     232:	02 c0       	rjmp	.+4      	; 0x238 <hex_decode+0x2a>
     234:	d0 e0       	ldi	r29, 0x00	; 0
     236:	e0 97       	sbiw	r28, 0x30	; 48
                ln = in[i+1] > '9' ? (in[i+1]|32) - 'a' + 10 : in[i+1] - '0';
     238:	11 96       	adiw	r26, 0x01	; 1
     23a:	ac 91       	ld	r26, X
     23c:	aa 33       	cpi	r26, 0x3A	; 58
     23e:	28 f0       	brcs	.+10     	; 0x24a <hex_decode+0x3c>
     240:	a0 62       	ori	r26, 0x20	; 32
     242:	b0 e0       	ldi	r27, 0x00	; 0
     244:	a7 55       	subi	r26, 0x57	; 87
     246:	b1 09       	sbc	r27, r1
     248:	02 c0       	rjmp	.+4      	; 0x24e <hex_decode+0x40>
     24a:	b0 e0       	ldi	r27, 0x00	; 0
     24c:	d0 97       	sbiw	r26, 0x30	; 48
                out[t] = (hn << 4 ) | ln;
     24e:	c2 95       	swap	r28
     250:	c0 7f       	andi	r28, 0xF0	; 240
     252:	ca 2b       	or	r28, r26
     254:	c1 93       	st	Z+, r28

uint8_t* hex_decode(const char *in, int len,uint8_t *out)
{
        unsigned int i, t, hn, ln;

        for (t = 0,i = 0; i < len; i+=2,++t) {
     256:	2e 5f       	subi	r18, 0xFE	; 254
     258:	3f 4f       	sbci	r19, 0xFF	; 255
     25a:	de cf       	rjmp	.-68     	; 0x218 <hex_decode+0xa>
                ln = in[i+1] > '9' ? (in[i+1]|32) - 'a' + 10 : in[i+1] - '0';
                out[t] = (hn << 4 ) | ln;
        }

        return out;
}
     25c:	ca 01       	movw	r24, r20
     25e:	df 91       	pop	r29
     260:	cf 91       	pop	r28
     262:	08 95       	ret

00000264 <hex_print>:

void hex_print(const uint8_t * in, int len, char *out)
{
     264:	1f 93       	push	r17
     266:	cf 93       	push	r28
     268:	df 93       	push	r29
     26a:	fa 01       	movw	r30, r20
     26c:	31 96       	adiw	r30, 0x01	; 1
		unsigned int i,j;
		j=0;
		for (i=0; i < len; i++) {
     26e:	20 e0       	ldi	r18, 0x00	; 0
     270:	30 e0       	ldi	r19, 0x00	; 0
     272:	26 17       	cp	r18, r22
     274:	37 07       	cpc	r19, r23
     276:	c9 f0       	breq	.+50     	; 0x2aa <hex_print+0x46>
     278:	ec 01       	movw	r28, r24
			out[j++] = hex_lookup[in[i] >> 4];
     27a:	dc 01       	movw	r26, r24
     27c:	1d 91       	ld	r17, X+
     27e:	cd 01       	movw	r24, r26
     280:	12 95       	swap	r17
     282:	1f 70       	andi	r17, 0x0F	; 15
     284:	a1 2f       	mov	r26, r17
     286:	b0 e0       	ldi	r27, 0x00	; 0
     288:	a0 5f       	subi	r26, 0xF0	; 240
     28a:	bf 4d       	sbci	r27, 0xDF	; 223
     28c:	1c 91       	ld	r17, X
     28e:	df 01       	movw	r26, r30
     290:	11 97       	sbiw	r26, 0x01	; 1
     292:	1c 93       	st	X, r17
			out[j++] = hex_lookup[in[i] & 0x0F];			
     294:	a8 81       	ld	r26, Y
     296:	af 70       	andi	r26, 0x0F	; 15
     298:	b0 e0       	ldi	r27, 0x00	; 0
     29a:	a0 5f       	subi	r26, 0xF0	; 240
     29c:	bf 4d       	sbci	r27, 0xDF	; 223
     29e:	ac 91       	ld	r26, X
     2a0:	a0 83       	st	Z, r26

void hex_print(const uint8_t * in, int len, char *out)
{
		unsigned int i,j;
		j=0;
		for (i=0; i < len; i++) {
     2a2:	2f 5f       	subi	r18, 0xFF	; 255
     2a4:	3f 4f       	sbci	r19, 0xFF	; 255
     2a6:	32 96       	adiw	r30, 0x02	; 2
     2a8:	e4 cf       	rjmp	.-56     	; 0x272 <hex_print+0xe>
			out[j++] = hex_lookup[in[i] >> 4];
			out[j++] = hex_lookup[in[i] & 0x0F];			
		}
		
		out[j] = 0;
     2aa:	f9 01       	movw	r30, r18
     2ac:	ee 0f       	add	r30, r30
     2ae:	ff 1f       	adc	r31, r31
     2b0:	e4 0f       	add	r30, r20
     2b2:	f5 1f       	adc	r31, r21
     2b4:	10 82       	st	Z, r1
}
     2b6:	df 91       	pop	r29
     2b8:	cf 91       	pop	r28
     2ba:	1f 91       	pop	r17
     2bc:	08 95       	ret

000002be <lea_indep_init>:
#include "lea_keyschedule.h"

LEA_KEY ctx;

void lea_indep_init(void)
{
     2be:	08 95       	ret

000002c0 <lea_indep_key>:
	;
}

void lea_indep_key(uint8_t * key)
{
	lea128_init(&ctx,key);
     2c0:	bc 01       	movw	r22, r24
     2c2:	80 eb       	ldi	r24, 0xB0	; 176
     2c4:	90 e2       	ldi	r25, 0x20	; 32
     2c6:	0c 94 9b 46 	jmp	0x8d36	; 0x8d36 <lea128_init>

000002ca <lea_indep_enc>:
}

void lea_indep_enc(uint8_t * pt)
{
	lea128_enc(pt, &ctx); /* encrypting the data block */
     2ca:	60 eb       	ldi	r22, 0xB0	; 176
     2cc:	70 e2       	ldi	r23, 0x20	; 32
     2ce:	0c 94 ad 46 	jmp	0x8d5a	; 0x8d5a <lea128_enc>

000002d2 <init_uart0>:
   )
   {
/* This PORT setting is only valid to USARTC0 if other USARTs is used a
	 * different PORT and/or pins is used. */
	/* PIN3 (TXD0) as output. */
	PORTC.DIRSET = PIN3_bm;
     2d2:	e0 e4       	ldi	r30, 0x40	; 64
     2d4:	f6 e0       	ldi	r31, 0x06	; 6
     2d6:	88 e0       	ldi	r24, 0x08	; 8
     2d8:	81 83       	std	Z+1, r24	; 0x01

	/* PC2 (RXD0) as input. */
	PORTC.DIRCLR = PIN2_bm;
     2da:	84 e0       	ldi	r24, 0x04	; 4
     2dc:	82 83       	std	Z+2, r24	; 0x02

	/* USARTC0, 8 Data bits, No Parity, 1 Stop bit. */
	USART_Format_Set(&USART, USART_CHSIZE_8BIT_gc, USART_PMODE_DISABLED_gc, false);
     2de:	e0 ea       	ldi	r30, 0xA0	; 160
     2e0:	f8 e0       	ldi	r31, 0x08	; 8
     2e2:	83 e0       	ldi	r24, 0x03	; 3
     2e4:	85 83       	std	Z+5, r24	; 0x05
	 * Do not use the baudrate scale factor
	 *
	 * Baudrate select = (1/(16*(((I/O clock frequency)/Baudrate)-1)
	 *                 = 12
	 */
	USART_Baudrate_Set(&USART, 11, 0);
     2e6:	8b e0       	ldi	r24, 0x0B	; 11
     2e8:	86 83       	std	Z+6, r24	; 0x06
     2ea:	17 82       	std	Z+7, r1	; 0x07

	/* Enable both RX and TX. */
	USART_Rx_Enable(&USART);
     2ec:	84 81       	ldd	r24, Z+4	; 0x04
     2ee:	80 61       	ori	r24, 0x10	; 16
     2f0:	84 83       	std	Z+4, r24	; 0x04
	USART_Tx_Enable(&USART);
     2f2:	84 81       	ldd	r24, Z+4	; 0x04
     2f4:	88 60       	ori	r24, 0x08	; 8
     2f6:	84 83       	std	Z+4, r24	; 0x04
     2f8:	08 95       	ret

000002fa <input_ch_w_timeout_0>:
unsigned char									input_ch_w_timeout_0
	(
   char *					 	data,
   volatile unsigned int				timeout
   )
   {
     2fa:	cf 93       	push	r28
     2fc:	df 93       	push	r29
     2fe:	1f 92       	push	r1
     300:	1f 92       	push	r1
     302:	cd b7       	in	r28, 0x3d	; 61
     304:	de b7       	in	r29, 0x3e	; 62
     306:	69 83       	std	Y+1, r22	; 0x01
     308:	7a 83       	std	Y+2, r23	; 0x02
   unsigned int				timeout_counter = 0;
     30a:	20 e0       	ldi	r18, 0x00	; 0
     30c:	30 e0       	ldi	r19, 0x00	; 0

   
   //check if a byte has been recieved or if the timeout has been excedded
   while (timeout_counter != timeout)
     30e:	49 81       	ldd	r20, Y+1	; 0x01
     310:	5a 81       	ldd	r21, Y+2	; 0x02
     312:	24 17       	cp	r18, r20
     314:	35 07       	cpc	r19, r21
     316:	69 f0       	breq	.+26     	; 0x332 <input_ch_w_timeout_0+0x38>
		{	
		if (USART_IsRXComplete(&USART))
     318:	40 91 a1 08 	lds	r20, 0x08A1
     31c:	47 ff       	sbrs	r20, 7
     31e:	06 c0       	rjmp	.+12     	; 0x32c <input_ch_w_timeout_0+0x32>
			{
			*data = USART_GetChar(&USART);
     320:	20 91 a0 08 	lds	r18, 0x08A0
     324:	fc 01       	movw	r30, r24
     326:	20 83       	st	Z, r18
			return BYTE_REC;
     328:	81 e0       	ldi	r24, 0x01	; 1
     32a:	04 c0       	rjmp	.+8      	; 0x334 <input_ch_w_timeout_0+0x3a>
			}
		timeout_counter++;
     32c:	2f 5f       	subi	r18, 0xFF	; 255
     32e:	3f 4f       	sbci	r19, 0xFF	; 255
     330:	ee cf       	rjmp	.-36     	; 0x30e <input_ch_w_timeout_0+0x14>
		}
		
	return TIMEOUT;
     332:	80 e0       	ldi	r24, 0x00	; 0
	}
     334:	0f 90       	pop	r0
     336:	0f 90       	pop	r0
     338:	df 91       	pop	r29
     33a:	cf 91       	pop	r28
     33c:	08 95       	ret

0000033e <input_ch_0>:
	(
   void
   )
   {
   //check if a byte has been recieved or if the timeout has been excedded
   while (!USART_IsRXComplete(&USART))
     33e:	80 91 a1 08 	lds	r24, 0x08A1
     342:	87 ff       	sbrs	r24, 7
     344:	fc cf       	rjmp	.-8      	; 0x33e <input_ch_0>
		{
		continue;		
		}		
	return USART_GetChar(&USART);;
     346:	80 91 a0 08 	lds	r24, 0x08A0
	}
     34a:	08 95       	ret

0000034c <output_ch_0>:
void												output_ch_0
	(
	char							data
	)
	{
	while(!USART_IsTXDataRegisterEmpty(&USART));
     34c:	90 91 a1 08 	lds	r25, 0x08A1
     350:	95 ff       	sbrs	r25, 5
     352:	fc cf       	rjmp	.-8      	; 0x34c <output_ch_0>
	USART_PutChar(&USART, data);
     354:	80 93 a0 08 	sts	0x08A0, r24
     358:	08 95       	ret

0000035a <USART_InterruptDriver_Initialize>:
 *  \param dreIntLevel          Data register empty interrupt level.
 */
void USART_InterruptDriver_Initialize(USART_data_t * usart_data,
                                      USART_t * usart,
                                      USART_DREINTLVL_t dreIntLevel)
{
     35a:	fc 01       	movw	r30, r24
	usart_data->usart = usart;
     35c:	60 83       	st	Z, r22
     35e:	71 83       	std	Z+1, r23	; 0x01
	usart_data->dreIntLevel = dreIntLevel;
     360:	42 83       	std	Z+2, r20	; 0x02

	usart_data->buffer.RX_Tail = 0;
     362:	14 86       	std	Z+12, r1	; 0x0c
	usart_data->buffer.RX_Head = 0;
     364:	13 86       	std	Z+11, r1	; 0x0b
	usart_data->buffer.TX_Tail = 0;
     366:	16 86       	std	Z+14, r1	; 0x0e
	usart_data->buffer.TX_Head = 0;
     368:	15 86       	std	Z+13, r1	; 0x0d
     36a:	08 95       	ret

0000036c <USART_InterruptDriver_DreInterruptLevel_Set>:
 *  \param dreIntLevel        Interrupt level of the DRE interrupt.
 */
void USART_InterruptDriver_DreInterruptLevel_Set(USART_data_t * usart_data,
                                                 USART_DREINTLVL_t dreIntLevel)
{
	usart_data->dreIntLevel = dreIntLevel;
     36c:	fc 01       	movw	r30, r24
     36e:	62 83       	std	Z+2, r22	; 0x02
     370:	08 95       	ret

00000372 <USART_TXBuffer_FreeSpace>:
 *  \retval false     The receive buffer is empty.
 */
bool USART_TXBuffer_FreeSpace(USART_data_t * usart_data)
{
	/* Make copies to make sure that volatile access is specified. */
	uint8_t tempHead = (usart_data->buffer.TX_Head + 1) & USART_TX_BUFFER_MASK;
     372:	fc 01       	movw	r30, r24
     374:	25 85       	ldd	r18, Z+13	; 0x0d
	uint8_t tempTail = usart_data->buffer.TX_Tail;
     376:	96 85       	ldd	r25, Z+14	; 0x0e
 *  \retval false     The receive buffer is empty.
 */
bool USART_TXBuffer_FreeSpace(USART_data_t * usart_data)
{
	/* Make copies to make sure that volatile access is specified. */
	uint8_t tempHead = (usart_data->buffer.TX_Head + 1) & USART_TX_BUFFER_MASK;
     378:	2f 5f       	subi	r18, 0xFF	; 255
     37a:	23 70       	andi	r18, 0x03	; 3
	uint8_t tempTail = usart_data->buffer.TX_Tail;

	/* There are data left in the buffer unless Head and Tail are equal. */
	return (tempHead != tempTail);
     37c:	81 e0       	ldi	r24, 0x01	; 1
     37e:	29 13       	cpse	r18, r25
     380:	01 c0       	rjmp	.+2      	; 0x384 <USART_TXBuffer_FreeSpace+0x12>
     382:	80 e0       	ldi	r24, 0x00	; 0
}
     384:	08 95       	ret

00000386 <USART_TXBuffer_PutByte>:
 *
 *  \param usart_data The USART_data_t struct instance.
 *  \param data       The data to send.
 */
bool USART_TXBuffer_PutByte(USART_data_t * usart_data, uint8_t data)
{
     386:	0f 93       	push	r16
     388:	1f 93       	push	r17
     38a:	cf 93       	push	r28
     38c:	df 93       	push	r29
     38e:	1f 92       	push	r1
     390:	cd b7       	in	r28, 0x3d	; 61
     392:	de b7       	in	r29, 0x3e	; 62
     394:	8c 01       	movw	r16, r24
	uint8_t tempTX_Head;
	bool TXBuffer_FreeSpace;
	USART_Buffer_t * TXbufPtr;

	TXbufPtr = &usart_data->buffer;
	TXBuffer_FreeSpace = USART_TXBuffer_FreeSpace(usart_data);
     396:	69 83       	std	Y+1, r22	; 0x01
     398:	0e 94 b9 01 	call	0x372	; 0x372 <USART_TXBuffer_FreeSpace>


	if(TXBuffer_FreeSpace)
     39c:	69 81       	ldd	r22, Y+1	; 0x01
     39e:	88 23       	and	r24, r24
     3a0:	a9 f0       	breq	.+42     	; 0x3cc <USART_TXBuffer_PutByte+0x46>
	{
	  	tempTX_Head = TXbufPtr->TX_Head;
     3a2:	d8 01       	movw	r26, r16
     3a4:	1d 96       	adiw	r26, 0x0d	; 13
     3a6:	9c 91       	ld	r25, X
     3a8:	1d 97       	sbiw	r26, 0x0d	; 13
	  	TXbufPtr->TX[tempTX_Head]= data;
     3aa:	f8 01       	movw	r30, r16
     3ac:	e9 0f       	add	r30, r25
     3ae:	f1 1d       	adc	r31, r1
     3b0:	67 83       	std	Z+7, r22	; 0x07
		/* Advance buffer head. */
		TXbufPtr->TX_Head = (tempTX_Head + 1) & USART_TX_BUFFER_MASK;
     3b2:	9f 5f       	subi	r25, 0xFF	; 255
     3b4:	93 70       	andi	r25, 0x03	; 3
     3b6:	f8 01       	movw	r30, r16
     3b8:	95 87       	std	Z+13, r25	; 0x0d

		/* Enable DRE interrupt. */
		tempCTRLA = usart_data->usart->CTRLA;
     3ba:	01 90       	ld	r0, Z+
     3bc:	f0 81       	ld	r31, Z
     3be:	e0 2d       	mov	r30, r0
     3c0:	93 81       	ldd	r25, Z+3	; 0x03
		tempCTRLA = (tempCTRLA & ~USART_DREINTLVL_gm) | usart_data->dreIntLevel;
     3c2:	9c 7f       	andi	r25, 0xFC	; 252
     3c4:	12 96       	adiw	r26, 0x02	; 2
     3c6:	2c 91       	ld	r18, X
     3c8:	92 2b       	or	r25, r18
		usart_data->usart->CTRLA = tempCTRLA;
     3ca:	93 83       	std	Z+3, r25	; 0x03
	}
	return TXBuffer_FreeSpace;
}
     3cc:	0f 90       	pop	r0
     3ce:	df 91       	pop	r29
     3d0:	cf 91       	pop	r28
     3d2:	1f 91       	pop	r17
     3d4:	0f 91       	pop	r16
     3d6:	08 95       	ret

000003d8 <USART_RXBufferData_Available>:
 *  \retval false     The receive buffer is empty.
 */
bool USART_RXBufferData_Available(USART_data_t * usart_data)
{
	/* Make copies to make sure that volatile access is specified. */
	uint8_t tempHead = usart_data->buffer.RX_Head;
     3d8:	fc 01       	movw	r30, r24
     3da:	23 85       	ldd	r18, Z+11	; 0x0b
	uint8_t tempTail = usart_data->buffer.RX_Tail;
     3dc:	94 85       	ldd	r25, Z+12	; 0x0c

	/* There are data left in the buffer unless Head and Tail are equal. */
	return (tempHead != tempTail);
     3de:	81 e0       	ldi	r24, 0x01	; 1
     3e0:	29 13       	cpse	r18, r25
     3e2:	01 c0       	rjmp	.+2      	; 0x3e6 <USART_RXBufferData_Available+0xe>
     3e4:	80 e0       	ldi	r24, 0x00	; 0
}
     3e6:	08 95       	ret

000003e8 <USART_RXBuffer_GetByte>:
 *  \param usart_data       The USART_data_t struct instance.
 *
 *  \return         Received data.
 */
uint8_t USART_RXBuffer_GetByte(USART_data_t * usart_data)
{
     3e8:	fc 01       	movw	r30, r24
	USART_Buffer_t * bufPtr;
	uint8_t ans;

	bufPtr = &usart_data->buffer;
	ans = (bufPtr->RX[bufPtr->RX_Tail]);
     3ea:	84 85       	ldd	r24, Z+12	; 0x0c
     3ec:	df 01       	movw	r26, r30
     3ee:	a8 0f       	add	r26, r24
     3f0:	b1 1d       	adc	r27, r1
     3f2:	13 96       	adiw	r26, 0x03	; 3
     3f4:	8c 91       	ld	r24, X

	/* Advance buffer tail. */
	bufPtr->RX_Tail = (bufPtr->RX_Tail + 1) & USART_RX_BUFFER_MASK;
     3f6:	94 85       	ldd	r25, Z+12	; 0x0c
     3f8:	9f 5f       	subi	r25, 0xFF	; 255
     3fa:	93 70       	andi	r25, 0x03	; 3
     3fc:	94 87       	std	Z+12, r25	; 0x0c

	return ans;
}
     3fe:	08 95       	ret

00000400 <USART_RXComplete>:
 *  Stores received data in RX software buffer.
 *
 *  \param usart_data      The USART_data_t struct instance.
 */
bool USART_RXComplete(USART_data_t * usart_data)
{
     400:	fc 01       	movw	r30, r24
	USART_Buffer_t * bufPtr;
	bool ans;

	bufPtr = &usart_data->buffer;
	/* Advance buffer head. */
	uint8_t tempRX_Head = (bufPtr->RX_Head + 1) & USART_RX_BUFFER_MASK;
     402:	83 85       	ldd	r24, Z+11	; 0x0b
     404:	8f 5f       	subi	r24, 0xFF	; 255
     406:	83 70       	andi	r24, 0x03	; 3

	/* Check for overflow. */
	uint8_t tempRX_Tail = bufPtr->RX_Tail;
     408:	24 85       	ldd	r18, Z+12	; 0x0c
	uint8_t data = usart_data->usart->DATA;
     40a:	a0 81       	ld	r26, Z
     40c:	b1 81       	ldd	r27, Z+1	; 0x01
     40e:	9c 91       	ld	r25, X

	if (tempRX_Head == tempRX_Tail) {
     410:	82 17       	cp	r24, r18
     412:	49 f0       	breq	.+18     	; 0x426 <USART_RXComplete+0x26>
	  	ans = false;
	}else{
		ans = true;
		usart_data->buffer.RX[usart_data->buffer.RX_Head] = data;
     414:	23 85       	ldd	r18, Z+11	; 0x0b
     416:	df 01       	movw	r26, r30
     418:	a2 0f       	add	r26, r18
     41a:	b1 1d       	adc	r27, r1
     41c:	13 96       	adiw	r26, 0x03	; 3
     41e:	9c 93       	st	X, r25
		usart_data->buffer.RX_Head = tempRX_Head;
     420:	83 87       	std	Z+11, r24	; 0x0b
	uint8_t data = usart_data->usart->DATA;

	if (tempRX_Head == tempRX_Tail) {
	  	ans = false;
	}else{
		ans = true;
     422:	81 e0       	ldi	r24, 0x01	; 1
     424:	08 95       	ret
	/* Check for overflow. */
	uint8_t tempRX_Tail = bufPtr->RX_Tail;
	uint8_t data = usart_data->usart->DATA;

	if (tempRX_Head == tempRX_Tail) {
	  	ans = false;
     426:	80 e0       	ldi	r24, 0x00	; 0
		ans = true;
		usart_data->buffer.RX[usart_data->buffer.RX_Head] = data;
		usart_data->buffer.RX_Head = tempRX_Head;
	}
	return ans;
}
     428:	08 95       	ret

0000042a <USART_DataRegEmpty>:
 *  is empty. Argument is pointer to USART (USART_data_t).
 *
 *  \param usart_data      The USART_data_t struct instance.
 */
void USART_DataRegEmpty(USART_data_t * usart_data)
{
     42a:	cf 93       	push	r28
     42c:	df 93       	push	r29
     42e:	fc 01       	movw	r30, r24
	USART_Buffer_t * bufPtr;
	bufPtr = &usart_data->buffer;

	/* Check if all data is transmitted. */
	uint8_t tempTX_Tail = usart_data->buffer.TX_Tail;
     430:	86 85       	ldd	r24, Z+14	; 0x0e
	if (bufPtr->TX_Head == tempTX_Tail){
     432:	95 85       	ldd	r25, Z+13	; 0x0d
     434:	a0 81       	ld	r26, Z
     436:	b1 81       	ldd	r27, Z+1	; 0x01
     438:	98 13       	cpse	r25, r24
     43a:	07 c0       	rjmp	.+14     	; 0x44a <USART_DataRegEmpty+0x20>
	    /* Disable DRE interrupts. */
		uint8_t tempCTRLA = usart_data->usart->CTRLA;
     43c:	13 96       	adiw	r26, 0x03	; 3
     43e:	8c 91       	ld	r24, X
     440:	13 97       	sbiw	r26, 0x03	; 3
		tempCTRLA = (tempCTRLA & ~USART_DREINTLVL_gm) | USART_DREINTLVL_OFF_gc;
     442:	8c 7f       	andi	r24, 0xFC	; 252
		usart_data->usart->CTRLA = tempCTRLA;
     444:	13 96       	adiw	r26, 0x03	; 3
     446:	8c 93       	st	X, r24
     448:	0a c0       	rjmp	.+20     	; 0x45e <USART_DataRegEmpty+0x34>

	}else{
		/* Start transmitting. */
		uint8_t data = bufPtr->TX[usart_data->buffer.TX_Tail];
     44a:	86 85       	ldd	r24, Z+14	; 0x0e
     44c:	ef 01       	movw	r28, r30
     44e:	c8 0f       	add	r28, r24
     450:	d1 1d       	adc	r29, r1
     452:	8f 81       	ldd	r24, Y+7	; 0x07
		usart_data->usart->DATA = data;
     454:	8c 93       	st	X, r24

		/* Advance buffer tail. */
		bufPtr->TX_Tail = (bufPtr->TX_Tail + 1) & USART_TX_BUFFER_MASK;
     456:	86 85       	ldd	r24, Z+14	; 0x0e
     458:	8f 5f       	subi	r24, 0xFF	; 255
     45a:	83 70       	andi	r24, 0x03	; 3
     45c:	86 87       	std	Z+14, r24	; 0x0e
	}
}
     45e:	df 91       	pop	r29
     460:	cf 91       	pop	r28
     462:	08 95       	ret

00000464 <USART_NineBits_PutChar>:
 *
 *  \param usart      The USART module.
 *  \param data       The data to send.
 */
void USART_NineBits_PutChar(USART_t * usart, uint16_t data)
{
     464:	fc 01       	movw	r30, r24
	if(data & 0x0100) {
		usart->CTRLB |= USART_TXB8_bm;
     466:	84 81       	ldd	r24, Z+4	; 0x04
 *  \param usart      The USART module.
 *  \param data       The data to send.
 */
void USART_NineBits_PutChar(USART_t * usart, uint16_t data)
{
	if(data & 0x0100) {
     468:	70 ff       	sbrs	r23, 0
     46a:	02 c0       	rjmp	.+4      	; 0x470 <USART_NineBits_PutChar+0xc>
		usart->CTRLB |= USART_TXB8_bm;
     46c:	81 60       	ori	r24, 0x01	; 1
     46e:	01 c0       	rjmp	.+2      	; 0x472 <USART_NineBits_PutChar+0xe>
	}else {
		usart->CTRLB &= ~USART_TXB8_bm;
     470:	8e 7f       	andi	r24, 0xFE	; 254
     472:	84 83       	std	Z+4, r24	; 0x04
	}

	usart->DATA = (data & 0x00FF);
     474:	60 83       	st	Z, r22
     476:	08 95       	ret

00000478 <USART_NineBits_GetChar>:
 *  \param usart      The USART module.
 *
 *  \retval           Received data.
 */
uint16_t USART_NineBits_GetChar(USART_t * usart)
{
     478:	fc 01       	movw	r30, r24
	if(usart->CTRLB & USART_RXB8_bm) {
     47a:	84 81       	ldd	r24, Z+4	; 0x04
     47c:	80 ff       	sbrs	r24, 0
     47e:	04 c0       	rjmp	.+8      	; 0x488 <USART_NineBits_GetChar+0x10>
		return(0x0100 | usart->DATA);
     480:	80 81       	ld	r24, Z
     482:	90 e0       	ldi	r25, 0x00	; 0
     484:	91 60       	ori	r25, 0x01	; 1
     486:	08 95       	ret
	}else {
		return(usart->DATA);
     488:	80 81       	ld	r24, Z
     48a:	90 e0       	ldi	r25, 0x00	; 0
	}
}
     48c:	08 95       	ret

0000048e <platform_init>:
#include "hal.h"
#include "xmega_hal.h"

void platform_init(void)
{  
    OSC.XOSCCTRL = 0x00;
     48e:	10 92 52 00 	sts	0x0052, r1
    OSC.PLLCTRL = 0x00;
     492:	10 92 55 00 	sts	0x0055, r1
    OSC.CTRL |= OSC_XOSCEN_bm;
     496:	80 91 50 00 	lds	r24, 0x0050
     49a:	88 60       	ori	r24, 0x08	; 8
     49c:	80 93 50 00 	sts	0x0050, r24
    
    //wait for clock
    while((OSC.STATUS & OSC_XOSCRDY_bm) == 0);
     4a0:	80 91 51 00 	lds	r24, 0x0051
     4a4:	83 ff       	sbrs	r24, 3
     4a6:	fc cf       	rjmp	.-8      	; 0x4a0 <platform_init+0x12>
    
    //Switch clock source
    CCP = CCP_IOREG_gc;
     4a8:	88 ed       	ldi	r24, 0xD8	; 216
     4aa:	84 bf       	out	0x34, r24	; 52
    CLK.CTRL = CLK_SCLKSEL_XOSC_gc;    
     4ac:	83 e0       	ldi	r24, 0x03	; 3
     4ae:	80 93 40 00 	sts	0x0040, r24
    
    //Turn off other sources besides external    
    OSC.CTRL = OSC_XOSCEN_bm;
     4b2:	88 e0       	ldi	r24, 0x08	; 8
     4b4:	80 93 50 00 	sts	0x0050, r24
    
 #if PLATFORM == CW303
    PORTA.DIRSET = PIN5_bm | PIN6_bm;
     4b8:	80 e6       	ldi	r24, 0x60	; 96
     4ba:	80 93 01 06 	sts	0x0601, r24
    PORTA.OUTSET = PIN5_bm | PIN6_bm;
     4be:	80 93 05 06 	sts	0x0605, r24
     4c2:	08 95       	ret

000004c4 <lea_encrypt_core>:
		X3 >>=8;
	}

}

void lea_encrypt_core(lea_cipher_state_t* state, const LEA_KEY *key){
     4c4:	2f 92       	push	r2
     4c6:	3f 92       	push	r3
     4c8:	4f 92       	push	r4
     4ca:	5f 92       	push	r5
     4cc:	6f 92       	push	r6
     4ce:	7f 92       	push	r7
     4d0:	8f 92       	push	r8
     4d2:	9f 92       	push	r9
     4d4:	af 92       	push	r10
     4d6:	bf 92       	push	r11
     4d8:	cf 92       	push	r12
     4da:	df 92       	push	r13
     4dc:	ef 92       	push	r14
     4de:	ff 92       	push	r15
     4e0:	0f 93       	push	r16
     4e2:	1f 93       	push	r17
     4e4:	cf 93       	push	r28
     4e6:	df 93       	push	r29
     4e8:	1c 01       	movw	r2, r24
     4ea:	fb 01       	movw	r30, r22
void lea_enc_round(lea_cipher_state_t* state,const LEA_KEY *key){
	// state : 16byte state ->s[i]
	uint32_t X0,X1,X2,X3;
	
	const uint32_t* _mk = (const uint32_t*)state->s;
	X0 = loadU32(_mk[0]);
     4ec:	dc 01       	movw	r26, r24
     4ee:	4d 90       	ld	r4, X+
     4f0:	5d 90       	ld	r5, X+
     4f2:	6d 90       	ld	r6, X+
     4f4:	7c 90       	ld	r7, X
     4f6:	13 97       	sbiw	r26, 0x03	; 3
	X1 = loadU32(_mk[1]);
     4f8:	14 96       	adiw	r26, 0x04	; 4
     4fa:	8d 91       	ld	r24, X+
     4fc:	9d 91       	ld	r25, X+
     4fe:	0d 90       	ld	r0, X+
     500:	bc 91       	ld	r27, X
     502:	a0 2d       	mov	r26, r0
	X2 = loadU32(_mk[2]);
     504:	e1 01       	movw	r28, r2
     506:	48 85       	ldd	r20, Y+8	; 0x08
     508:	59 85       	ldd	r21, Y+9	; 0x09
     50a:	6a 85       	ldd	r22, Y+10	; 0x0a
     50c:	7b 85       	ldd	r23, Y+11	; 0x0b
	X3 = loadU32(_mk[3]);
	
	X3 = ROR((X2 ^ key->rk[  4]) + (X3 ^ key->rk[  5]), 3);
     50e:	cc 84       	ldd	r12, Y+12	; 0x0c
     510:	dd 84       	ldd	r13, Y+13	; 0x0d
     512:	ee 84       	ldd	r14, Y+14	; 0x0e
     514:	ff 84       	ldd	r15, Y+15	; 0x0f
     516:	04 89       	ldd	r16, Z+20	; 0x14
     518:	15 89       	ldd	r17, Z+21	; 0x15
     51a:	26 89       	ldd	r18, Z+22	; 0x16
     51c:	37 89       	ldd	r19, Z+23	; 0x17
     51e:	c0 26       	eor	r12, r16
     520:	d1 26       	eor	r13, r17
     522:	e2 26       	eor	r14, r18
     524:	f3 26       	eor	r15, r19
     526:	00 89       	ldd	r16, Z+16	; 0x10
     528:	11 89       	ldd	r17, Z+17	; 0x11
     52a:	22 89       	ldd	r18, Z+18	; 0x12
     52c:	33 89       	ldd	r19, Z+19	; 0x13
     52e:	04 27       	eor	r16, r20
     530:	15 27       	eor	r17, r21
     532:	26 27       	eor	r18, r22
     534:	37 27       	eor	r19, r23
     536:	c0 0e       	add	r12, r16
     538:	d1 1e       	adc	r13, r17
     53a:	e2 1e       	adc	r14, r18
     53c:	f3 1e       	adc	r15, r19
     53e:	97 01       	movw	r18, r14
     540:	86 01       	movw	r16, r12
     542:	c3 e0       	ldi	r28, 0x03	; 3
     544:	36 95       	lsr	r19
     546:	27 95       	ror	r18
     548:	17 95       	ror	r17
     54a:	07 95       	ror	r16
     54c:	ca 95       	dec	r28
     54e:	d1 f7       	brne	.-12     	; 0x544 <lea_encrypt_core+0x80>
     550:	dd e1       	ldi	r29, 0x1D	; 29
     552:	cc 0c       	add	r12, r12
     554:	dd 1c       	adc	r13, r13
     556:	ee 1c       	adc	r14, r14
     558:	ff 1c       	adc	r15, r15
     55a:	da 95       	dec	r29
     55c:	d1 f7       	brne	.-12     	; 0x552 <lea_encrypt_core+0x8e>
     55e:	c0 2a       	or	r12, r16
     560:	d1 2a       	or	r13, r17
     562:	e2 2a       	or	r14, r18
     564:	f3 2a       	or	r15, r19
	X2 = ROR((X1 ^ key->rk[  2]) + (X2 ^ key->rk[  3]), 5);
     566:	84 84       	ldd	r8, Z+12	; 0x0c
     568:	95 84       	ldd	r9, Z+13	; 0x0d
     56a:	a6 84       	ldd	r10, Z+14	; 0x0e
     56c:	b7 84       	ldd	r11, Z+15	; 0x0f
     56e:	84 26       	eor	r8, r20
     570:	95 26       	eor	r9, r21
     572:	a6 26       	eor	r10, r22
     574:	b7 26       	eor	r11, r23
     576:	40 85       	ldd	r20, Z+8	; 0x08
     578:	51 85       	ldd	r21, Z+9	; 0x09
     57a:	62 85       	ldd	r22, Z+10	; 0x0a
     57c:	73 85       	ldd	r23, Z+11	; 0x0b
     57e:	48 27       	eor	r20, r24
     580:	59 27       	eor	r21, r25
     582:	6a 27       	eor	r22, r26
     584:	7b 27       	eor	r23, r27
     586:	84 0e       	add	r8, r20
     588:	95 1e       	adc	r9, r21
     58a:	a6 1e       	adc	r10, r22
     58c:	b7 1e       	adc	r11, r23
     58e:	b5 01       	movw	r22, r10
     590:	a4 01       	movw	r20, r8
     592:	15 e0       	ldi	r17, 0x05	; 5
     594:	76 95       	lsr	r23
     596:	67 95       	ror	r22
     598:	57 95       	ror	r21
     59a:	47 95       	ror	r20
     59c:	1a 95       	dec	r17
     59e:	d1 f7       	brne	.-12     	; 0x594 <lea_encrypt_core+0xd0>
     5a0:	0b e1       	ldi	r16, 0x1B	; 27
     5a2:	88 0c       	add	r8, r8
     5a4:	99 1c       	adc	r9, r9
     5a6:	aa 1c       	adc	r10, r10
     5a8:	bb 1c       	adc	r11, r11
     5aa:	0a 95       	dec	r16
     5ac:	d1 f7       	brne	.-12     	; 0x5a2 <lea_encrypt_core+0xde>
     5ae:	84 2a       	or	r8, r20
     5b0:	95 2a       	or	r9, r21
     5b2:	a6 2a       	or	r10, r22
     5b4:	b7 2a       	or	r11, r23
	X1 = ROL((X0 ^ key->rk[  0]) + (X1 ^ key->rk[  1]), 9);
     5b6:	04 81       	ldd	r16, Z+4	; 0x04
     5b8:	15 81       	ldd	r17, Z+5	; 0x05
     5ba:	26 81       	ldd	r18, Z+6	; 0x06
     5bc:	37 81       	ldd	r19, Z+7	; 0x07
     5be:	08 27       	eor	r16, r24
     5c0:	19 27       	eor	r17, r25
     5c2:	2a 27       	eor	r18, r26
     5c4:	3b 27       	eor	r19, r27
     5c6:	80 81       	ld	r24, Z
     5c8:	91 81       	ldd	r25, Z+1	; 0x01
     5ca:	a2 81       	ldd	r26, Z+2	; 0x02
     5cc:	b3 81       	ldd	r27, Z+3	; 0x03
     5ce:	84 25       	eor	r24, r4
     5d0:	95 25       	eor	r25, r5
     5d2:	a6 25       	eor	r26, r6
     5d4:	b7 25       	eor	r27, r7
     5d6:	08 0f       	add	r16, r24
     5d8:	19 1f       	adc	r17, r25
     5da:	2a 1f       	adc	r18, r26
     5dc:	3b 1f       	adc	r19, r27
     5de:	d9 01       	movw	r26, r18
     5e0:	c8 01       	movw	r24, r16
     5e2:	47 e1       	ldi	r20, 0x17	; 23
     5e4:	b6 95       	lsr	r27
     5e6:	a7 95       	ror	r26
     5e8:	97 95       	ror	r25
     5ea:	87 95       	ror	r24
     5ec:	4a 95       	dec	r20
     5ee:	d1 f7       	brne	.-12     	; 0x5e4 <lea_encrypt_core+0x120>
     5f0:	59 e0       	ldi	r21, 0x09	; 9
     5f2:	00 0f       	add	r16, r16
     5f4:	11 1f       	adc	r17, r17
     5f6:	22 1f       	adc	r18, r18
     5f8:	33 1f       	adc	r19, r19
     5fa:	5a 95       	dec	r21
     5fc:	d1 f7       	brne	.-12     	; 0x5f2 <lea_encrypt_core+0x12e>
     5fe:	08 2b       	or	r16, r24
     600:	19 2b       	or	r17, r25
     602:	2a 2b       	or	r18, r26
     604:	3b 2b       	or	r19, r27
	X0 = ROR((X3 ^ key->rk[ 10]) + (X0 ^ key->rk[ 11]), 3);
     606:	40 a5       	ldd	r20, Z+40	; 0x28
     608:	51 a5       	ldd	r21, Z+41	; 0x29
     60a:	62 a5       	ldd	r22, Z+42	; 0x2a
     60c:	73 a5       	ldd	r23, Z+43	; 0x2b
     60e:	4c 25       	eor	r20, r12
     610:	5d 25       	eor	r21, r13
     612:	6e 25       	eor	r22, r14
     614:	7f 25       	eor	r23, r15
     616:	84 a5       	ldd	r24, Z+44	; 0x2c
     618:	95 a5       	ldd	r25, Z+45	; 0x2d
     61a:	a6 a5       	ldd	r26, Z+46	; 0x2e
     61c:	b7 a5       	ldd	r27, Z+47	; 0x2f
     61e:	84 25       	eor	r24, r4
     620:	95 25       	eor	r25, r5
     622:	a6 25       	eor	r26, r6
     624:	b7 25       	eor	r27, r7
     626:	48 0f       	add	r20, r24
     628:	59 1f       	adc	r21, r25
     62a:	6a 1f       	adc	r22, r26
     62c:	7b 1f       	adc	r23, r27
     62e:	db 01       	movw	r26, r22
     630:	ca 01       	movw	r24, r20
     632:	c3 e0       	ldi	r28, 0x03	; 3
     634:	b6 95       	lsr	r27
     636:	a7 95       	ror	r26
     638:	97 95       	ror	r25
     63a:	87 95       	ror	r24
     63c:	ca 95       	dec	r28
     63e:	d1 f7       	brne	.-12     	; 0x634 <lea_encrypt_core+0x170>
     640:	dd e1       	ldi	r29, 0x1D	; 29
     642:	44 0f       	add	r20, r20
     644:	55 1f       	adc	r21, r21
     646:	66 1f       	adc	r22, r22
     648:	77 1f       	adc	r23, r23
     64a:	da 95       	dec	r29
     64c:	d1 f7       	brne	.-12     	; 0x642 <lea_encrypt_core+0x17e>
     64e:	48 2b       	or	r20, r24
     650:	59 2b       	or	r21, r25
     652:	6a 2b       	or	r22, r26
     654:	7b 2b       	or	r23, r27
	X3 = ROR((X2 ^ key->rk[  8]) + (X3 ^ key->rk[  9]), 5);
     656:	84 a1       	ldd	r24, Z+36	; 0x24
     658:	95 a1       	ldd	r25, Z+37	; 0x25
     65a:	a6 a1       	ldd	r26, Z+38	; 0x26
     65c:	b7 a1       	ldd	r27, Z+39	; 0x27
     65e:	8c 25       	eor	r24, r12
     660:	9d 25       	eor	r25, r13
     662:	ae 25       	eor	r26, r14
     664:	bf 25       	eor	r27, r15
     666:	c0 a0       	ldd	r12, Z+32	; 0x20
     668:	d1 a0       	ldd	r13, Z+33	; 0x21
     66a:	e2 a0       	ldd	r14, Z+34	; 0x22
     66c:	f3 a0       	ldd	r15, Z+35	; 0x23
     66e:	c8 24       	eor	r12, r8
     670:	d9 24       	eor	r13, r9
     672:	ea 24       	eor	r14, r10
     674:	fb 24       	eor	r15, r11
     676:	8c 0d       	add	r24, r12
     678:	9d 1d       	adc	r25, r13
     67a:	ae 1d       	adc	r26, r14
     67c:	bf 1d       	adc	r27, r15
     67e:	6c 01       	movw	r12, r24
     680:	7d 01       	movw	r14, r26
     682:	c5 e0       	ldi	r28, 0x05	; 5
     684:	f6 94       	lsr	r15
     686:	e7 94       	ror	r14
     688:	d7 94       	ror	r13
     68a:	c7 94       	ror	r12
     68c:	ca 95       	dec	r28
     68e:	d1 f7       	brne	.-12     	; 0x684 <lea_encrypt_core+0x1c0>
     690:	db e1       	ldi	r29, 0x1B	; 27
     692:	88 0f       	add	r24, r24
     694:	99 1f       	adc	r25, r25
     696:	aa 1f       	adc	r26, r26
     698:	bb 1f       	adc	r27, r27
     69a:	da 95       	dec	r29
     69c:	d1 f7       	brne	.-12     	; 0x692 <lea_encrypt_core+0x1ce>
     69e:	8c 29       	or	r24, r12
     6a0:	9d 29       	or	r25, r13
     6a2:	ae 29       	or	r26, r14
     6a4:	bf 29       	or	r27, r15
	X2 = ROL((X1 ^ key->rk[  6]) + (X2 ^ key->rk[  7]), 9);
     6a6:	c4 8c       	ldd	r12, Z+28	; 0x1c
     6a8:	d5 8c       	ldd	r13, Z+29	; 0x1d
     6aa:	e6 8c       	ldd	r14, Z+30	; 0x1e
     6ac:	f7 8c       	ldd	r15, Z+31	; 0x1f
     6ae:	c8 24       	eor	r12, r8
     6b0:	d9 24       	eor	r13, r9
     6b2:	ea 24       	eor	r14, r10
     6b4:	fb 24       	eor	r15, r11
     6b6:	80 8c       	ldd	r8, Z+24	; 0x18
     6b8:	91 8c       	ldd	r9, Z+25	; 0x19
     6ba:	a2 8c       	ldd	r10, Z+26	; 0x1a
     6bc:	b3 8c       	ldd	r11, Z+27	; 0x1b
     6be:	80 26       	eor	r8, r16
     6c0:	91 26       	eor	r9, r17
     6c2:	a2 26       	eor	r10, r18
     6c4:	b3 26       	eor	r11, r19
     6c6:	c8 0c       	add	r12, r8
     6c8:	d9 1c       	adc	r13, r9
     6ca:	ea 1c       	adc	r14, r10
     6cc:	fb 1c       	adc	r15, r11
     6ce:	46 01       	movw	r8, r12
     6d0:	57 01       	movw	r10, r14
     6d2:	c7 e1       	ldi	r28, 0x17	; 23
     6d4:	b6 94       	lsr	r11
     6d6:	a7 94       	ror	r10
     6d8:	97 94       	ror	r9
     6da:	87 94       	ror	r8
     6dc:	ca 95       	dec	r28
     6de:	d1 f7       	brne	.-12     	; 0x6d4 <lea_encrypt_core+0x210>
     6e0:	d9 e0       	ldi	r29, 0x09	; 9
     6e2:	cc 0c       	add	r12, r12
     6e4:	dd 1c       	adc	r13, r13
     6e6:	ee 1c       	adc	r14, r14
     6e8:	ff 1c       	adc	r15, r15
     6ea:	da 95       	dec	r29
     6ec:	d1 f7       	brne	.-12     	; 0x6e2 <lea_encrypt_core+0x21e>
     6ee:	c8 28       	or	r12, r8
     6f0:	d9 28       	or	r13, r9
     6f2:	ea 28       	or	r14, r10
     6f4:	fb 28       	or	r15, r11
	X1 = ROR((X0 ^ key->rk[ 16]) + (X1 ^ key->rk[ 17]), 3);
     6f6:	ef 01       	movw	r28, r30
     6f8:	c0 5c       	subi	r28, 0xC0	; 192
     6fa:	df 4f       	sbci	r29, 0xFF	; 255
     6fc:	88 80       	ld	r8, Y
     6fe:	99 80       	ldd	r9, Y+1	; 0x01
     700:	aa 80       	ldd	r10, Y+2	; 0x02
     702:	bb 80       	ldd	r11, Y+3	; 0x03
     704:	84 26       	eor	r8, r20
     706:	95 26       	eor	r9, r21
     708:	a6 26       	eor	r10, r22
     70a:	b7 26       	eor	r11, r23
     70c:	24 96       	adiw	r28, 0x04	; 4
     70e:	48 80       	ld	r4, Y
     710:	59 80       	ldd	r5, Y+1	; 0x01
     712:	6a 80       	ldd	r6, Y+2	; 0x02
     714:	7b 80       	ldd	r7, Y+3	; 0x03
     716:	40 26       	eor	r4, r16
     718:	51 26       	eor	r5, r17
     71a:	62 26       	eor	r6, r18
     71c:	73 26       	eor	r7, r19
     71e:	84 0c       	add	r8, r4
     720:	95 1c       	adc	r9, r5
     722:	a6 1c       	adc	r10, r6
     724:	b7 1c       	adc	r11, r7
     726:	95 01       	movw	r18, r10
     728:	84 01       	movw	r16, r8
     72a:	68 94       	set
     72c:	12 f8       	bld	r1, 2
     72e:	36 95       	lsr	r19
     730:	27 95       	ror	r18
     732:	17 95       	ror	r17
     734:	07 95       	ror	r16
     736:	16 94       	lsr	r1
     738:	d1 f7       	brne	.-12     	; 0x72e <lea_encrypt_core+0x26a>
     73a:	07 2e       	mov	r0, r23
     73c:	7d e1       	ldi	r23, 0x1D	; 29
     73e:	88 0c       	add	r8, r8
     740:	99 1c       	adc	r9, r9
     742:	aa 1c       	adc	r10, r10
     744:	bb 1c       	adc	r11, r11
     746:	7a 95       	dec	r23
     748:	d1 f7       	brne	.-12     	; 0x73e <lea_encrypt_core+0x27a>
     74a:	70 2d       	mov	r23, r0
     74c:	80 2a       	or	r8, r16
     74e:	91 2a       	or	r9, r17
     750:	a2 2a       	or	r10, r18
     752:	b3 2a       	or	r11, r19
	X0 = ROR((X3 ^ key->rk[ 14]) + (X0 ^ key->rk[ 15]), 5);
     754:	04 ad       	ldd	r16, Z+60	; 0x3c
     756:	15 ad       	ldd	r17, Z+61	; 0x3d
     758:	26 ad       	ldd	r18, Z+62	; 0x3e
     75a:	37 ad       	ldd	r19, Z+63	; 0x3f
     75c:	04 27       	eor	r16, r20
     75e:	15 27       	eor	r17, r21
     760:	26 27       	eor	r18, r22
     762:	37 27       	eor	r19, r23
     764:	40 ad       	ldd	r20, Z+56	; 0x38
     766:	51 ad       	ldd	r21, Z+57	; 0x39
     768:	62 ad       	ldd	r22, Z+58	; 0x3a
     76a:	73 ad       	ldd	r23, Z+59	; 0x3b
     76c:	48 27       	eor	r20, r24
     76e:	59 27       	eor	r21, r25
     770:	6a 27       	eor	r22, r26
     772:	7b 27       	eor	r23, r27
     774:	04 0f       	add	r16, r20
     776:	15 1f       	adc	r17, r21
     778:	26 1f       	adc	r18, r22
     77a:	37 1f       	adc	r19, r23
     77c:	b9 01       	movw	r22, r18
     77e:	a8 01       	movw	r20, r16
     780:	68 94       	set
     782:	14 f8       	bld	r1, 4
     784:	76 95       	lsr	r23
     786:	67 95       	ror	r22
     788:	57 95       	ror	r21
     78a:	47 95       	ror	r20
     78c:	16 94       	lsr	r1
     78e:	d1 f7       	brne	.-12     	; 0x784 <lea_encrypt_core+0x2c0>
     790:	0f 2e       	mov	r0, r31
     792:	fb e1       	ldi	r31, 0x1B	; 27
     794:	00 0f       	add	r16, r16
     796:	11 1f       	adc	r17, r17
     798:	22 1f       	adc	r18, r18
     79a:	33 1f       	adc	r19, r19
     79c:	fa 95       	dec	r31
     79e:	d1 f7       	brne	.-12     	; 0x794 <lea_encrypt_core+0x2d0>
     7a0:	f0 2d       	mov	r31, r0
     7a2:	04 2b       	or	r16, r20
     7a4:	15 2b       	or	r17, r21
     7a6:	26 2b       	or	r18, r22
     7a8:	37 2b       	or	r19, r23
	X3 = ROL((X2 ^ key->rk[ 12]) + (X3 ^ key->rk[ 13]), 9);
     7aa:	44 a8       	ldd	r4, Z+52	; 0x34
     7ac:	55 a8       	ldd	r5, Z+53	; 0x35
     7ae:	66 a8       	ldd	r6, Z+54	; 0x36
     7b0:	77 a8       	ldd	r7, Z+55	; 0x37
     7b2:	48 26       	eor	r4, r24
     7b4:	59 26       	eor	r5, r25
     7b6:	6a 26       	eor	r6, r26
     7b8:	7b 26       	eor	r7, r27
     7ba:	80 a9       	ldd	r24, Z+48	; 0x30
     7bc:	91 a9       	ldd	r25, Z+49	; 0x31
     7be:	a2 a9       	ldd	r26, Z+50	; 0x32
     7c0:	b3 a9       	ldd	r27, Z+51	; 0x33
     7c2:	8c 25       	eor	r24, r12
     7c4:	9d 25       	eor	r25, r13
     7c6:	ae 25       	eor	r26, r14
     7c8:	bf 25       	eor	r27, r15
     7ca:	48 0e       	add	r4, r24
     7cc:	59 1e       	adc	r5, r25
     7ce:	6a 1e       	adc	r6, r26
     7d0:	7b 1e       	adc	r7, r27
     7d2:	d3 01       	movw	r26, r6
     7d4:	c2 01       	movw	r24, r4
     7d6:	47 e1       	ldi	r20, 0x17	; 23
     7d8:	b6 95       	lsr	r27
     7da:	a7 95       	ror	r26
     7dc:	97 95       	ror	r25
     7de:	87 95       	ror	r24
     7e0:	4a 95       	dec	r20
     7e2:	d1 f7       	brne	.-12     	; 0x7d8 <lea_encrypt_core+0x314>
     7e4:	59 e0       	ldi	r21, 0x09	; 9
     7e6:	44 0c       	add	r4, r4
     7e8:	55 1c       	adc	r5, r5
     7ea:	66 1c       	adc	r6, r6
     7ec:	77 1c       	adc	r7, r7
     7ee:	5a 95       	dec	r21
     7f0:	d1 f7       	brne	.-12     	; 0x7e6 <lea_encrypt_core+0x322>
     7f2:	48 2a       	or	r4, r24
     7f4:	59 2a       	or	r5, r25
     7f6:	6a 2a       	or	r6, r26
     7f8:	7b 2a       	or	r7, r27
	X2 = ROR((X1 ^ key->rk[ 22]) + (X2 ^ key->rk[ 23]), 3);
     7fa:	df 01       	movw	r26, r30
     7fc:	a8 5a       	subi	r26, 0xA8	; 168
     7fe:	bf 4f       	sbci	r27, 0xFF	; 255
     800:	4d 91       	ld	r20, X+
     802:	5d 91       	ld	r21, X+
     804:	6d 91       	ld	r22, X+
     806:	7c 91       	ld	r23, X
     808:	13 97       	sbiw	r26, 0x03	; 3
     80a:	48 25       	eor	r20, r8
     80c:	59 25       	eor	r21, r9
     80e:	6a 25       	eor	r22, r10
     810:	7b 25       	eor	r23, r11
     812:	14 96       	adiw	r26, 0x04	; 4
     814:	8d 91       	ld	r24, X+
     816:	9d 91       	ld	r25, X+
     818:	0d 90       	ld	r0, X+
     81a:	bc 91       	ld	r27, X
     81c:	a0 2d       	mov	r26, r0
     81e:	8c 25       	eor	r24, r12
     820:	9d 25       	eor	r25, r13
     822:	ae 25       	eor	r26, r14
     824:	bf 25       	eor	r27, r15
     826:	48 0f       	add	r20, r24
     828:	59 1f       	adc	r21, r25
     82a:	6a 1f       	adc	r22, r26
     82c:	7b 1f       	adc	r23, r27
     82e:	db 01       	movw	r26, r22
     830:	ca 01       	movw	r24, r20
     832:	68 94       	set
     834:	12 f8       	bld	r1, 2
     836:	b6 95       	lsr	r27
     838:	a7 95       	ror	r26
     83a:	97 95       	ror	r25
     83c:	87 95       	ror	r24
     83e:	16 94       	lsr	r1
     840:	d1 f7       	brne	.-12     	; 0x836 <lea_encrypt_core+0x372>
     842:	03 2e       	mov	r0, r19
     844:	3d e1       	ldi	r19, 0x1D	; 29
     846:	44 0f       	add	r20, r20
     848:	55 1f       	adc	r21, r21
     84a:	66 1f       	adc	r22, r22
     84c:	77 1f       	adc	r23, r23
     84e:	3a 95       	dec	r19
     850:	d1 f7       	brne	.-12     	; 0x846 <lea_encrypt_core+0x382>
     852:	30 2d       	mov	r19, r0
     854:	48 2b       	or	r20, r24
     856:	59 2b       	or	r21, r25
     858:	6a 2b       	or	r22, r26
     85a:	7b 2b       	or	r23, r27
	X1 = ROR((X0 ^ key->rk[ 20]) + (X1 ^ key->rk[ 21]), 5);
     85c:	df 01       	movw	r26, r30
     85e:	ac 5a       	subi	r26, 0xAC	; 172
     860:	bf 4f       	sbci	r27, 0xFF	; 255
     862:	cd 90       	ld	r12, X+
     864:	dd 90       	ld	r13, X+
     866:	ed 90       	ld	r14, X+
     868:	fc 90       	ld	r15, X
     86a:	13 97       	sbiw	r26, 0x03	; 3
     86c:	c8 24       	eor	r12, r8
     86e:	d9 24       	eor	r13, r9
     870:	ea 24       	eor	r14, r10
     872:	fb 24       	eor	r15, r11
     874:	14 97       	sbiw	r26, 0x04	; 4
     876:	8d 91       	ld	r24, X+
     878:	9d 91       	ld	r25, X+
     87a:	0d 90       	ld	r0, X+
     87c:	bc 91       	ld	r27, X
     87e:	a0 2d       	mov	r26, r0
     880:	80 27       	eor	r24, r16
     882:	91 27       	eor	r25, r17
     884:	a2 27       	eor	r26, r18
     886:	b3 27       	eor	r27, r19
     888:	c8 0e       	add	r12, r24
     88a:	d9 1e       	adc	r13, r25
     88c:	ea 1e       	adc	r14, r26
     88e:	fb 1e       	adc	r15, r27
     890:	d7 01       	movw	r26, r14
     892:	c6 01       	movw	r24, r12
     894:	68 94       	set
     896:	14 f8       	bld	r1, 4
     898:	b6 95       	lsr	r27
     89a:	a7 95       	ror	r26
     89c:	97 95       	ror	r25
     89e:	87 95       	ror	r24
     8a0:	16 94       	lsr	r1
     8a2:	d1 f7       	brne	.-12     	; 0x898 <lea_encrypt_core+0x3d4>
     8a4:	0b 2e       	mov	r0, r27
     8a6:	bb e1       	ldi	r27, 0x1B	; 27
     8a8:	cc 0c       	add	r12, r12
     8aa:	dd 1c       	adc	r13, r13
     8ac:	ee 1c       	adc	r14, r14
     8ae:	ff 1c       	adc	r15, r15
     8b0:	ba 95       	dec	r27
     8b2:	d1 f7       	brne	.-12     	; 0x8a8 <lea_encrypt_core+0x3e4>
     8b4:	b0 2d       	mov	r27, r0
     8b6:	c8 2a       	or	r12, r24
     8b8:	d9 2a       	or	r13, r25
     8ba:	ea 2a       	or	r14, r26
     8bc:	fb 2a       	or	r15, r27
	X0 = ROL((X3 ^ key->rk[ 18]) + (X0 ^ key->rk[ 19]), 9);
     8be:	df 01       	movw	r26, r30
     8c0:	a4 5b       	subi	r26, 0xB4	; 180
     8c2:	bf 4f       	sbci	r27, 0xFF	; 255
     8c4:	8d 90       	ld	r8, X+
     8c6:	9d 90       	ld	r9, X+
     8c8:	ad 90       	ld	r10, X+
     8ca:	bc 90       	ld	r11, X
     8cc:	13 97       	sbiw	r26, 0x03	; 3
     8ce:	80 26       	eor	r8, r16
     8d0:	91 26       	eor	r9, r17
     8d2:	a2 26       	eor	r10, r18
     8d4:	b3 26       	eor	r11, r19
     8d6:	14 97       	sbiw	r26, 0x04	; 4
     8d8:	8d 91       	ld	r24, X+
     8da:	9d 91       	ld	r25, X+
     8dc:	0d 90       	ld	r0, X+
     8de:	bc 91       	ld	r27, X
     8e0:	a0 2d       	mov	r26, r0
     8e2:	84 25       	eor	r24, r4
     8e4:	95 25       	eor	r25, r5
     8e6:	a6 25       	eor	r26, r6
     8e8:	b7 25       	eor	r27, r7
     8ea:	88 0e       	add	r8, r24
     8ec:	99 1e       	adc	r9, r25
     8ee:	aa 1e       	adc	r10, r26
     8f0:	bb 1e       	adc	r11, r27
     8f2:	d5 01       	movw	r26, r10
     8f4:	c4 01       	movw	r24, r8
     8f6:	27 e1       	ldi	r18, 0x17	; 23
     8f8:	b6 95       	lsr	r27
     8fa:	a7 95       	ror	r26
     8fc:	97 95       	ror	r25
     8fe:	87 95       	ror	r24
     900:	2a 95       	dec	r18
     902:	d1 f7       	brne	.-12     	; 0x8f8 <lea_encrypt_core+0x434>
     904:	39 e0       	ldi	r19, 0x09	; 9
     906:	88 0c       	add	r8, r8
     908:	99 1c       	adc	r9, r9
     90a:	aa 1c       	adc	r10, r10
     90c:	bb 1c       	adc	r11, r11
     90e:	3a 95       	dec	r19
     910:	d1 f7       	brne	.-12     	; 0x906 <lea_encrypt_core+0x442>
     912:	88 2a       	or	r8, r24
     914:	99 2a       	or	r9, r25
     916:	aa 2a       	or	r10, r26
     918:	bb 2a       	or	r11, r27
	
	X3 = ROR((X2 ^ key->rk[ 28]) + (X3 ^ key->rk[ 29]), 3);
     91a:	df 01       	movw	r26, r30
     91c:	a0 59       	subi	r26, 0x90	; 144
     91e:	bf 4f       	sbci	r27, 0xFF	; 255
     920:	0d 91       	ld	r16, X+
     922:	1d 91       	ld	r17, X+
     924:	2d 91       	ld	r18, X+
     926:	3c 91       	ld	r19, X
     928:	13 97       	sbiw	r26, 0x03	; 3
     92a:	04 27       	eor	r16, r20
     92c:	15 27       	eor	r17, r21
     92e:	26 27       	eor	r18, r22
     930:	37 27       	eor	r19, r23
     932:	14 96       	adiw	r26, 0x04	; 4
     934:	8d 91       	ld	r24, X+
     936:	9d 91       	ld	r25, X+
     938:	0d 90       	ld	r0, X+
     93a:	bc 91       	ld	r27, X
     93c:	a0 2d       	mov	r26, r0
     93e:	84 25       	eor	r24, r4
     940:	95 25       	eor	r25, r5
     942:	a6 25       	eor	r26, r6
     944:	b7 25       	eor	r27, r7
     946:	08 0f       	add	r16, r24
     948:	19 1f       	adc	r17, r25
     94a:	2a 1f       	adc	r18, r26
     94c:	3b 1f       	adc	r19, r27
     94e:	d9 01       	movw	r26, r18
     950:	c8 01       	movw	r24, r16
     952:	68 94       	set
     954:	12 f8       	bld	r1, 2
     956:	b6 95       	lsr	r27
     958:	a7 95       	ror	r26
     95a:	97 95       	ror	r25
     95c:	87 95       	ror	r24
     95e:	16 94       	lsr	r1
     960:	d1 f7       	brne	.-12     	; 0x956 <lea_encrypt_core+0x492>
     962:	0f 2e       	mov	r0, r31
     964:	fd e1       	ldi	r31, 0x1D	; 29
     966:	00 0f       	add	r16, r16
     968:	11 1f       	adc	r17, r17
     96a:	22 1f       	adc	r18, r18
     96c:	33 1f       	adc	r19, r19
     96e:	fa 95       	dec	r31
     970:	d1 f7       	brne	.-12     	; 0x966 <lea_encrypt_core+0x4a2>
     972:	f0 2d       	mov	r31, r0
     974:	08 2b       	or	r16, r24
     976:	19 2b       	or	r17, r25
     978:	2a 2b       	or	r18, r26
     97a:	3b 2b       	or	r19, r27
	X2 = ROR((X1 ^ key->rk[ 26]) + (X2 ^ key->rk[ 27]), 5);
     97c:	df 01       	movw	r26, r30
     97e:	a4 59       	subi	r26, 0x94	; 148
     980:	bf 4f       	sbci	r27, 0xFF	; 255
     982:	4d 90       	ld	r4, X+
     984:	5d 90       	ld	r5, X+
     986:	6d 90       	ld	r6, X+
     988:	7c 90       	ld	r7, X
     98a:	13 97       	sbiw	r26, 0x03	; 3
     98c:	44 26       	eor	r4, r20
     98e:	55 26       	eor	r5, r21
     990:	66 26       	eor	r6, r22
     992:	77 26       	eor	r7, r23
     994:	14 97       	sbiw	r26, 0x04	; 4
     996:	8d 91       	ld	r24, X+
     998:	9d 91       	ld	r25, X+
     99a:	0d 90       	ld	r0, X+
     99c:	bc 91       	ld	r27, X
     99e:	a0 2d       	mov	r26, r0
     9a0:	8c 25       	eor	r24, r12
     9a2:	9d 25       	eor	r25, r13
     9a4:	ae 25       	eor	r26, r14
     9a6:	bf 25       	eor	r27, r15
     9a8:	48 0e       	add	r4, r24
     9aa:	59 1e       	adc	r5, r25
     9ac:	6a 1e       	adc	r6, r26
     9ae:	7b 1e       	adc	r7, r27
     9b0:	d3 01       	movw	r26, r6
     9b2:	c2 01       	movw	r24, r4
     9b4:	45 e0       	ldi	r20, 0x05	; 5
     9b6:	b6 95       	lsr	r27
     9b8:	a7 95       	ror	r26
     9ba:	97 95       	ror	r25
     9bc:	87 95       	ror	r24
     9be:	4a 95       	dec	r20
     9c0:	d1 f7       	brne	.-12     	; 0x9b6 <lea_encrypt_core+0x4f2>
     9c2:	5b e1       	ldi	r21, 0x1B	; 27
     9c4:	44 0c       	add	r4, r4
     9c6:	55 1c       	adc	r5, r5
     9c8:	66 1c       	adc	r6, r6
     9ca:	77 1c       	adc	r7, r7
     9cc:	5a 95       	dec	r21
     9ce:	d1 f7       	brne	.-12     	; 0x9c4 <lea_encrypt_core+0x500>
     9d0:	48 2a       	or	r4, r24
     9d2:	59 2a       	or	r5, r25
     9d4:	6a 2a       	or	r6, r26
     9d6:	7b 2a       	or	r7, r27
	X1 = ROL((X0 ^ key->rk[ 24]) + (X1 ^ key->rk[ 25]), 9);
     9d8:	df 01       	movw	r26, r30
     9da:	ac 59       	subi	r26, 0x9C	; 156
     9dc:	bf 4f       	sbci	r27, 0xFF	; 255
     9de:	4d 91       	ld	r20, X+
     9e0:	5d 91       	ld	r21, X+
     9e2:	6d 91       	ld	r22, X+
     9e4:	7c 91       	ld	r23, X
     9e6:	13 97       	sbiw	r26, 0x03	; 3
     9e8:	4c 25       	eor	r20, r12
     9ea:	5d 25       	eor	r21, r13
     9ec:	6e 25       	eor	r22, r14
     9ee:	7f 25       	eor	r23, r15
     9f0:	14 97       	sbiw	r26, 0x04	; 4
     9f2:	8d 91       	ld	r24, X+
     9f4:	9d 91       	ld	r25, X+
     9f6:	0d 90       	ld	r0, X+
     9f8:	bc 91       	ld	r27, X
     9fa:	a0 2d       	mov	r26, r0
     9fc:	88 25       	eor	r24, r8
     9fe:	99 25       	eor	r25, r9
     a00:	aa 25       	eor	r26, r10
     a02:	bb 25       	eor	r27, r11
     a04:	48 0f       	add	r20, r24
     a06:	59 1f       	adc	r21, r25
     a08:	6a 1f       	adc	r22, r26
     a0a:	7b 1f       	adc	r23, r27
     a0c:	db 01       	movw	r26, r22
     a0e:	ca 01       	movw	r24, r20
     a10:	07 2e       	mov	r0, r23
     a12:	77 e1       	ldi	r23, 0x17	; 23
     a14:	b6 95       	lsr	r27
     a16:	a7 95       	ror	r26
     a18:	97 95       	ror	r25
     a1a:	87 95       	ror	r24
     a1c:	7a 95       	dec	r23
     a1e:	d1 f7       	brne	.-12     	; 0xa14 <lea_encrypt_core+0x550>
     a20:	70 2d       	mov	r23, r0
     a22:	03 2e       	mov	r0, r19
     a24:	39 e0       	ldi	r19, 0x09	; 9
     a26:	44 0f       	add	r20, r20
     a28:	55 1f       	adc	r21, r21
     a2a:	66 1f       	adc	r22, r22
     a2c:	77 1f       	adc	r23, r23
     a2e:	3a 95       	dec	r19
     a30:	d1 f7       	brne	.-12     	; 0xa26 <lea_encrypt_core+0x562>
     a32:	30 2d       	mov	r19, r0
     a34:	48 2b       	or	r20, r24
     a36:	59 2b       	or	r21, r25
     a38:	6a 2b       	or	r22, r26
     a3a:	7b 2b       	or	r23, r27
	X0 = ROR((X3 ^ key->rk[ 34]) + (X0 ^ key->rk[ 35]), 3);
     a3c:	df 01       	movw	r26, r30
     a3e:	a8 57       	subi	r26, 0x78	; 120
     a40:	bf 4f       	sbci	r27, 0xFF	; 255
     a42:	cd 90       	ld	r12, X+
     a44:	dd 90       	ld	r13, X+
     a46:	ed 90       	ld	r14, X+
     a48:	fc 90       	ld	r15, X
     a4a:	13 97       	sbiw	r26, 0x03	; 3
     a4c:	c0 26       	eor	r12, r16
     a4e:	d1 26       	eor	r13, r17
     a50:	e2 26       	eor	r14, r18
     a52:	f3 26       	eor	r15, r19
     a54:	14 96       	adiw	r26, 0x04	; 4
     a56:	8d 91       	ld	r24, X+
     a58:	9d 91       	ld	r25, X+
     a5a:	0d 90       	ld	r0, X+
     a5c:	bc 91       	ld	r27, X
     a5e:	a0 2d       	mov	r26, r0
     a60:	88 25       	eor	r24, r8
     a62:	99 25       	eor	r25, r9
     a64:	aa 25       	eor	r26, r10
     a66:	bb 25       	eor	r27, r11
     a68:	c8 0e       	add	r12, r24
     a6a:	d9 1e       	adc	r13, r25
     a6c:	ea 1e       	adc	r14, r26
     a6e:	fb 1e       	adc	r15, r27
     a70:	d7 01       	movw	r26, r14
     a72:	c6 01       	movw	r24, r12
     a74:	68 94       	set
     a76:	12 f8       	bld	r1, 2
     a78:	b6 95       	lsr	r27
     a7a:	a7 95       	ror	r26
     a7c:	97 95       	ror	r25
     a7e:	87 95       	ror	r24
     a80:	16 94       	lsr	r1
     a82:	d1 f7       	brne	.-12     	; 0xa78 <lea_encrypt_core+0x5b4>
     a84:	0b 2e       	mov	r0, r27
     a86:	bd e1       	ldi	r27, 0x1D	; 29
     a88:	cc 0c       	add	r12, r12
     a8a:	dd 1c       	adc	r13, r13
     a8c:	ee 1c       	adc	r14, r14
     a8e:	ff 1c       	adc	r15, r15
     a90:	ba 95       	dec	r27
     a92:	d1 f7       	brne	.-12     	; 0xa88 <lea_encrypt_core+0x5c4>
     a94:	b0 2d       	mov	r27, r0
     a96:	c8 2a       	or	r12, r24
     a98:	d9 2a       	or	r13, r25
     a9a:	ea 2a       	or	r14, r26
     a9c:	fb 2a       	or	r15, r27
	X3 = ROR((X2 ^ key->rk[ 32]) + (X3 ^ key->rk[ 33]), 5);
     a9e:	df 01       	movw	r26, r30
     aa0:	ac 57       	subi	r26, 0x7C	; 124
     aa2:	bf 4f       	sbci	r27, 0xFF	; 255
     aa4:	8d 90       	ld	r8, X+
     aa6:	9d 90       	ld	r9, X+
     aa8:	ad 90       	ld	r10, X+
     aaa:	bc 90       	ld	r11, X
     aac:	13 97       	sbiw	r26, 0x03	; 3
     aae:	80 26       	eor	r8, r16
     ab0:	91 26       	eor	r9, r17
     ab2:	a2 26       	eor	r10, r18
     ab4:	b3 26       	eor	r11, r19
     ab6:	14 97       	sbiw	r26, 0x04	; 4
     ab8:	8d 91       	ld	r24, X+
     aba:	9d 91       	ld	r25, X+
     abc:	0d 90       	ld	r0, X+
     abe:	bc 91       	ld	r27, X
     ac0:	a0 2d       	mov	r26, r0
     ac2:	84 25       	eor	r24, r4
     ac4:	95 25       	eor	r25, r5
     ac6:	a6 25       	eor	r26, r6
     ac8:	b7 25       	eor	r27, r7
     aca:	88 0e       	add	r8, r24
     acc:	99 1e       	adc	r9, r25
     ace:	aa 1e       	adc	r10, r26
     ad0:	bb 1e       	adc	r11, r27
     ad2:	d5 01       	movw	r26, r10
     ad4:	c4 01       	movw	r24, r8
     ad6:	25 e0       	ldi	r18, 0x05	; 5
     ad8:	b6 95       	lsr	r27
     ada:	a7 95       	ror	r26
     adc:	97 95       	ror	r25
     ade:	87 95       	ror	r24
     ae0:	2a 95       	dec	r18
     ae2:	d1 f7       	brne	.-12     	; 0xad8 <lea_encrypt_core+0x614>
     ae4:	3b e1       	ldi	r19, 0x1B	; 27
     ae6:	88 0c       	add	r8, r8
     ae8:	99 1c       	adc	r9, r9
     aea:	aa 1c       	adc	r10, r10
     aec:	bb 1c       	adc	r11, r11
     aee:	3a 95       	dec	r19
     af0:	d1 f7       	brne	.-12     	; 0xae6 <lea_encrypt_core+0x622>
     af2:	88 2a       	or	r8, r24
     af4:	99 2a       	or	r9, r25
     af6:	aa 2a       	or	r10, r26
     af8:	bb 2a       	or	r11, r27
	X2 = ROL((X1 ^ key->rk[ 30]) + (X2 ^ key->rk[ 31]), 9);
     afa:	df 01       	movw	r26, r30
     afc:	a4 58       	subi	r26, 0x84	; 132
     afe:	bf 4f       	sbci	r27, 0xFF	; 255
     b00:	0d 91       	ld	r16, X+
     b02:	1d 91       	ld	r17, X+
     b04:	2d 91       	ld	r18, X+
     b06:	3c 91       	ld	r19, X
     b08:	13 97       	sbiw	r26, 0x03	; 3
     b0a:	04 25       	eor	r16, r4
     b0c:	15 25       	eor	r17, r5
     b0e:	26 25       	eor	r18, r6
     b10:	37 25       	eor	r19, r7
     b12:	14 97       	sbiw	r26, 0x04	; 4
     b14:	8d 91       	ld	r24, X+
     b16:	9d 91       	ld	r25, X+
     b18:	0d 90       	ld	r0, X+
     b1a:	bc 91       	ld	r27, X
     b1c:	a0 2d       	mov	r26, r0
     b1e:	84 27       	eor	r24, r20
     b20:	95 27       	eor	r25, r21
     b22:	a6 27       	eor	r26, r22
     b24:	b7 27       	eor	r27, r23
     b26:	08 0f       	add	r16, r24
     b28:	19 1f       	adc	r17, r25
     b2a:	2a 1f       	adc	r18, r26
     b2c:	3b 1f       	adc	r19, r27
     b2e:	d9 01       	movw	r26, r18
     b30:	c8 01       	movw	r24, r16
     b32:	07 2e       	mov	r0, r23
     b34:	77 e1       	ldi	r23, 0x17	; 23
     b36:	b6 95       	lsr	r27
     b38:	a7 95       	ror	r26
     b3a:	97 95       	ror	r25
     b3c:	87 95       	ror	r24
     b3e:	7a 95       	dec	r23
     b40:	d1 f7       	brne	.-12     	; 0xb36 <lea_encrypt_core+0x672>
     b42:	70 2d       	mov	r23, r0
     b44:	0f 2e       	mov	r0, r31
     b46:	f9 e0       	ldi	r31, 0x09	; 9
     b48:	00 0f       	add	r16, r16
     b4a:	11 1f       	adc	r17, r17
     b4c:	22 1f       	adc	r18, r18
     b4e:	33 1f       	adc	r19, r19
     b50:	fa 95       	dec	r31
     b52:	d1 f7       	brne	.-12     	; 0xb48 <lea_encrypt_core+0x684>
     b54:	f0 2d       	mov	r31, r0
     b56:	08 2b       	or	r16, r24
     b58:	19 2b       	or	r17, r25
     b5a:	2a 2b       	or	r18, r26
     b5c:	3b 2b       	or	r19, r27
	X1 = ROR((X0 ^ key->rk[ 40]) + (X1 ^ key->rk[ 41]), 3);
     b5e:	df 01       	movw	r26, r30
     b60:	a0 56       	subi	r26, 0x60	; 96
     b62:	bf 4f       	sbci	r27, 0xFF	; 255
     b64:	4d 90       	ld	r4, X+
     b66:	5d 90       	ld	r5, X+
     b68:	6d 90       	ld	r6, X+
     b6a:	7c 90       	ld	r7, X
     b6c:	13 97       	sbiw	r26, 0x03	; 3
     b6e:	4c 24       	eor	r4, r12
     b70:	5d 24       	eor	r5, r13
     b72:	6e 24       	eor	r6, r14
     b74:	7f 24       	eor	r7, r15
     b76:	14 96       	adiw	r26, 0x04	; 4
     b78:	8d 91       	ld	r24, X+
     b7a:	9d 91       	ld	r25, X+
     b7c:	0d 90       	ld	r0, X+
     b7e:	bc 91       	ld	r27, X
     b80:	a0 2d       	mov	r26, r0
     b82:	84 27       	eor	r24, r20
     b84:	95 27       	eor	r25, r21
     b86:	a6 27       	eor	r26, r22
     b88:	b7 27       	eor	r27, r23
     b8a:	48 0e       	add	r4, r24
     b8c:	59 1e       	adc	r5, r25
     b8e:	6a 1e       	adc	r6, r26
     b90:	7b 1e       	adc	r7, r27
     b92:	d3 01       	movw	r26, r6
     b94:	c2 01       	movw	r24, r4
     b96:	43 e0       	ldi	r20, 0x03	; 3
     b98:	b6 95       	lsr	r27
     b9a:	a7 95       	ror	r26
     b9c:	97 95       	ror	r25
     b9e:	87 95       	ror	r24
     ba0:	4a 95       	dec	r20
     ba2:	d1 f7       	brne	.-12     	; 0xb98 <lea_encrypt_core+0x6d4>
     ba4:	5d e1       	ldi	r21, 0x1D	; 29
     ba6:	44 0c       	add	r4, r4
     ba8:	55 1c       	adc	r5, r5
     baa:	66 1c       	adc	r6, r6
     bac:	77 1c       	adc	r7, r7
     bae:	5a 95       	dec	r21
     bb0:	d1 f7       	brne	.-12     	; 0xba6 <lea_encrypt_core+0x6e2>
     bb2:	48 2a       	or	r4, r24
     bb4:	59 2a       	or	r5, r25
     bb6:	6a 2a       	or	r6, r26
     bb8:	7b 2a       	or	r7, r27
	X0 = ROR((X3 ^ key->rk[ 38]) + (X0 ^ key->rk[ 39]), 5);
     bba:	df 01       	movw	r26, r30
     bbc:	a4 56       	subi	r26, 0x64	; 100
     bbe:	bf 4f       	sbci	r27, 0xFF	; 255
     bc0:	4d 91       	ld	r20, X+
     bc2:	5d 91       	ld	r21, X+
     bc4:	6d 91       	ld	r22, X+
     bc6:	7c 91       	ld	r23, X
     bc8:	13 97       	sbiw	r26, 0x03	; 3
     bca:	4c 25       	eor	r20, r12
     bcc:	5d 25       	eor	r21, r13
     bce:	6e 25       	eor	r22, r14
     bd0:	7f 25       	eor	r23, r15
     bd2:	14 97       	sbiw	r26, 0x04	; 4
     bd4:	8d 91       	ld	r24, X+
     bd6:	9d 91       	ld	r25, X+
     bd8:	0d 90       	ld	r0, X+
     bda:	bc 91       	ld	r27, X
     bdc:	a0 2d       	mov	r26, r0
     bde:	88 25       	eor	r24, r8
     be0:	99 25       	eor	r25, r9
     be2:	aa 25       	eor	r26, r10
     be4:	bb 25       	eor	r27, r11
     be6:	48 0f       	add	r20, r24
     be8:	59 1f       	adc	r21, r25
     bea:	6a 1f       	adc	r22, r26
     bec:	7b 1f       	adc	r23, r27
     bee:	db 01       	movw	r26, r22
     bf0:	ca 01       	movw	r24, r20
     bf2:	68 94       	set
     bf4:	14 f8       	bld	r1, 4
     bf6:	b6 95       	lsr	r27
     bf8:	a7 95       	ror	r26
     bfa:	97 95       	ror	r25
     bfc:	87 95       	ror	r24
     bfe:	16 94       	lsr	r1
     c00:	d1 f7       	brne	.-12     	; 0xbf6 <lea_encrypt_core+0x732>
     c02:	03 2e       	mov	r0, r19
     c04:	3b e1       	ldi	r19, 0x1B	; 27
     c06:	44 0f       	add	r20, r20
     c08:	55 1f       	adc	r21, r21
     c0a:	66 1f       	adc	r22, r22
     c0c:	77 1f       	adc	r23, r23
     c0e:	3a 95       	dec	r19
     c10:	d1 f7       	brne	.-12     	; 0xc06 <lea_encrypt_core+0x742>
     c12:	30 2d       	mov	r19, r0
     c14:	48 2b       	or	r20, r24
     c16:	59 2b       	or	r21, r25
     c18:	6a 2b       	or	r22, r26
     c1a:	7b 2b       	or	r23, r27
	X3 = ROL((X2 ^ key->rk[ 36]) + (X3 ^ key->rk[ 37]), 9);
     c1c:	df 01       	movw	r26, r30
     c1e:	ac 56       	subi	r26, 0x6C	; 108
     c20:	bf 4f       	sbci	r27, 0xFF	; 255
     c22:	cd 90       	ld	r12, X+
     c24:	dd 90       	ld	r13, X+
     c26:	ed 90       	ld	r14, X+
     c28:	fc 90       	ld	r15, X
     c2a:	13 97       	sbiw	r26, 0x03	; 3
     c2c:	c8 24       	eor	r12, r8
     c2e:	d9 24       	eor	r13, r9
     c30:	ea 24       	eor	r14, r10
     c32:	fb 24       	eor	r15, r11
     c34:	14 97       	sbiw	r26, 0x04	; 4
     c36:	8d 91       	ld	r24, X+
     c38:	9d 91       	ld	r25, X+
     c3a:	0d 90       	ld	r0, X+
     c3c:	bc 91       	ld	r27, X
     c3e:	a0 2d       	mov	r26, r0
     c40:	80 27       	eor	r24, r16
     c42:	91 27       	eor	r25, r17
     c44:	a2 27       	eor	r26, r18
     c46:	b3 27       	eor	r27, r19
     c48:	c8 0e       	add	r12, r24
     c4a:	d9 1e       	adc	r13, r25
     c4c:	ea 1e       	adc	r14, r26
     c4e:	fb 1e       	adc	r15, r27
     c50:	d7 01       	movw	r26, r14
     c52:	c6 01       	movw	r24, r12
     c54:	07 2e       	mov	r0, r23
     c56:	77 e1       	ldi	r23, 0x17	; 23
     c58:	b6 95       	lsr	r27
     c5a:	a7 95       	ror	r26
     c5c:	97 95       	ror	r25
     c5e:	87 95       	ror	r24
     c60:	7a 95       	dec	r23
     c62:	d1 f7       	brne	.-12     	; 0xc58 <lea_encrypt_core+0x794>
     c64:	70 2d       	mov	r23, r0
     c66:	0b 2e       	mov	r0, r27
     c68:	b9 e0       	ldi	r27, 0x09	; 9
     c6a:	cc 0c       	add	r12, r12
     c6c:	dd 1c       	adc	r13, r13
     c6e:	ee 1c       	adc	r14, r14
     c70:	ff 1c       	adc	r15, r15
     c72:	ba 95       	dec	r27
     c74:	d1 f7       	brne	.-12     	; 0xc6a <lea_encrypt_core+0x7a6>
     c76:	b0 2d       	mov	r27, r0
     c78:	c8 2a       	or	r12, r24
     c7a:	d9 2a       	or	r13, r25
     c7c:	ea 2a       	or	r14, r26
     c7e:	fb 2a       	or	r15, r27
	X2 = ROR((X1 ^ key->rk[ 46]) + (X2 ^ key->rk[ 47]), 3);
     c80:	df 01       	movw	r26, r30
     c82:	a8 54       	subi	r26, 0x48	; 72
     c84:	bf 4f       	sbci	r27, 0xFF	; 255
     c86:	8d 90       	ld	r8, X+
     c88:	9d 90       	ld	r9, X+
     c8a:	ad 90       	ld	r10, X+
     c8c:	bc 90       	ld	r11, X
     c8e:	13 97       	sbiw	r26, 0x03	; 3
     c90:	84 24       	eor	r8, r4
     c92:	95 24       	eor	r9, r5
     c94:	a6 24       	eor	r10, r6
     c96:	b7 24       	eor	r11, r7
     c98:	14 96       	adiw	r26, 0x04	; 4
     c9a:	8d 91       	ld	r24, X+
     c9c:	9d 91       	ld	r25, X+
     c9e:	0d 90       	ld	r0, X+
     ca0:	bc 91       	ld	r27, X
     ca2:	a0 2d       	mov	r26, r0
     ca4:	80 27       	eor	r24, r16
     ca6:	91 27       	eor	r25, r17
     ca8:	a2 27       	eor	r26, r18
     caa:	b3 27       	eor	r27, r19
     cac:	88 0e       	add	r8, r24
     cae:	99 1e       	adc	r9, r25
     cb0:	aa 1e       	adc	r10, r26
     cb2:	bb 1e       	adc	r11, r27
     cb4:	d5 01       	movw	r26, r10
     cb6:	c4 01       	movw	r24, r8
     cb8:	23 e0       	ldi	r18, 0x03	; 3
     cba:	b6 95       	lsr	r27
     cbc:	a7 95       	ror	r26
     cbe:	97 95       	ror	r25
     cc0:	87 95       	ror	r24
     cc2:	2a 95       	dec	r18
     cc4:	d1 f7       	brne	.-12     	; 0xcba <lea_encrypt_core+0x7f6>
     cc6:	3d e1       	ldi	r19, 0x1D	; 29
     cc8:	88 0c       	add	r8, r8
     cca:	99 1c       	adc	r9, r9
     ccc:	aa 1c       	adc	r10, r10
     cce:	bb 1c       	adc	r11, r11
     cd0:	3a 95       	dec	r19
     cd2:	d1 f7       	brne	.-12     	; 0xcc8 <lea_encrypt_core+0x804>
     cd4:	88 2a       	or	r8, r24
     cd6:	99 2a       	or	r9, r25
     cd8:	aa 2a       	or	r10, r26
     cda:	bb 2a       	or	r11, r27
	X1 = ROR((X0 ^ key->rk[ 44]) + (X1 ^ key->rk[ 45]), 5);
     cdc:	df 01       	movw	r26, r30
     cde:	ac 54       	subi	r26, 0x4C	; 76
     ce0:	bf 4f       	sbci	r27, 0xFF	; 255
     ce2:	0d 91       	ld	r16, X+
     ce4:	1d 91       	ld	r17, X+
     ce6:	2d 91       	ld	r18, X+
     ce8:	3c 91       	ld	r19, X
     cea:	13 97       	sbiw	r26, 0x03	; 3
     cec:	04 25       	eor	r16, r4
     cee:	15 25       	eor	r17, r5
     cf0:	26 25       	eor	r18, r6
     cf2:	37 25       	eor	r19, r7
     cf4:	14 97       	sbiw	r26, 0x04	; 4
     cf6:	8d 91       	ld	r24, X+
     cf8:	9d 91       	ld	r25, X+
     cfa:	0d 90       	ld	r0, X+
     cfc:	bc 91       	ld	r27, X
     cfe:	a0 2d       	mov	r26, r0
     d00:	84 27       	eor	r24, r20
     d02:	95 27       	eor	r25, r21
     d04:	a6 27       	eor	r26, r22
     d06:	b7 27       	eor	r27, r23
     d08:	08 0f       	add	r16, r24
     d0a:	19 1f       	adc	r17, r25
     d0c:	2a 1f       	adc	r18, r26
     d0e:	3b 1f       	adc	r19, r27
     d10:	d9 01       	movw	r26, r18
     d12:	c8 01       	movw	r24, r16
     d14:	68 94       	set
     d16:	14 f8       	bld	r1, 4
     d18:	b6 95       	lsr	r27
     d1a:	a7 95       	ror	r26
     d1c:	97 95       	ror	r25
     d1e:	87 95       	ror	r24
     d20:	16 94       	lsr	r1
     d22:	d1 f7       	brne	.-12     	; 0xd18 <lea_encrypt_core+0x854>
     d24:	0f 2e       	mov	r0, r31
     d26:	fb e1       	ldi	r31, 0x1B	; 27
     d28:	00 0f       	add	r16, r16
     d2a:	11 1f       	adc	r17, r17
     d2c:	22 1f       	adc	r18, r18
     d2e:	33 1f       	adc	r19, r19
     d30:	fa 95       	dec	r31
     d32:	d1 f7       	brne	.-12     	; 0xd28 <lea_encrypt_core+0x864>
     d34:	f0 2d       	mov	r31, r0
     d36:	08 2b       	or	r16, r24
     d38:	19 2b       	or	r17, r25
     d3a:	2a 2b       	or	r18, r26
     d3c:	3b 2b       	or	r19, r27
	X0 = ROL((X3 ^ key->rk[ 42]) + (X0 ^ key->rk[ 43]), 9);
     d3e:	df 01       	movw	r26, r30
     d40:	a4 55       	subi	r26, 0x54	; 84
     d42:	bf 4f       	sbci	r27, 0xFF	; 255
     d44:	4d 90       	ld	r4, X+
     d46:	5d 90       	ld	r5, X+
     d48:	6d 90       	ld	r6, X+
     d4a:	7c 90       	ld	r7, X
     d4c:	13 97       	sbiw	r26, 0x03	; 3
     d4e:	44 26       	eor	r4, r20
     d50:	55 26       	eor	r5, r21
     d52:	66 26       	eor	r6, r22
     d54:	77 26       	eor	r7, r23
     d56:	14 97       	sbiw	r26, 0x04	; 4
     d58:	8d 91       	ld	r24, X+
     d5a:	9d 91       	ld	r25, X+
     d5c:	0d 90       	ld	r0, X+
     d5e:	bc 91       	ld	r27, X
     d60:	a0 2d       	mov	r26, r0
     d62:	8c 25       	eor	r24, r12
     d64:	9d 25       	eor	r25, r13
     d66:	ae 25       	eor	r26, r14
     d68:	bf 25       	eor	r27, r15
     d6a:	48 0e       	add	r4, r24
     d6c:	59 1e       	adc	r5, r25
     d6e:	6a 1e       	adc	r6, r26
     d70:	7b 1e       	adc	r7, r27
     d72:	d3 01       	movw	r26, r6
     d74:	c2 01       	movw	r24, r4
     d76:	47 e1       	ldi	r20, 0x17	; 23
     d78:	b6 95       	lsr	r27
     d7a:	a7 95       	ror	r26
     d7c:	97 95       	ror	r25
     d7e:	87 95       	ror	r24
     d80:	4a 95       	dec	r20
     d82:	d1 f7       	brne	.-12     	; 0xd78 <lea_encrypt_core+0x8b4>
     d84:	59 e0       	ldi	r21, 0x09	; 9
     d86:	44 0c       	add	r4, r4
     d88:	55 1c       	adc	r5, r5
     d8a:	66 1c       	adc	r6, r6
     d8c:	77 1c       	adc	r7, r7
     d8e:	5a 95       	dec	r21
     d90:	d1 f7       	brne	.-12     	; 0xd86 <lea_encrypt_core+0x8c2>
     d92:	48 2a       	or	r4, r24
     d94:	59 2a       	or	r5, r25
     d96:	6a 2a       	or	r6, r26
     d98:	7b 2a       	or	r7, r27

	X3 = ROR((X2 ^ key->rk[ 52]) + (X3 ^ key->rk[ 53]), 3);
     d9a:	df 01       	movw	r26, r30
     d9c:	a0 53       	subi	r26, 0x30	; 48
     d9e:	bf 4f       	sbci	r27, 0xFF	; 255
     da0:	4d 91       	ld	r20, X+
     da2:	5d 91       	ld	r21, X+
     da4:	6d 91       	ld	r22, X+
     da6:	7c 91       	ld	r23, X
     da8:	13 97       	sbiw	r26, 0x03	; 3
     daa:	48 25       	eor	r20, r8
     dac:	59 25       	eor	r21, r9
     dae:	6a 25       	eor	r22, r10
     db0:	7b 25       	eor	r23, r11
     db2:	14 96       	adiw	r26, 0x04	; 4
     db4:	8d 91       	ld	r24, X+
     db6:	9d 91       	ld	r25, X+
     db8:	0d 90       	ld	r0, X+
     dba:	bc 91       	ld	r27, X
     dbc:	a0 2d       	mov	r26, r0
     dbe:	8c 25       	eor	r24, r12
     dc0:	9d 25       	eor	r25, r13
     dc2:	ae 25       	eor	r26, r14
     dc4:	bf 25       	eor	r27, r15
     dc6:	48 0f       	add	r20, r24
     dc8:	59 1f       	adc	r21, r25
     dca:	6a 1f       	adc	r22, r26
     dcc:	7b 1f       	adc	r23, r27
     dce:	db 01       	movw	r26, r22
     dd0:	ca 01       	movw	r24, r20
     dd2:	68 94       	set
     dd4:	12 f8       	bld	r1, 2
     dd6:	b6 95       	lsr	r27
     dd8:	a7 95       	ror	r26
     dda:	97 95       	ror	r25
     ddc:	87 95       	ror	r24
     dde:	16 94       	lsr	r1
     de0:	d1 f7       	brne	.-12     	; 0xdd6 <lea_encrypt_core+0x912>
     de2:	03 2e       	mov	r0, r19
     de4:	3d e1       	ldi	r19, 0x1D	; 29
     de6:	44 0f       	add	r20, r20
     de8:	55 1f       	adc	r21, r21
     dea:	66 1f       	adc	r22, r22
     dec:	77 1f       	adc	r23, r23
     dee:	3a 95       	dec	r19
     df0:	d1 f7       	brne	.-12     	; 0xde6 <lea_encrypt_core+0x922>
     df2:	30 2d       	mov	r19, r0
     df4:	48 2b       	or	r20, r24
     df6:	59 2b       	or	r21, r25
     df8:	6a 2b       	or	r22, r26
     dfa:	7b 2b       	or	r23, r27
	X2 = ROR((X1 ^ key->rk[ 50]) + (X2 ^ key->rk[ 51]), 5);
     dfc:	df 01       	movw	r26, r30
     dfe:	a4 53       	subi	r26, 0x34	; 52
     e00:	bf 4f       	sbci	r27, 0xFF	; 255
     e02:	cd 90       	ld	r12, X+
     e04:	dd 90       	ld	r13, X+
     e06:	ed 90       	ld	r14, X+
     e08:	fc 90       	ld	r15, X
     e0a:	13 97       	sbiw	r26, 0x03	; 3
     e0c:	c8 24       	eor	r12, r8
     e0e:	d9 24       	eor	r13, r9
     e10:	ea 24       	eor	r14, r10
     e12:	fb 24       	eor	r15, r11
     e14:	14 97       	sbiw	r26, 0x04	; 4
     e16:	8d 91       	ld	r24, X+
     e18:	9d 91       	ld	r25, X+
     e1a:	0d 90       	ld	r0, X+
     e1c:	bc 91       	ld	r27, X
     e1e:	a0 2d       	mov	r26, r0
     e20:	80 27       	eor	r24, r16
     e22:	91 27       	eor	r25, r17
     e24:	a2 27       	eor	r26, r18
     e26:	b3 27       	eor	r27, r19
     e28:	c8 0e       	add	r12, r24
     e2a:	d9 1e       	adc	r13, r25
     e2c:	ea 1e       	adc	r14, r26
     e2e:	fb 1e       	adc	r15, r27
     e30:	d7 01       	movw	r26, r14
     e32:	c6 01       	movw	r24, r12
     e34:	68 94       	set
     e36:	14 f8       	bld	r1, 4
     e38:	b6 95       	lsr	r27
     e3a:	a7 95       	ror	r26
     e3c:	97 95       	ror	r25
     e3e:	87 95       	ror	r24
     e40:	16 94       	lsr	r1
     e42:	d1 f7       	brne	.-12     	; 0xe38 <lea_encrypt_core+0x974>
     e44:	0b 2e       	mov	r0, r27
     e46:	bb e1       	ldi	r27, 0x1B	; 27
     e48:	cc 0c       	add	r12, r12
     e4a:	dd 1c       	adc	r13, r13
     e4c:	ee 1c       	adc	r14, r14
     e4e:	ff 1c       	adc	r15, r15
     e50:	ba 95       	dec	r27
     e52:	d1 f7       	brne	.-12     	; 0xe48 <lea_encrypt_core+0x984>
     e54:	b0 2d       	mov	r27, r0
     e56:	c8 2a       	or	r12, r24
     e58:	d9 2a       	or	r13, r25
     e5a:	ea 2a       	or	r14, r26
     e5c:	fb 2a       	or	r15, r27
	X1 = ROL((X0 ^ key->rk[ 48]) + (X1 ^ key->rk[ 49]), 9);
     e5e:	df 01       	movw	r26, r30
     e60:	ac 53       	subi	r26, 0x3C	; 60
     e62:	bf 4f       	sbci	r27, 0xFF	; 255
     e64:	8d 90       	ld	r8, X+
     e66:	9d 90       	ld	r9, X+
     e68:	ad 90       	ld	r10, X+
     e6a:	bc 90       	ld	r11, X
     e6c:	13 97       	sbiw	r26, 0x03	; 3
     e6e:	80 26       	eor	r8, r16
     e70:	91 26       	eor	r9, r17
     e72:	a2 26       	eor	r10, r18
     e74:	b3 26       	eor	r11, r19
     e76:	14 97       	sbiw	r26, 0x04	; 4
     e78:	8d 91       	ld	r24, X+
     e7a:	9d 91       	ld	r25, X+
     e7c:	0d 90       	ld	r0, X+
     e7e:	bc 91       	ld	r27, X
     e80:	a0 2d       	mov	r26, r0
     e82:	84 25       	eor	r24, r4
     e84:	95 25       	eor	r25, r5
     e86:	a6 25       	eor	r26, r6
     e88:	b7 25       	eor	r27, r7
     e8a:	88 0e       	add	r8, r24
     e8c:	99 1e       	adc	r9, r25
     e8e:	aa 1e       	adc	r10, r26
     e90:	bb 1e       	adc	r11, r27
     e92:	d5 01       	movw	r26, r10
     e94:	c4 01       	movw	r24, r8
     e96:	27 e1       	ldi	r18, 0x17	; 23
     e98:	b6 95       	lsr	r27
     e9a:	a7 95       	ror	r26
     e9c:	97 95       	ror	r25
     e9e:	87 95       	ror	r24
     ea0:	2a 95       	dec	r18
     ea2:	d1 f7       	brne	.-12     	; 0xe98 <lea_encrypt_core+0x9d4>
     ea4:	39 e0       	ldi	r19, 0x09	; 9
     ea6:	88 0c       	add	r8, r8
     ea8:	99 1c       	adc	r9, r9
     eaa:	aa 1c       	adc	r10, r10
     eac:	bb 1c       	adc	r11, r11
     eae:	3a 95       	dec	r19
     eb0:	d1 f7       	brne	.-12     	; 0xea6 <lea_encrypt_core+0x9e2>
     eb2:	88 2a       	or	r8, r24
     eb4:	99 2a       	or	r9, r25
     eb6:	aa 2a       	or	r10, r26
     eb8:	bb 2a       	or	r11, r27
	X0 = ROR((X3 ^ key->rk[ 58]) + (X0 ^ key->rk[ 59]), 3);
     eba:	df 01       	movw	r26, r30
     ebc:	a8 51       	subi	r26, 0x18	; 24
     ebe:	bf 4f       	sbci	r27, 0xFF	; 255
     ec0:	0d 91       	ld	r16, X+
     ec2:	1d 91       	ld	r17, X+
     ec4:	2d 91       	ld	r18, X+
     ec6:	3c 91       	ld	r19, X
     ec8:	13 97       	sbiw	r26, 0x03	; 3
     eca:	04 27       	eor	r16, r20
     ecc:	15 27       	eor	r17, r21
     ece:	26 27       	eor	r18, r22
     ed0:	37 27       	eor	r19, r23
     ed2:	14 96       	adiw	r26, 0x04	; 4
     ed4:	8d 91       	ld	r24, X+
     ed6:	9d 91       	ld	r25, X+
     ed8:	0d 90       	ld	r0, X+
     eda:	bc 91       	ld	r27, X
     edc:	a0 2d       	mov	r26, r0
     ede:	84 25       	eor	r24, r4
     ee0:	95 25       	eor	r25, r5
     ee2:	a6 25       	eor	r26, r6
     ee4:	b7 25       	eor	r27, r7
     ee6:	08 0f       	add	r16, r24
     ee8:	19 1f       	adc	r17, r25
     eea:	2a 1f       	adc	r18, r26
     eec:	3b 1f       	adc	r19, r27
     eee:	d9 01       	movw	r26, r18
     ef0:	c8 01       	movw	r24, r16
     ef2:	68 94       	set
     ef4:	12 f8       	bld	r1, 2
     ef6:	b6 95       	lsr	r27
     ef8:	a7 95       	ror	r26
     efa:	97 95       	ror	r25
     efc:	87 95       	ror	r24
     efe:	16 94       	lsr	r1
     f00:	d1 f7       	brne	.-12     	; 0xef6 <lea_encrypt_core+0xa32>
     f02:	0f 2e       	mov	r0, r31
     f04:	fd e1       	ldi	r31, 0x1D	; 29
     f06:	00 0f       	add	r16, r16
     f08:	11 1f       	adc	r17, r17
     f0a:	22 1f       	adc	r18, r18
     f0c:	33 1f       	adc	r19, r19
     f0e:	fa 95       	dec	r31
     f10:	d1 f7       	brne	.-12     	; 0xf06 <lea_encrypt_core+0xa42>
     f12:	f0 2d       	mov	r31, r0
     f14:	08 2b       	or	r16, r24
     f16:	19 2b       	or	r17, r25
     f18:	2a 2b       	or	r18, r26
     f1a:	3b 2b       	or	r19, r27
	X3 = ROR((X2 ^ key->rk[ 56]) + (X3 ^ key->rk[ 57]), 5);
     f1c:	df 01       	movw	r26, r30
     f1e:	ac 51       	subi	r26, 0x1C	; 28
     f20:	bf 4f       	sbci	r27, 0xFF	; 255
     f22:	4d 90       	ld	r4, X+
     f24:	5d 90       	ld	r5, X+
     f26:	6d 90       	ld	r6, X+
     f28:	7c 90       	ld	r7, X
     f2a:	13 97       	sbiw	r26, 0x03	; 3
     f2c:	44 26       	eor	r4, r20
     f2e:	55 26       	eor	r5, r21
     f30:	66 26       	eor	r6, r22
     f32:	77 26       	eor	r7, r23
     f34:	14 97       	sbiw	r26, 0x04	; 4
     f36:	8d 91       	ld	r24, X+
     f38:	9d 91       	ld	r25, X+
     f3a:	0d 90       	ld	r0, X+
     f3c:	bc 91       	ld	r27, X
     f3e:	a0 2d       	mov	r26, r0
     f40:	8c 25       	eor	r24, r12
     f42:	9d 25       	eor	r25, r13
     f44:	ae 25       	eor	r26, r14
     f46:	bf 25       	eor	r27, r15
     f48:	48 0e       	add	r4, r24
     f4a:	59 1e       	adc	r5, r25
     f4c:	6a 1e       	adc	r6, r26
     f4e:	7b 1e       	adc	r7, r27
     f50:	d3 01       	movw	r26, r6
     f52:	c2 01       	movw	r24, r4
     f54:	45 e0       	ldi	r20, 0x05	; 5
     f56:	b6 95       	lsr	r27
     f58:	a7 95       	ror	r26
     f5a:	97 95       	ror	r25
     f5c:	87 95       	ror	r24
     f5e:	4a 95       	dec	r20
     f60:	d1 f7       	brne	.-12     	; 0xf56 <lea_encrypt_core+0xa92>
     f62:	5b e1       	ldi	r21, 0x1B	; 27
     f64:	44 0c       	add	r4, r4
     f66:	55 1c       	adc	r5, r5
     f68:	66 1c       	adc	r6, r6
     f6a:	77 1c       	adc	r7, r7
     f6c:	5a 95       	dec	r21
     f6e:	d1 f7       	brne	.-12     	; 0xf64 <lea_encrypt_core+0xaa0>
     f70:	48 2a       	or	r4, r24
     f72:	59 2a       	or	r5, r25
     f74:	6a 2a       	or	r6, r26
     f76:	7b 2a       	or	r7, r27
	X2 = ROL((X1 ^ key->rk[ 54]) + (X2 ^ key->rk[ 55]), 9);
     f78:	df 01       	movw	r26, r30
     f7a:	a4 52       	subi	r26, 0x24	; 36
     f7c:	bf 4f       	sbci	r27, 0xFF	; 255
     f7e:	4d 91       	ld	r20, X+
     f80:	5d 91       	ld	r21, X+
     f82:	6d 91       	ld	r22, X+
     f84:	7c 91       	ld	r23, X
     f86:	13 97       	sbiw	r26, 0x03	; 3
     f88:	4c 25       	eor	r20, r12
     f8a:	5d 25       	eor	r21, r13
     f8c:	6e 25       	eor	r22, r14
     f8e:	7f 25       	eor	r23, r15
     f90:	14 97       	sbiw	r26, 0x04	; 4
     f92:	8d 91       	ld	r24, X+
     f94:	9d 91       	ld	r25, X+
     f96:	0d 90       	ld	r0, X+
     f98:	bc 91       	ld	r27, X
     f9a:	a0 2d       	mov	r26, r0
     f9c:	88 25       	eor	r24, r8
     f9e:	99 25       	eor	r25, r9
     fa0:	aa 25       	eor	r26, r10
     fa2:	bb 25       	eor	r27, r11
     fa4:	48 0f       	add	r20, r24
     fa6:	59 1f       	adc	r21, r25
     fa8:	6a 1f       	adc	r22, r26
     faa:	7b 1f       	adc	r23, r27
     fac:	db 01       	movw	r26, r22
     fae:	ca 01       	movw	r24, r20
     fb0:	07 2e       	mov	r0, r23
     fb2:	77 e1       	ldi	r23, 0x17	; 23
     fb4:	b6 95       	lsr	r27
     fb6:	a7 95       	ror	r26
     fb8:	97 95       	ror	r25
     fba:	87 95       	ror	r24
     fbc:	7a 95       	dec	r23
     fbe:	d1 f7       	brne	.-12     	; 0xfb4 <lea_encrypt_core+0xaf0>
     fc0:	70 2d       	mov	r23, r0
     fc2:	03 2e       	mov	r0, r19
     fc4:	39 e0       	ldi	r19, 0x09	; 9
     fc6:	44 0f       	add	r20, r20
     fc8:	55 1f       	adc	r21, r21
     fca:	66 1f       	adc	r22, r22
     fcc:	77 1f       	adc	r23, r23
     fce:	3a 95       	dec	r19
     fd0:	d1 f7       	brne	.-12     	; 0xfc6 <lea_encrypt_core+0xb02>
     fd2:	30 2d       	mov	r19, r0
     fd4:	48 2b       	or	r20, r24
     fd6:	59 2b       	or	r21, r25
     fd8:	6a 2b       	or	r22, r26
     fda:	7b 2b       	or	r23, r27
	X1 = ROR((X0 ^ key->rk[ 64]) + (X1 ^ key->rk[ 65]), 3);
     fdc:	df 01       	movw	r26, r30
     fde:	b3 95       	inc	r27
     fe0:	cd 90       	ld	r12, X+
     fe2:	dd 90       	ld	r13, X+
     fe4:	ed 90       	ld	r14, X+
     fe6:	fc 90       	ld	r15, X
     fe8:	13 97       	sbiw	r26, 0x03	; 3
     fea:	c0 26       	eor	r12, r16
     fec:	d1 26       	eor	r13, r17
     fee:	e2 26       	eor	r14, r18
     ff0:	f3 26       	eor	r15, r19
     ff2:	14 96       	adiw	r26, 0x04	; 4
     ff4:	8d 91       	ld	r24, X+
     ff6:	9d 91       	ld	r25, X+
     ff8:	0d 90       	ld	r0, X+
     ffa:	bc 91       	ld	r27, X
     ffc:	a0 2d       	mov	r26, r0
     ffe:	88 25       	eor	r24, r8
    1000:	99 25       	eor	r25, r9
    1002:	aa 25       	eor	r26, r10
    1004:	bb 25       	eor	r27, r11
    1006:	c8 0e       	add	r12, r24
    1008:	d9 1e       	adc	r13, r25
    100a:	ea 1e       	adc	r14, r26
    100c:	fb 1e       	adc	r15, r27
    100e:	d7 01       	movw	r26, r14
    1010:	c6 01       	movw	r24, r12
    1012:	68 94       	set
    1014:	12 f8       	bld	r1, 2
    1016:	b6 95       	lsr	r27
    1018:	a7 95       	ror	r26
    101a:	97 95       	ror	r25
    101c:	87 95       	ror	r24
    101e:	16 94       	lsr	r1
    1020:	d1 f7       	brne	.-12     	; 0x1016 <lea_encrypt_core+0xb52>
    1022:	0b 2e       	mov	r0, r27
    1024:	bd e1       	ldi	r27, 0x1D	; 29
    1026:	cc 0c       	add	r12, r12
    1028:	dd 1c       	adc	r13, r13
    102a:	ee 1c       	adc	r14, r14
    102c:	ff 1c       	adc	r15, r15
    102e:	ba 95       	dec	r27
    1030:	d1 f7       	brne	.-12     	; 0x1026 <lea_encrypt_core+0xb62>
    1032:	b0 2d       	mov	r27, r0
    1034:	c8 2a       	or	r12, r24
    1036:	d9 2a       	or	r13, r25
    1038:	ea 2a       	or	r14, r26
    103a:	fb 2a       	or	r15, r27
	X0 = ROR((X3 ^ key->rk[ 62]) + (X0 ^ key->rk[ 63]), 5);
    103c:	df 01       	movw	r26, r30
    103e:	a4 50       	subi	r26, 0x04	; 4
    1040:	bf 4f       	sbci	r27, 0xFF	; 255
    1042:	8d 90       	ld	r8, X+
    1044:	9d 90       	ld	r9, X+
    1046:	ad 90       	ld	r10, X+
    1048:	bc 90       	ld	r11, X
    104a:	13 97       	sbiw	r26, 0x03	; 3
    104c:	80 26       	eor	r8, r16
    104e:	91 26       	eor	r9, r17
    1050:	a2 26       	eor	r10, r18
    1052:	b3 26       	eor	r11, r19
    1054:	14 97       	sbiw	r26, 0x04	; 4
    1056:	8d 91       	ld	r24, X+
    1058:	9d 91       	ld	r25, X+
    105a:	0d 90       	ld	r0, X+
    105c:	bc 91       	ld	r27, X
    105e:	a0 2d       	mov	r26, r0
    1060:	84 25       	eor	r24, r4
    1062:	95 25       	eor	r25, r5
    1064:	a6 25       	eor	r26, r6
    1066:	b7 25       	eor	r27, r7
    1068:	88 0e       	add	r8, r24
    106a:	99 1e       	adc	r9, r25
    106c:	aa 1e       	adc	r10, r26
    106e:	bb 1e       	adc	r11, r27
    1070:	d5 01       	movw	r26, r10
    1072:	c4 01       	movw	r24, r8
    1074:	25 e0       	ldi	r18, 0x05	; 5
    1076:	b6 95       	lsr	r27
    1078:	a7 95       	ror	r26
    107a:	97 95       	ror	r25
    107c:	87 95       	ror	r24
    107e:	2a 95       	dec	r18
    1080:	d1 f7       	brne	.-12     	; 0x1076 <lea_encrypt_core+0xbb2>
    1082:	3b e1       	ldi	r19, 0x1B	; 27
    1084:	88 0c       	add	r8, r8
    1086:	99 1c       	adc	r9, r9
    1088:	aa 1c       	adc	r10, r10
    108a:	bb 1c       	adc	r11, r11
    108c:	3a 95       	dec	r19
    108e:	d1 f7       	brne	.-12     	; 0x1084 <lea_encrypt_core+0xbc0>
    1090:	88 2a       	or	r8, r24
    1092:	99 2a       	or	r9, r25
    1094:	aa 2a       	or	r10, r26
    1096:	bb 2a       	or	r11, r27
	X3 = ROL((X2 ^ key->rk[ 60]) + (X3 ^ key->rk[ 61]), 9);
    1098:	df 01       	movw	r26, r30
    109a:	ac 50       	subi	r26, 0x0C	; 12
    109c:	bf 4f       	sbci	r27, 0xFF	; 255
    109e:	0d 91       	ld	r16, X+
    10a0:	1d 91       	ld	r17, X+
    10a2:	2d 91       	ld	r18, X+
    10a4:	3c 91       	ld	r19, X
    10a6:	13 97       	sbiw	r26, 0x03	; 3
    10a8:	04 25       	eor	r16, r4
    10aa:	15 25       	eor	r17, r5
    10ac:	26 25       	eor	r18, r6
    10ae:	37 25       	eor	r19, r7
    10b0:	14 97       	sbiw	r26, 0x04	; 4
    10b2:	8d 91       	ld	r24, X+
    10b4:	9d 91       	ld	r25, X+
    10b6:	0d 90       	ld	r0, X+
    10b8:	bc 91       	ld	r27, X
    10ba:	a0 2d       	mov	r26, r0
    10bc:	84 27       	eor	r24, r20
    10be:	95 27       	eor	r25, r21
    10c0:	a6 27       	eor	r26, r22
    10c2:	b7 27       	eor	r27, r23
    10c4:	08 0f       	add	r16, r24
    10c6:	19 1f       	adc	r17, r25
    10c8:	2a 1f       	adc	r18, r26
    10ca:	3b 1f       	adc	r19, r27
    10cc:	d9 01       	movw	r26, r18
    10ce:	c8 01       	movw	r24, r16
    10d0:	07 2e       	mov	r0, r23
    10d2:	77 e1       	ldi	r23, 0x17	; 23
    10d4:	b6 95       	lsr	r27
    10d6:	a7 95       	ror	r26
    10d8:	97 95       	ror	r25
    10da:	87 95       	ror	r24
    10dc:	7a 95       	dec	r23
    10de:	d1 f7       	brne	.-12     	; 0x10d4 <lea_encrypt_core+0xc10>
    10e0:	70 2d       	mov	r23, r0
    10e2:	0f 2e       	mov	r0, r31
    10e4:	f9 e0       	ldi	r31, 0x09	; 9
    10e6:	00 0f       	add	r16, r16
    10e8:	11 1f       	adc	r17, r17
    10ea:	22 1f       	adc	r18, r18
    10ec:	33 1f       	adc	r19, r19
    10ee:	fa 95       	dec	r31
    10f0:	d1 f7       	brne	.-12     	; 0x10e6 <lea_encrypt_core+0xc22>
    10f2:	f0 2d       	mov	r31, r0
    10f4:	08 2b       	or	r16, r24
    10f6:	19 2b       	or	r17, r25
    10f8:	2a 2b       	or	r18, r26
    10fa:	3b 2b       	or	r19, r27
	X2 = ROR((X1 ^ key->rk[ 70]) + (X2 ^ key->rk[ 71]), 3);
    10fc:	df 01       	movw	r26, r30
    10fe:	a8 5e       	subi	r26, 0xE8	; 232
    1100:	be 4f       	sbci	r27, 0xFE	; 254
    1102:	4d 90       	ld	r4, X+
    1104:	5d 90       	ld	r5, X+
    1106:	6d 90       	ld	r6, X+
    1108:	7c 90       	ld	r7, X
    110a:	13 97       	sbiw	r26, 0x03	; 3
    110c:	4c 24       	eor	r4, r12
    110e:	5d 24       	eor	r5, r13
    1110:	6e 24       	eor	r6, r14
    1112:	7f 24       	eor	r7, r15
    1114:	14 96       	adiw	r26, 0x04	; 4
    1116:	8d 91       	ld	r24, X+
    1118:	9d 91       	ld	r25, X+
    111a:	0d 90       	ld	r0, X+
    111c:	bc 91       	ld	r27, X
    111e:	a0 2d       	mov	r26, r0
    1120:	84 27       	eor	r24, r20
    1122:	95 27       	eor	r25, r21
    1124:	a6 27       	eor	r26, r22
    1126:	b7 27       	eor	r27, r23
    1128:	48 0e       	add	r4, r24
    112a:	59 1e       	adc	r5, r25
    112c:	6a 1e       	adc	r6, r26
    112e:	7b 1e       	adc	r7, r27
    1130:	d3 01       	movw	r26, r6
    1132:	c2 01       	movw	r24, r4
    1134:	43 e0       	ldi	r20, 0x03	; 3
    1136:	b6 95       	lsr	r27
    1138:	a7 95       	ror	r26
    113a:	97 95       	ror	r25
    113c:	87 95       	ror	r24
    113e:	4a 95       	dec	r20
    1140:	d1 f7       	brne	.-12     	; 0x1136 <lea_encrypt_core+0xc72>
    1142:	5d e1       	ldi	r21, 0x1D	; 29
    1144:	44 0c       	add	r4, r4
    1146:	55 1c       	adc	r5, r5
    1148:	66 1c       	adc	r6, r6
    114a:	77 1c       	adc	r7, r7
    114c:	5a 95       	dec	r21
    114e:	d1 f7       	brne	.-12     	; 0x1144 <lea_encrypt_core+0xc80>
    1150:	48 2a       	or	r4, r24
    1152:	59 2a       	or	r5, r25
    1154:	6a 2a       	or	r6, r26
    1156:	7b 2a       	or	r7, r27
	X1 = ROR((X0 ^ key->rk[ 68]) + (X1 ^ key->rk[ 69]), 5);
    1158:	df 01       	movw	r26, r30
    115a:	ac 5e       	subi	r26, 0xEC	; 236
    115c:	be 4f       	sbci	r27, 0xFE	; 254
    115e:	4d 91       	ld	r20, X+
    1160:	5d 91       	ld	r21, X+
    1162:	6d 91       	ld	r22, X+
    1164:	7c 91       	ld	r23, X
    1166:	13 97       	sbiw	r26, 0x03	; 3
    1168:	4c 25       	eor	r20, r12
    116a:	5d 25       	eor	r21, r13
    116c:	6e 25       	eor	r22, r14
    116e:	7f 25       	eor	r23, r15
    1170:	14 97       	sbiw	r26, 0x04	; 4
    1172:	8d 91       	ld	r24, X+
    1174:	9d 91       	ld	r25, X+
    1176:	0d 90       	ld	r0, X+
    1178:	bc 91       	ld	r27, X
    117a:	a0 2d       	mov	r26, r0
    117c:	88 25       	eor	r24, r8
    117e:	99 25       	eor	r25, r9
    1180:	aa 25       	eor	r26, r10
    1182:	bb 25       	eor	r27, r11
    1184:	48 0f       	add	r20, r24
    1186:	59 1f       	adc	r21, r25
    1188:	6a 1f       	adc	r22, r26
    118a:	7b 1f       	adc	r23, r27
    118c:	db 01       	movw	r26, r22
    118e:	ca 01       	movw	r24, r20
    1190:	68 94       	set
    1192:	14 f8       	bld	r1, 4
    1194:	b6 95       	lsr	r27
    1196:	a7 95       	ror	r26
    1198:	97 95       	ror	r25
    119a:	87 95       	ror	r24
    119c:	16 94       	lsr	r1
    119e:	d1 f7       	brne	.-12     	; 0x1194 <lea_encrypt_core+0xcd0>
    11a0:	03 2e       	mov	r0, r19
    11a2:	3b e1       	ldi	r19, 0x1B	; 27
    11a4:	44 0f       	add	r20, r20
    11a6:	55 1f       	adc	r21, r21
    11a8:	66 1f       	adc	r22, r22
    11aa:	77 1f       	adc	r23, r23
    11ac:	3a 95       	dec	r19
    11ae:	d1 f7       	brne	.-12     	; 0x11a4 <lea_encrypt_core+0xce0>
    11b0:	30 2d       	mov	r19, r0
    11b2:	48 2b       	or	r20, r24
    11b4:	59 2b       	or	r21, r25
    11b6:	6a 2b       	or	r22, r26
    11b8:	7b 2b       	or	r23, r27
	X0 = ROL((X3 ^ key->rk[ 66]) + (X0 ^ key->rk[ 67]), 9);
    11ba:	df 01       	movw	r26, r30
    11bc:	a4 5f       	subi	r26, 0xF4	; 244
    11be:	be 4f       	sbci	r27, 0xFE	; 254
    11c0:	cd 90       	ld	r12, X+
    11c2:	dd 90       	ld	r13, X+
    11c4:	ed 90       	ld	r14, X+
    11c6:	fc 90       	ld	r15, X
    11c8:	13 97       	sbiw	r26, 0x03	; 3
    11ca:	c8 24       	eor	r12, r8
    11cc:	d9 24       	eor	r13, r9
    11ce:	ea 24       	eor	r14, r10
    11d0:	fb 24       	eor	r15, r11
    11d2:	14 97       	sbiw	r26, 0x04	; 4
    11d4:	8d 91       	ld	r24, X+
    11d6:	9d 91       	ld	r25, X+
    11d8:	0d 90       	ld	r0, X+
    11da:	bc 91       	ld	r27, X
    11dc:	a0 2d       	mov	r26, r0
    11de:	80 27       	eor	r24, r16
    11e0:	91 27       	eor	r25, r17
    11e2:	a2 27       	eor	r26, r18
    11e4:	b3 27       	eor	r27, r19
    11e6:	c8 0e       	add	r12, r24
    11e8:	d9 1e       	adc	r13, r25
    11ea:	ea 1e       	adc	r14, r26
    11ec:	fb 1e       	adc	r15, r27
    11ee:	d7 01       	movw	r26, r14
    11f0:	c6 01       	movw	r24, r12
    11f2:	07 2e       	mov	r0, r23
    11f4:	77 e1       	ldi	r23, 0x17	; 23
    11f6:	b6 95       	lsr	r27
    11f8:	a7 95       	ror	r26
    11fa:	97 95       	ror	r25
    11fc:	87 95       	ror	r24
    11fe:	7a 95       	dec	r23
    1200:	d1 f7       	brne	.-12     	; 0x11f6 <lea_encrypt_core+0xd32>
    1202:	70 2d       	mov	r23, r0
    1204:	0b 2e       	mov	r0, r27
    1206:	b9 e0       	ldi	r27, 0x09	; 9
    1208:	cc 0c       	add	r12, r12
    120a:	dd 1c       	adc	r13, r13
    120c:	ee 1c       	adc	r14, r14
    120e:	ff 1c       	adc	r15, r15
    1210:	ba 95       	dec	r27
    1212:	d1 f7       	brne	.-12     	; 0x1208 <lea_encrypt_core+0xd44>
    1214:	b0 2d       	mov	r27, r0
    1216:	c8 2a       	or	r12, r24
    1218:	d9 2a       	or	r13, r25
    121a:	ea 2a       	or	r14, r26
    121c:	fb 2a       	or	r15, r27

	X3 = ROR((X2 ^ key->rk[ 76]) + (X3 ^ key->rk[ 77]), 3);
    121e:	df 01       	movw	r26, r30
    1220:	a0 5d       	subi	r26, 0xD0	; 208
    1222:	be 4f       	sbci	r27, 0xFE	; 254
    1224:	8d 90       	ld	r8, X+
    1226:	9d 90       	ld	r9, X+
    1228:	ad 90       	ld	r10, X+
    122a:	bc 90       	ld	r11, X
    122c:	13 97       	sbiw	r26, 0x03	; 3
    122e:	84 24       	eor	r8, r4
    1230:	95 24       	eor	r9, r5
    1232:	a6 24       	eor	r10, r6
    1234:	b7 24       	eor	r11, r7
    1236:	14 96       	adiw	r26, 0x04	; 4
    1238:	8d 91       	ld	r24, X+
    123a:	9d 91       	ld	r25, X+
    123c:	0d 90       	ld	r0, X+
    123e:	bc 91       	ld	r27, X
    1240:	a0 2d       	mov	r26, r0
    1242:	80 27       	eor	r24, r16
    1244:	91 27       	eor	r25, r17
    1246:	a2 27       	eor	r26, r18
    1248:	b3 27       	eor	r27, r19
    124a:	88 0e       	add	r8, r24
    124c:	99 1e       	adc	r9, r25
    124e:	aa 1e       	adc	r10, r26
    1250:	bb 1e       	adc	r11, r27
    1252:	d5 01       	movw	r26, r10
    1254:	c4 01       	movw	r24, r8
    1256:	23 e0       	ldi	r18, 0x03	; 3
    1258:	b6 95       	lsr	r27
    125a:	a7 95       	ror	r26
    125c:	97 95       	ror	r25
    125e:	87 95       	ror	r24
    1260:	2a 95       	dec	r18
    1262:	d1 f7       	brne	.-12     	; 0x1258 <lea_encrypt_core+0xd94>
    1264:	3d e1       	ldi	r19, 0x1D	; 29
    1266:	88 0c       	add	r8, r8
    1268:	99 1c       	adc	r9, r9
    126a:	aa 1c       	adc	r10, r10
    126c:	bb 1c       	adc	r11, r11
    126e:	3a 95       	dec	r19
    1270:	d1 f7       	brne	.-12     	; 0x1266 <lea_encrypt_core+0xda2>
    1272:	88 2a       	or	r8, r24
    1274:	99 2a       	or	r9, r25
    1276:	aa 2a       	or	r10, r26
    1278:	bb 2a       	or	r11, r27
	X2 = ROR((X1 ^ key->rk[ 74]) + (X2 ^ key->rk[ 75]), 5);
    127a:	df 01       	movw	r26, r30
    127c:	a4 5d       	subi	r26, 0xD4	; 212
    127e:	be 4f       	sbci	r27, 0xFE	; 254
    1280:	0d 91       	ld	r16, X+
    1282:	1d 91       	ld	r17, X+
    1284:	2d 91       	ld	r18, X+
    1286:	3c 91       	ld	r19, X
    1288:	13 97       	sbiw	r26, 0x03	; 3
    128a:	04 25       	eor	r16, r4
    128c:	15 25       	eor	r17, r5
    128e:	26 25       	eor	r18, r6
    1290:	37 25       	eor	r19, r7
    1292:	14 97       	sbiw	r26, 0x04	; 4
    1294:	8d 91       	ld	r24, X+
    1296:	9d 91       	ld	r25, X+
    1298:	0d 90       	ld	r0, X+
    129a:	bc 91       	ld	r27, X
    129c:	a0 2d       	mov	r26, r0
    129e:	84 27       	eor	r24, r20
    12a0:	95 27       	eor	r25, r21
    12a2:	a6 27       	eor	r26, r22
    12a4:	b7 27       	eor	r27, r23
    12a6:	08 0f       	add	r16, r24
    12a8:	19 1f       	adc	r17, r25
    12aa:	2a 1f       	adc	r18, r26
    12ac:	3b 1f       	adc	r19, r27
    12ae:	d9 01       	movw	r26, r18
    12b0:	c8 01       	movw	r24, r16
    12b2:	68 94       	set
    12b4:	14 f8       	bld	r1, 4
    12b6:	b6 95       	lsr	r27
    12b8:	a7 95       	ror	r26
    12ba:	97 95       	ror	r25
    12bc:	87 95       	ror	r24
    12be:	16 94       	lsr	r1
    12c0:	d1 f7       	brne	.-12     	; 0x12b6 <lea_encrypt_core+0xdf2>
    12c2:	0f 2e       	mov	r0, r31
    12c4:	fb e1       	ldi	r31, 0x1B	; 27
    12c6:	00 0f       	add	r16, r16
    12c8:	11 1f       	adc	r17, r17
    12ca:	22 1f       	adc	r18, r18
    12cc:	33 1f       	adc	r19, r19
    12ce:	fa 95       	dec	r31
    12d0:	d1 f7       	brne	.-12     	; 0x12c6 <lea_encrypt_core+0xe02>
    12d2:	f0 2d       	mov	r31, r0
    12d4:	08 2b       	or	r16, r24
    12d6:	19 2b       	or	r17, r25
    12d8:	2a 2b       	or	r18, r26
    12da:	3b 2b       	or	r19, r27
	X1 = ROL((X0 ^ key->rk[ 72]) + (X1 ^ key->rk[ 73]), 9);
    12dc:	df 01       	movw	r26, r30
    12de:	ac 5d       	subi	r26, 0xDC	; 220
    12e0:	be 4f       	sbci	r27, 0xFE	; 254
    12e2:	4d 90       	ld	r4, X+
    12e4:	5d 90       	ld	r5, X+
    12e6:	6d 90       	ld	r6, X+
    12e8:	7c 90       	ld	r7, X
    12ea:	13 97       	sbiw	r26, 0x03	; 3
    12ec:	44 26       	eor	r4, r20
    12ee:	55 26       	eor	r5, r21
    12f0:	66 26       	eor	r6, r22
    12f2:	77 26       	eor	r7, r23
    12f4:	14 97       	sbiw	r26, 0x04	; 4
    12f6:	8d 91       	ld	r24, X+
    12f8:	9d 91       	ld	r25, X+
    12fa:	0d 90       	ld	r0, X+
    12fc:	bc 91       	ld	r27, X
    12fe:	a0 2d       	mov	r26, r0
    1300:	8c 25       	eor	r24, r12
    1302:	9d 25       	eor	r25, r13
    1304:	ae 25       	eor	r26, r14
    1306:	bf 25       	eor	r27, r15
    1308:	48 0e       	add	r4, r24
    130a:	59 1e       	adc	r5, r25
    130c:	6a 1e       	adc	r6, r26
    130e:	7b 1e       	adc	r7, r27
    1310:	d3 01       	movw	r26, r6
    1312:	c2 01       	movw	r24, r4
    1314:	47 e1       	ldi	r20, 0x17	; 23
    1316:	b6 95       	lsr	r27
    1318:	a7 95       	ror	r26
    131a:	97 95       	ror	r25
    131c:	87 95       	ror	r24
    131e:	4a 95       	dec	r20
    1320:	d1 f7       	brne	.-12     	; 0x1316 <lea_encrypt_core+0xe52>
    1322:	59 e0       	ldi	r21, 0x09	; 9
    1324:	44 0c       	add	r4, r4
    1326:	55 1c       	adc	r5, r5
    1328:	66 1c       	adc	r6, r6
    132a:	77 1c       	adc	r7, r7
    132c:	5a 95       	dec	r21
    132e:	d1 f7       	brne	.-12     	; 0x1324 <lea_encrypt_core+0xe60>
    1330:	48 2a       	or	r4, r24
    1332:	59 2a       	or	r5, r25
    1334:	6a 2a       	or	r6, r26
    1336:	7b 2a       	or	r7, r27
	X0 = ROR((X3 ^ key->rk[ 82]) + (X0 ^ key->rk[ 83]), 3);
    1338:	df 01       	movw	r26, r30
    133a:	a8 5b       	subi	r26, 0xB8	; 184
    133c:	be 4f       	sbci	r27, 0xFE	; 254
    133e:	4d 91       	ld	r20, X+
    1340:	5d 91       	ld	r21, X+
    1342:	6d 91       	ld	r22, X+
    1344:	7c 91       	ld	r23, X
    1346:	13 97       	sbiw	r26, 0x03	; 3
    1348:	48 25       	eor	r20, r8
    134a:	59 25       	eor	r21, r9
    134c:	6a 25       	eor	r22, r10
    134e:	7b 25       	eor	r23, r11
    1350:	14 96       	adiw	r26, 0x04	; 4
    1352:	8d 91       	ld	r24, X+
    1354:	9d 91       	ld	r25, X+
    1356:	0d 90       	ld	r0, X+
    1358:	bc 91       	ld	r27, X
    135a:	a0 2d       	mov	r26, r0
    135c:	8c 25       	eor	r24, r12
    135e:	9d 25       	eor	r25, r13
    1360:	ae 25       	eor	r26, r14
    1362:	bf 25       	eor	r27, r15
    1364:	48 0f       	add	r20, r24
    1366:	59 1f       	adc	r21, r25
    1368:	6a 1f       	adc	r22, r26
    136a:	7b 1f       	adc	r23, r27
    136c:	db 01       	movw	r26, r22
    136e:	ca 01       	movw	r24, r20
    1370:	68 94       	set
    1372:	12 f8       	bld	r1, 2
    1374:	b6 95       	lsr	r27
    1376:	a7 95       	ror	r26
    1378:	97 95       	ror	r25
    137a:	87 95       	ror	r24
    137c:	16 94       	lsr	r1
    137e:	d1 f7       	brne	.-12     	; 0x1374 <lea_encrypt_core+0xeb0>
    1380:	03 2e       	mov	r0, r19
    1382:	3d e1       	ldi	r19, 0x1D	; 29
    1384:	44 0f       	add	r20, r20
    1386:	55 1f       	adc	r21, r21
    1388:	66 1f       	adc	r22, r22
    138a:	77 1f       	adc	r23, r23
    138c:	3a 95       	dec	r19
    138e:	d1 f7       	brne	.-12     	; 0x1384 <lea_encrypt_core+0xec0>
    1390:	30 2d       	mov	r19, r0
    1392:	48 2b       	or	r20, r24
    1394:	59 2b       	or	r21, r25
    1396:	6a 2b       	or	r22, r26
    1398:	7b 2b       	or	r23, r27
	X3 = ROR((X2 ^ key->rk[ 80]) + (X3 ^ key->rk[ 81]), 5);
    139a:	df 01       	movw	r26, r30
    139c:	ac 5b       	subi	r26, 0xBC	; 188
    139e:	be 4f       	sbci	r27, 0xFE	; 254
    13a0:	cd 90       	ld	r12, X+
    13a2:	dd 90       	ld	r13, X+
    13a4:	ed 90       	ld	r14, X+
    13a6:	fc 90       	ld	r15, X
    13a8:	13 97       	sbiw	r26, 0x03	; 3
    13aa:	c8 24       	eor	r12, r8
    13ac:	d9 24       	eor	r13, r9
    13ae:	ea 24       	eor	r14, r10
    13b0:	fb 24       	eor	r15, r11
    13b2:	14 97       	sbiw	r26, 0x04	; 4
    13b4:	8d 91       	ld	r24, X+
    13b6:	9d 91       	ld	r25, X+
    13b8:	0d 90       	ld	r0, X+
    13ba:	bc 91       	ld	r27, X
    13bc:	a0 2d       	mov	r26, r0
    13be:	80 27       	eor	r24, r16
    13c0:	91 27       	eor	r25, r17
    13c2:	a2 27       	eor	r26, r18
    13c4:	b3 27       	eor	r27, r19
    13c6:	c8 0e       	add	r12, r24
    13c8:	d9 1e       	adc	r13, r25
    13ca:	ea 1e       	adc	r14, r26
    13cc:	fb 1e       	adc	r15, r27
    13ce:	d7 01       	movw	r26, r14
    13d0:	c6 01       	movw	r24, r12
    13d2:	68 94       	set
    13d4:	14 f8       	bld	r1, 4
    13d6:	b6 95       	lsr	r27
    13d8:	a7 95       	ror	r26
    13da:	97 95       	ror	r25
    13dc:	87 95       	ror	r24
    13de:	16 94       	lsr	r1
    13e0:	d1 f7       	brne	.-12     	; 0x13d6 <lea_encrypt_core+0xf12>
    13e2:	0b 2e       	mov	r0, r27
    13e4:	bb e1       	ldi	r27, 0x1B	; 27
    13e6:	cc 0c       	add	r12, r12
    13e8:	dd 1c       	adc	r13, r13
    13ea:	ee 1c       	adc	r14, r14
    13ec:	ff 1c       	adc	r15, r15
    13ee:	ba 95       	dec	r27
    13f0:	d1 f7       	brne	.-12     	; 0x13e6 <lea_encrypt_core+0xf22>
    13f2:	b0 2d       	mov	r27, r0
    13f4:	c8 2a       	or	r12, r24
    13f6:	d9 2a       	or	r13, r25
    13f8:	ea 2a       	or	r14, r26
    13fa:	fb 2a       	or	r15, r27
	X2 = ROL((X1 ^ key->rk[ 78]) + (X2 ^ key->rk[ 79]), 9);
    13fc:	df 01       	movw	r26, r30
    13fe:	a4 5c       	subi	r26, 0xC4	; 196
    1400:	be 4f       	sbci	r27, 0xFE	; 254
    1402:	8d 90       	ld	r8, X+
    1404:	9d 90       	ld	r9, X+
    1406:	ad 90       	ld	r10, X+
    1408:	bc 90       	ld	r11, X
    140a:	13 97       	sbiw	r26, 0x03	; 3
    140c:	80 26       	eor	r8, r16
    140e:	91 26       	eor	r9, r17
    1410:	a2 26       	eor	r10, r18
    1412:	b3 26       	eor	r11, r19
    1414:	14 97       	sbiw	r26, 0x04	; 4
    1416:	8d 91       	ld	r24, X+
    1418:	9d 91       	ld	r25, X+
    141a:	0d 90       	ld	r0, X+
    141c:	bc 91       	ld	r27, X
    141e:	a0 2d       	mov	r26, r0
    1420:	84 25       	eor	r24, r4
    1422:	95 25       	eor	r25, r5
    1424:	a6 25       	eor	r26, r6
    1426:	b7 25       	eor	r27, r7
    1428:	88 0e       	add	r8, r24
    142a:	99 1e       	adc	r9, r25
    142c:	aa 1e       	adc	r10, r26
    142e:	bb 1e       	adc	r11, r27
    1430:	d5 01       	movw	r26, r10
    1432:	c4 01       	movw	r24, r8
    1434:	27 e1       	ldi	r18, 0x17	; 23
    1436:	b6 95       	lsr	r27
    1438:	a7 95       	ror	r26
    143a:	97 95       	ror	r25
    143c:	87 95       	ror	r24
    143e:	2a 95       	dec	r18
    1440:	d1 f7       	brne	.-12     	; 0x1436 <lea_encrypt_core+0xf72>
    1442:	39 e0       	ldi	r19, 0x09	; 9
    1444:	88 0c       	add	r8, r8
    1446:	99 1c       	adc	r9, r9
    1448:	aa 1c       	adc	r10, r10
    144a:	bb 1c       	adc	r11, r11
    144c:	3a 95       	dec	r19
    144e:	d1 f7       	brne	.-12     	; 0x1444 <lea_encrypt_core+0xf80>
    1450:	88 2a       	or	r8, r24
    1452:	99 2a       	or	r9, r25
    1454:	aa 2a       	or	r10, r26
    1456:	bb 2a       	or	r11, r27
	X1 = ROR((X0 ^ key->rk[ 88]) + (X1 ^ key->rk[ 89]), 3);
    1458:	df 01       	movw	r26, r30
    145a:	a0 5a       	subi	r26, 0xA0	; 160
    145c:	be 4f       	sbci	r27, 0xFE	; 254
    145e:	0d 91       	ld	r16, X+
    1460:	1d 91       	ld	r17, X+
    1462:	2d 91       	ld	r18, X+
    1464:	3c 91       	ld	r19, X
    1466:	13 97       	sbiw	r26, 0x03	; 3
    1468:	04 27       	eor	r16, r20
    146a:	15 27       	eor	r17, r21
    146c:	26 27       	eor	r18, r22
    146e:	37 27       	eor	r19, r23
    1470:	14 96       	adiw	r26, 0x04	; 4
    1472:	8d 91       	ld	r24, X+
    1474:	9d 91       	ld	r25, X+
    1476:	0d 90       	ld	r0, X+
    1478:	bc 91       	ld	r27, X
    147a:	a0 2d       	mov	r26, r0
    147c:	84 25       	eor	r24, r4
    147e:	95 25       	eor	r25, r5
    1480:	a6 25       	eor	r26, r6
    1482:	b7 25       	eor	r27, r7
    1484:	08 0f       	add	r16, r24
    1486:	19 1f       	adc	r17, r25
    1488:	2a 1f       	adc	r18, r26
    148a:	3b 1f       	adc	r19, r27
    148c:	d9 01       	movw	r26, r18
    148e:	c8 01       	movw	r24, r16
    1490:	68 94       	set
    1492:	12 f8       	bld	r1, 2
    1494:	b6 95       	lsr	r27
    1496:	a7 95       	ror	r26
    1498:	97 95       	ror	r25
    149a:	87 95       	ror	r24
    149c:	16 94       	lsr	r1
    149e:	d1 f7       	brne	.-12     	; 0x1494 <lea_encrypt_core+0xfd0>
    14a0:	0f 2e       	mov	r0, r31
    14a2:	fd e1       	ldi	r31, 0x1D	; 29
    14a4:	00 0f       	add	r16, r16
    14a6:	11 1f       	adc	r17, r17
    14a8:	22 1f       	adc	r18, r18
    14aa:	33 1f       	adc	r19, r19
    14ac:	fa 95       	dec	r31
    14ae:	d1 f7       	brne	.-12     	; 0x14a4 <lea_encrypt_core+0xfe0>
    14b0:	f0 2d       	mov	r31, r0
    14b2:	08 2b       	or	r16, r24
    14b4:	19 2b       	or	r17, r25
    14b6:	2a 2b       	or	r18, r26
    14b8:	3b 2b       	or	r19, r27
	X0 = ROR((X3 ^ key->rk[ 86]) + (X0 ^ key->rk[ 87]), 5);
    14ba:	df 01       	movw	r26, r30
    14bc:	a4 5a       	subi	r26, 0xA4	; 164
    14be:	be 4f       	sbci	r27, 0xFE	; 254
    14c0:	4d 90       	ld	r4, X+
    14c2:	5d 90       	ld	r5, X+
    14c4:	6d 90       	ld	r6, X+
    14c6:	7c 90       	ld	r7, X
    14c8:	13 97       	sbiw	r26, 0x03	; 3
    14ca:	44 26       	eor	r4, r20
    14cc:	55 26       	eor	r5, r21
    14ce:	66 26       	eor	r6, r22
    14d0:	77 26       	eor	r7, r23
    14d2:	14 97       	sbiw	r26, 0x04	; 4
    14d4:	8d 91       	ld	r24, X+
    14d6:	9d 91       	ld	r25, X+
    14d8:	0d 90       	ld	r0, X+
    14da:	bc 91       	ld	r27, X
    14dc:	a0 2d       	mov	r26, r0
    14de:	8c 25       	eor	r24, r12
    14e0:	9d 25       	eor	r25, r13
    14e2:	ae 25       	eor	r26, r14
    14e4:	bf 25       	eor	r27, r15
    14e6:	48 0e       	add	r4, r24
    14e8:	59 1e       	adc	r5, r25
    14ea:	6a 1e       	adc	r6, r26
    14ec:	7b 1e       	adc	r7, r27
    14ee:	d3 01       	movw	r26, r6
    14f0:	c2 01       	movw	r24, r4
    14f2:	45 e0       	ldi	r20, 0x05	; 5
    14f4:	b6 95       	lsr	r27
    14f6:	a7 95       	ror	r26
    14f8:	97 95       	ror	r25
    14fa:	87 95       	ror	r24
    14fc:	4a 95       	dec	r20
    14fe:	d1 f7       	brne	.-12     	; 0x14f4 <lea_encrypt_core+0x1030>
    1500:	5b e1       	ldi	r21, 0x1B	; 27
    1502:	44 0c       	add	r4, r4
    1504:	55 1c       	adc	r5, r5
    1506:	66 1c       	adc	r6, r6
    1508:	77 1c       	adc	r7, r7
    150a:	5a 95       	dec	r21
    150c:	d1 f7       	brne	.-12     	; 0x1502 <lea_encrypt_core+0x103e>
    150e:	48 2a       	or	r4, r24
    1510:	59 2a       	or	r5, r25
    1512:	6a 2a       	or	r6, r26
    1514:	7b 2a       	or	r7, r27
	X3 = ROL((X2 ^ key->rk[ 84]) + (X3 ^ key->rk[ 85]), 9);
    1516:	df 01       	movw	r26, r30
    1518:	ac 5a       	subi	r26, 0xAC	; 172
    151a:	be 4f       	sbci	r27, 0xFE	; 254
    151c:	4d 91       	ld	r20, X+
    151e:	5d 91       	ld	r21, X+
    1520:	6d 91       	ld	r22, X+
    1522:	7c 91       	ld	r23, X
    1524:	13 97       	sbiw	r26, 0x03	; 3
    1526:	4c 25       	eor	r20, r12
    1528:	5d 25       	eor	r21, r13
    152a:	6e 25       	eor	r22, r14
    152c:	7f 25       	eor	r23, r15
    152e:	14 97       	sbiw	r26, 0x04	; 4
    1530:	8d 91       	ld	r24, X+
    1532:	9d 91       	ld	r25, X+
    1534:	0d 90       	ld	r0, X+
    1536:	bc 91       	ld	r27, X
    1538:	a0 2d       	mov	r26, r0
    153a:	88 25       	eor	r24, r8
    153c:	99 25       	eor	r25, r9
    153e:	aa 25       	eor	r26, r10
    1540:	bb 25       	eor	r27, r11
    1542:	48 0f       	add	r20, r24
    1544:	59 1f       	adc	r21, r25
    1546:	6a 1f       	adc	r22, r26
    1548:	7b 1f       	adc	r23, r27
    154a:	db 01       	movw	r26, r22
    154c:	ca 01       	movw	r24, r20
    154e:	07 2e       	mov	r0, r23
    1550:	77 e1       	ldi	r23, 0x17	; 23
    1552:	b6 95       	lsr	r27
    1554:	a7 95       	ror	r26
    1556:	97 95       	ror	r25
    1558:	87 95       	ror	r24
    155a:	7a 95       	dec	r23
    155c:	d1 f7       	brne	.-12     	; 0x1552 <lea_encrypt_core+0x108e>
    155e:	70 2d       	mov	r23, r0
    1560:	03 2e       	mov	r0, r19
    1562:	39 e0       	ldi	r19, 0x09	; 9
    1564:	44 0f       	add	r20, r20
    1566:	55 1f       	adc	r21, r21
    1568:	66 1f       	adc	r22, r22
    156a:	77 1f       	adc	r23, r23
    156c:	3a 95       	dec	r19
    156e:	d1 f7       	brne	.-12     	; 0x1564 <lea_encrypt_core+0x10a0>
    1570:	30 2d       	mov	r19, r0
    1572:	48 2b       	or	r20, r24
    1574:	59 2b       	or	r21, r25
    1576:	6a 2b       	or	r22, r26
    1578:	7b 2b       	or	r23, r27
	X2 = ROR((X1 ^ key->rk[ 94]) + (X2 ^ key->rk[ 95]), 3);
    157a:	df 01       	movw	r26, r30
    157c:	a8 58       	subi	r26, 0x88	; 136
    157e:	be 4f       	sbci	r27, 0xFE	; 254
    1580:	cd 90       	ld	r12, X+
    1582:	dd 90       	ld	r13, X+
    1584:	ed 90       	ld	r14, X+
    1586:	fc 90       	ld	r15, X
    1588:	13 97       	sbiw	r26, 0x03	; 3
    158a:	c0 26       	eor	r12, r16
    158c:	d1 26       	eor	r13, r17
    158e:	e2 26       	eor	r14, r18
    1590:	f3 26       	eor	r15, r19
    1592:	14 96       	adiw	r26, 0x04	; 4
    1594:	8d 91       	ld	r24, X+
    1596:	9d 91       	ld	r25, X+
    1598:	0d 90       	ld	r0, X+
    159a:	bc 91       	ld	r27, X
    159c:	a0 2d       	mov	r26, r0
    159e:	88 25       	eor	r24, r8
    15a0:	99 25       	eor	r25, r9
    15a2:	aa 25       	eor	r26, r10
    15a4:	bb 25       	eor	r27, r11
    15a6:	c8 0e       	add	r12, r24
    15a8:	d9 1e       	adc	r13, r25
    15aa:	ea 1e       	adc	r14, r26
    15ac:	fb 1e       	adc	r15, r27
    15ae:	d7 01       	movw	r26, r14
    15b0:	c6 01       	movw	r24, r12
    15b2:	68 94       	set
    15b4:	12 f8       	bld	r1, 2
    15b6:	b6 95       	lsr	r27
    15b8:	a7 95       	ror	r26
    15ba:	97 95       	ror	r25
    15bc:	87 95       	ror	r24
    15be:	16 94       	lsr	r1
    15c0:	d1 f7       	brne	.-12     	; 0x15b6 <lea_encrypt_core+0x10f2>
    15c2:	0b 2e       	mov	r0, r27
    15c4:	bd e1       	ldi	r27, 0x1D	; 29
    15c6:	cc 0c       	add	r12, r12
    15c8:	dd 1c       	adc	r13, r13
    15ca:	ee 1c       	adc	r14, r14
    15cc:	ff 1c       	adc	r15, r15
    15ce:	ba 95       	dec	r27
    15d0:	d1 f7       	brne	.-12     	; 0x15c6 <lea_encrypt_core+0x1102>
    15d2:	b0 2d       	mov	r27, r0
    15d4:	c8 2a       	or	r12, r24
    15d6:	d9 2a       	or	r13, r25
    15d8:	ea 2a       	or	r14, r26
    15da:	fb 2a       	or	r15, r27
	X1 = ROR((X0 ^ key->rk[ 92]) + (X1 ^ key->rk[ 93]), 5);
    15dc:	df 01       	movw	r26, r30
    15de:	ac 58       	subi	r26, 0x8C	; 140
    15e0:	be 4f       	sbci	r27, 0xFE	; 254
    15e2:	8d 90       	ld	r8, X+
    15e4:	9d 90       	ld	r9, X+
    15e6:	ad 90       	ld	r10, X+
    15e8:	bc 90       	ld	r11, X
    15ea:	13 97       	sbiw	r26, 0x03	; 3
    15ec:	80 26       	eor	r8, r16
    15ee:	91 26       	eor	r9, r17
    15f0:	a2 26       	eor	r10, r18
    15f2:	b3 26       	eor	r11, r19
    15f4:	14 97       	sbiw	r26, 0x04	; 4
    15f6:	8d 91       	ld	r24, X+
    15f8:	9d 91       	ld	r25, X+
    15fa:	0d 90       	ld	r0, X+
    15fc:	bc 91       	ld	r27, X
    15fe:	a0 2d       	mov	r26, r0
    1600:	84 25       	eor	r24, r4
    1602:	95 25       	eor	r25, r5
    1604:	a6 25       	eor	r26, r6
    1606:	b7 25       	eor	r27, r7
    1608:	88 0e       	add	r8, r24
    160a:	99 1e       	adc	r9, r25
    160c:	aa 1e       	adc	r10, r26
    160e:	bb 1e       	adc	r11, r27
    1610:	d5 01       	movw	r26, r10
    1612:	c4 01       	movw	r24, r8
    1614:	25 e0       	ldi	r18, 0x05	; 5
    1616:	b6 95       	lsr	r27
    1618:	a7 95       	ror	r26
    161a:	97 95       	ror	r25
    161c:	87 95       	ror	r24
    161e:	2a 95       	dec	r18
    1620:	d1 f7       	brne	.-12     	; 0x1616 <lea_encrypt_core+0x1152>
    1622:	3b e1       	ldi	r19, 0x1B	; 27
    1624:	88 0c       	add	r8, r8
    1626:	99 1c       	adc	r9, r9
    1628:	aa 1c       	adc	r10, r10
    162a:	bb 1c       	adc	r11, r11
    162c:	3a 95       	dec	r19
    162e:	d1 f7       	brne	.-12     	; 0x1624 <lea_encrypt_core+0x1160>
    1630:	88 2a       	or	r8, r24
    1632:	99 2a       	or	r9, r25
    1634:	aa 2a       	or	r10, r26
    1636:	bb 2a       	or	r11, r27
	X0 = ROL((X3 ^ key->rk[ 90]) + (X0 ^ key->rk[ 91]), 9);
    1638:	df 01       	movw	r26, r30
    163a:	a4 59       	subi	r26, 0x94	; 148
    163c:	be 4f       	sbci	r27, 0xFE	; 254
    163e:	0d 91       	ld	r16, X+
    1640:	1d 91       	ld	r17, X+
    1642:	2d 91       	ld	r18, X+
    1644:	3c 91       	ld	r19, X
    1646:	13 97       	sbiw	r26, 0x03	; 3
    1648:	04 25       	eor	r16, r4
    164a:	15 25       	eor	r17, r5
    164c:	26 25       	eor	r18, r6
    164e:	37 25       	eor	r19, r7
    1650:	14 97       	sbiw	r26, 0x04	; 4
    1652:	8d 91       	ld	r24, X+
    1654:	9d 91       	ld	r25, X+
    1656:	0d 90       	ld	r0, X+
    1658:	bc 91       	ld	r27, X
    165a:	a0 2d       	mov	r26, r0
    165c:	84 27       	eor	r24, r20
    165e:	95 27       	eor	r25, r21
    1660:	a6 27       	eor	r26, r22
    1662:	b7 27       	eor	r27, r23
    1664:	08 0f       	add	r16, r24
    1666:	19 1f       	adc	r17, r25
    1668:	2a 1f       	adc	r18, r26
    166a:	3b 1f       	adc	r19, r27
    166c:	d9 01       	movw	r26, r18
    166e:	c8 01       	movw	r24, r16
    1670:	07 2e       	mov	r0, r23
    1672:	77 e1       	ldi	r23, 0x17	; 23
    1674:	b6 95       	lsr	r27
    1676:	a7 95       	ror	r26
    1678:	97 95       	ror	r25
    167a:	87 95       	ror	r24
    167c:	7a 95       	dec	r23
    167e:	d1 f7       	brne	.-12     	; 0x1674 <lea_encrypt_core+0x11b0>
    1680:	70 2d       	mov	r23, r0
    1682:	0f 2e       	mov	r0, r31
    1684:	f9 e0       	ldi	r31, 0x09	; 9
    1686:	00 0f       	add	r16, r16
    1688:	11 1f       	adc	r17, r17
    168a:	22 1f       	adc	r18, r18
    168c:	33 1f       	adc	r19, r19
    168e:	fa 95       	dec	r31
    1690:	d1 f7       	brne	.-12     	; 0x1686 <lea_encrypt_core+0x11c2>
    1692:	f0 2d       	mov	r31, r0
    1694:	08 2b       	or	r16, r24
    1696:	19 2b       	or	r17, r25
    1698:	2a 2b       	or	r18, r26
    169a:	3b 2b       	or	r19, r27

	X3 = ROR((X2 ^ key->rk[100]) + (X3 ^ key->rk[101]), 3);
    169c:	df 01       	movw	r26, r30
    169e:	a0 57       	subi	r26, 0x70	; 112
    16a0:	be 4f       	sbci	r27, 0xFE	; 254
    16a2:	4d 90       	ld	r4, X+
    16a4:	5d 90       	ld	r5, X+
    16a6:	6d 90       	ld	r6, X+
    16a8:	7c 90       	ld	r7, X
    16aa:	13 97       	sbiw	r26, 0x03	; 3
    16ac:	4c 24       	eor	r4, r12
    16ae:	5d 24       	eor	r5, r13
    16b0:	6e 24       	eor	r6, r14
    16b2:	7f 24       	eor	r7, r15
    16b4:	14 96       	adiw	r26, 0x04	; 4
    16b6:	8d 91       	ld	r24, X+
    16b8:	9d 91       	ld	r25, X+
    16ba:	0d 90       	ld	r0, X+
    16bc:	bc 91       	ld	r27, X
    16be:	a0 2d       	mov	r26, r0
    16c0:	84 27       	eor	r24, r20
    16c2:	95 27       	eor	r25, r21
    16c4:	a6 27       	eor	r26, r22
    16c6:	b7 27       	eor	r27, r23
    16c8:	48 0e       	add	r4, r24
    16ca:	59 1e       	adc	r5, r25
    16cc:	6a 1e       	adc	r6, r26
    16ce:	7b 1e       	adc	r7, r27
    16d0:	d3 01       	movw	r26, r6
    16d2:	c2 01       	movw	r24, r4
    16d4:	43 e0       	ldi	r20, 0x03	; 3
    16d6:	b6 95       	lsr	r27
    16d8:	a7 95       	ror	r26
    16da:	97 95       	ror	r25
    16dc:	87 95       	ror	r24
    16de:	4a 95       	dec	r20
    16e0:	d1 f7       	brne	.-12     	; 0x16d6 <lea_encrypt_core+0x1212>
    16e2:	5d e1       	ldi	r21, 0x1D	; 29
    16e4:	44 0c       	add	r4, r4
    16e6:	55 1c       	adc	r5, r5
    16e8:	66 1c       	adc	r6, r6
    16ea:	77 1c       	adc	r7, r7
    16ec:	5a 95       	dec	r21
    16ee:	d1 f7       	brne	.-12     	; 0x16e4 <lea_encrypt_core+0x1220>
    16f0:	48 2a       	or	r4, r24
    16f2:	59 2a       	or	r5, r25
    16f4:	6a 2a       	or	r6, r26
    16f6:	7b 2a       	or	r7, r27
	X2 = ROR((X1 ^ key->rk[ 98]) + (X2 ^ key->rk[ 99]), 5);
    16f8:	df 01       	movw	r26, r30
    16fa:	a4 57       	subi	r26, 0x74	; 116
    16fc:	be 4f       	sbci	r27, 0xFE	; 254
    16fe:	4d 91       	ld	r20, X+
    1700:	5d 91       	ld	r21, X+
    1702:	6d 91       	ld	r22, X+
    1704:	7c 91       	ld	r23, X
    1706:	13 97       	sbiw	r26, 0x03	; 3
    1708:	4c 25       	eor	r20, r12
    170a:	5d 25       	eor	r21, r13
    170c:	6e 25       	eor	r22, r14
    170e:	7f 25       	eor	r23, r15
    1710:	14 97       	sbiw	r26, 0x04	; 4
    1712:	8d 91       	ld	r24, X+
    1714:	9d 91       	ld	r25, X+
    1716:	0d 90       	ld	r0, X+
    1718:	bc 91       	ld	r27, X
    171a:	a0 2d       	mov	r26, r0
    171c:	88 25       	eor	r24, r8
    171e:	99 25       	eor	r25, r9
    1720:	aa 25       	eor	r26, r10
    1722:	bb 25       	eor	r27, r11
    1724:	48 0f       	add	r20, r24
    1726:	59 1f       	adc	r21, r25
    1728:	6a 1f       	adc	r22, r26
    172a:	7b 1f       	adc	r23, r27
    172c:	db 01       	movw	r26, r22
    172e:	ca 01       	movw	r24, r20
    1730:	68 94       	set
    1732:	14 f8       	bld	r1, 4
    1734:	b6 95       	lsr	r27
    1736:	a7 95       	ror	r26
    1738:	97 95       	ror	r25
    173a:	87 95       	ror	r24
    173c:	16 94       	lsr	r1
    173e:	d1 f7       	brne	.-12     	; 0x1734 <lea_encrypt_core+0x1270>
    1740:	03 2e       	mov	r0, r19
    1742:	3b e1       	ldi	r19, 0x1B	; 27
    1744:	44 0f       	add	r20, r20
    1746:	55 1f       	adc	r21, r21
    1748:	66 1f       	adc	r22, r22
    174a:	77 1f       	adc	r23, r23
    174c:	3a 95       	dec	r19
    174e:	d1 f7       	brne	.-12     	; 0x1744 <lea_encrypt_core+0x1280>
    1750:	30 2d       	mov	r19, r0
    1752:	48 2b       	or	r20, r24
    1754:	59 2b       	or	r21, r25
    1756:	6a 2b       	or	r22, r26
    1758:	7b 2b       	or	r23, r27
	X1 = ROL((X0 ^ key->rk[ 96]) + (X1 ^ key->rk[ 97]), 9);
    175a:	df 01       	movw	r26, r30
    175c:	ac 57       	subi	r26, 0x7C	; 124
    175e:	be 4f       	sbci	r27, 0xFE	; 254
    1760:	cd 90       	ld	r12, X+
    1762:	dd 90       	ld	r13, X+
    1764:	ed 90       	ld	r14, X+
    1766:	fc 90       	ld	r15, X
    1768:	13 97       	sbiw	r26, 0x03	; 3
    176a:	c8 24       	eor	r12, r8
    176c:	d9 24       	eor	r13, r9
    176e:	ea 24       	eor	r14, r10
    1770:	fb 24       	eor	r15, r11
    1772:	14 97       	sbiw	r26, 0x04	; 4
    1774:	8d 91       	ld	r24, X+
    1776:	9d 91       	ld	r25, X+
    1778:	0d 90       	ld	r0, X+
    177a:	bc 91       	ld	r27, X
    177c:	a0 2d       	mov	r26, r0
    177e:	80 27       	eor	r24, r16
    1780:	91 27       	eor	r25, r17
    1782:	a2 27       	eor	r26, r18
    1784:	b3 27       	eor	r27, r19
    1786:	c8 0e       	add	r12, r24
    1788:	d9 1e       	adc	r13, r25
    178a:	ea 1e       	adc	r14, r26
    178c:	fb 1e       	adc	r15, r27
    178e:	d7 01       	movw	r26, r14
    1790:	c6 01       	movw	r24, r12
    1792:	07 2e       	mov	r0, r23
    1794:	77 e1       	ldi	r23, 0x17	; 23
    1796:	b6 95       	lsr	r27
    1798:	a7 95       	ror	r26
    179a:	97 95       	ror	r25
    179c:	87 95       	ror	r24
    179e:	7a 95       	dec	r23
    17a0:	d1 f7       	brne	.-12     	; 0x1796 <lea_encrypt_core+0x12d2>
    17a2:	70 2d       	mov	r23, r0
    17a4:	0b 2e       	mov	r0, r27
    17a6:	b9 e0       	ldi	r27, 0x09	; 9
    17a8:	cc 0c       	add	r12, r12
    17aa:	dd 1c       	adc	r13, r13
    17ac:	ee 1c       	adc	r14, r14
    17ae:	ff 1c       	adc	r15, r15
    17b0:	ba 95       	dec	r27
    17b2:	d1 f7       	brne	.-12     	; 0x17a8 <lea_encrypt_core+0x12e4>
    17b4:	b0 2d       	mov	r27, r0
    17b6:	c8 2a       	or	r12, r24
    17b8:	d9 2a       	or	r13, r25
    17ba:	ea 2a       	or	r14, r26
    17bc:	fb 2a       	or	r15, r27
	X0 = ROR((X3 ^ key->rk[106]) + (X0 ^ key->rk[107]), 3);
    17be:	df 01       	movw	r26, r30
    17c0:	a8 55       	subi	r26, 0x58	; 88
    17c2:	be 4f       	sbci	r27, 0xFE	; 254
    17c4:	8d 90       	ld	r8, X+
    17c6:	9d 90       	ld	r9, X+
    17c8:	ad 90       	ld	r10, X+
    17ca:	bc 90       	ld	r11, X
    17cc:	13 97       	sbiw	r26, 0x03	; 3
    17ce:	84 24       	eor	r8, r4
    17d0:	95 24       	eor	r9, r5
    17d2:	a6 24       	eor	r10, r6
    17d4:	b7 24       	eor	r11, r7
    17d6:	14 96       	adiw	r26, 0x04	; 4
    17d8:	8d 91       	ld	r24, X+
    17da:	9d 91       	ld	r25, X+
    17dc:	0d 90       	ld	r0, X+
    17de:	bc 91       	ld	r27, X
    17e0:	a0 2d       	mov	r26, r0
    17e2:	80 27       	eor	r24, r16
    17e4:	91 27       	eor	r25, r17
    17e6:	a2 27       	eor	r26, r18
    17e8:	b3 27       	eor	r27, r19
    17ea:	88 0e       	add	r8, r24
    17ec:	99 1e       	adc	r9, r25
    17ee:	aa 1e       	adc	r10, r26
    17f0:	bb 1e       	adc	r11, r27
    17f2:	d5 01       	movw	r26, r10
    17f4:	c4 01       	movw	r24, r8
    17f6:	23 e0       	ldi	r18, 0x03	; 3
    17f8:	b6 95       	lsr	r27
    17fa:	a7 95       	ror	r26
    17fc:	97 95       	ror	r25
    17fe:	87 95       	ror	r24
    1800:	2a 95       	dec	r18
    1802:	d1 f7       	brne	.-12     	; 0x17f8 <lea_encrypt_core+0x1334>
    1804:	3d e1       	ldi	r19, 0x1D	; 29
    1806:	88 0c       	add	r8, r8
    1808:	99 1c       	adc	r9, r9
    180a:	aa 1c       	adc	r10, r10
    180c:	bb 1c       	adc	r11, r11
    180e:	3a 95       	dec	r19
    1810:	d1 f7       	brne	.-12     	; 0x1806 <lea_encrypt_core+0x1342>
    1812:	88 2a       	or	r8, r24
    1814:	99 2a       	or	r9, r25
    1816:	aa 2a       	or	r10, r26
    1818:	bb 2a       	or	r11, r27
	X3 = ROR((X2 ^ key->rk[104]) + (X3 ^ key->rk[105]), 5);
    181a:	df 01       	movw	r26, r30
    181c:	ac 55       	subi	r26, 0x5C	; 92
    181e:	be 4f       	sbci	r27, 0xFE	; 254
    1820:	0d 91       	ld	r16, X+
    1822:	1d 91       	ld	r17, X+
    1824:	2d 91       	ld	r18, X+
    1826:	3c 91       	ld	r19, X
    1828:	13 97       	sbiw	r26, 0x03	; 3
    182a:	04 25       	eor	r16, r4
    182c:	15 25       	eor	r17, r5
    182e:	26 25       	eor	r18, r6
    1830:	37 25       	eor	r19, r7
    1832:	14 97       	sbiw	r26, 0x04	; 4
    1834:	8d 91       	ld	r24, X+
    1836:	9d 91       	ld	r25, X+
    1838:	0d 90       	ld	r0, X+
    183a:	bc 91       	ld	r27, X
    183c:	a0 2d       	mov	r26, r0
    183e:	84 27       	eor	r24, r20
    1840:	95 27       	eor	r25, r21
    1842:	a6 27       	eor	r26, r22
    1844:	b7 27       	eor	r27, r23
    1846:	08 0f       	add	r16, r24
    1848:	19 1f       	adc	r17, r25
    184a:	2a 1f       	adc	r18, r26
    184c:	3b 1f       	adc	r19, r27
    184e:	d9 01       	movw	r26, r18
    1850:	c8 01       	movw	r24, r16
    1852:	68 94       	set
    1854:	14 f8       	bld	r1, 4
    1856:	b6 95       	lsr	r27
    1858:	a7 95       	ror	r26
    185a:	97 95       	ror	r25
    185c:	87 95       	ror	r24
    185e:	16 94       	lsr	r1
    1860:	d1 f7       	brne	.-12     	; 0x1856 <lea_encrypt_core+0x1392>
    1862:	0f 2e       	mov	r0, r31
    1864:	fb e1       	ldi	r31, 0x1B	; 27
    1866:	00 0f       	add	r16, r16
    1868:	11 1f       	adc	r17, r17
    186a:	22 1f       	adc	r18, r18
    186c:	33 1f       	adc	r19, r19
    186e:	fa 95       	dec	r31
    1870:	d1 f7       	brne	.-12     	; 0x1866 <lea_encrypt_core+0x13a2>
    1872:	f0 2d       	mov	r31, r0
    1874:	08 2b       	or	r16, r24
    1876:	19 2b       	or	r17, r25
    1878:	2a 2b       	or	r18, r26
    187a:	3b 2b       	or	r19, r27
	X2 = ROL((X1 ^ key->rk[102]) + (X2 ^ key->rk[103]), 9);
    187c:	df 01       	movw	r26, r30
    187e:	a4 56       	subi	r26, 0x64	; 100
    1880:	be 4f       	sbci	r27, 0xFE	; 254
    1882:	4d 90       	ld	r4, X+
    1884:	5d 90       	ld	r5, X+
    1886:	6d 90       	ld	r6, X+
    1888:	7c 90       	ld	r7, X
    188a:	13 97       	sbiw	r26, 0x03	; 3
    188c:	44 26       	eor	r4, r20
    188e:	55 26       	eor	r5, r21
    1890:	66 26       	eor	r6, r22
    1892:	77 26       	eor	r7, r23
    1894:	14 97       	sbiw	r26, 0x04	; 4
    1896:	8d 91       	ld	r24, X+
    1898:	9d 91       	ld	r25, X+
    189a:	0d 90       	ld	r0, X+
    189c:	bc 91       	ld	r27, X
    189e:	a0 2d       	mov	r26, r0
    18a0:	8c 25       	eor	r24, r12
    18a2:	9d 25       	eor	r25, r13
    18a4:	ae 25       	eor	r26, r14
    18a6:	bf 25       	eor	r27, r15
    18a8:	48 0e       	add	r4, r24
    18aa:	59 1e       	adc	r5, r25
    18ac:	6a 1e       	adc	r6, r26
    18ae:	7b 1e       	adc	r7, r27
    18b0:	d3 01       	movw	r26, r6
    18b2:	c2 01       	movw	r24, r4
    18b4:	47 e1       	ldi	r20, 0x17	; 23
    18b6:	b6 95       	lsr	r27
    18b8:	a7 95       	ror	r26
    18ba:	97 95       	ror	r25
    18bc:	87 95       	ror	r24
    18be:	4a 95       	dec	r20
    18c0:	d1 f7       	brne	.-12     	; 0x18b6 <lea_encrypt_core+0x13f2>
    18c2:	59 e0       	ldi	r21, 0x09	; 9
    18c4:	44 0c       	add	r4, r4
    18c6:	55 1c       	adc	r5, r5
    18c8:	66 1c       	adc	r6, r6
    18ca:	77 1c       	adc	r7, r7
    18cc:	5a 95       	dec	r21
    18ce:	d1 f7       	brne	.-12     	; 0x18c4 <lea_encrypt_core+0x1400>
    18d0:	48 2a       	or	r4, r24
    18d2:	59 2a       	or	r5, r25
    18d4:	6a 2a       	or	r6, r26
    18d6:	7b 2a       	or	r7, r27
	X1 = ROR((X0 ^ key->rk[112]) + (X1 ^ key->rk[113]), 3);
    18d8:	df 01       	movw	r26, r30
    18da:	a0 54       	subi	r26, 0x40	; 64
    18dc:	be 4f       	sbci	r27, 0xFE	; 254
    18de:	4d 91       	ld	r20, X+
    18e0:	5d 91       	ld	r21, X+
    18e2:	6d 91       	ld	r22, X+
    18e4:	7c 91       	ld	r23, X
    18e6:	13 97       	sbiw	r26, 0x03	; 3
    18e8:	48 25       	eor	r20, r8
    18ea:	59 25       	eor	r21, r9
    18ec:	6a 25       	eor	r22, r10
    18ee:	7b 25       	eor	r23, r11
    18f0:	14 96       	adiw	r26, 0x04	; 4
    18f2:	8d 91       	ld	r24, X+
    18f4:	9d 91       	ld	r25, X+
    18f6:	0d 90       	ld	r0, X+
    18f8:	bc 91       	ld	r27, X
    18fa:	a0 2d       	mov	r26, r0
    18fc:	8c 25       	eor	r24, r12
    18fe:	9d 25       	eor	r25, r13
    1900:	ae 25       	eor	r26, r14
    1902:	bf 25       	eor	r27, r15
    1904:	48 0f       	add	r20, r24
    1906:	59 1f       	adc	r21, r25
    1908:	6a 1f       	adc	r22, r26
    190a:	7b 1f       	adc	r23, r27
    190c:	db 01       	movw	r26, r22
    190e:	ca 01       	movw	r24, r20
    1910:	68 94       	set
    1912:	12 f8       	bld	r1, 2
    1914:	b6 95       	lsr	r27
    1916:	a7 95       	ror	r26
    1918:	97 95       	ror	r25
    191a:	87 95       	ror	r24
    191c:	16 94       	lsr	r1
    191e:	d1 f7       	brne	.-12     	; 0x1914 <lea_encrypt_core+0x1450>
    1920:	03 2e       	mov	r0, r19
    1922:	3d e1       	ldi	r19, 0x1D	; 29
    1924:	44 0f       	add	r20, r20
    1926:	55 1f       	adc	r21, r21
    1928:	66 1f       	adc	r22, r22
    192a:	77 1f       	adc	r23, r23
    192c:	3a 95       	dec	r19
    192e:	d1 f7       	brne	.-12     	; 0x1924 <lea_encrypt_core+0x1460>
    1930:	30 2d       	mov	r19, r0
    1932:	48 2b       	or	r20, r24
    1934:	59 2b       	or	r21, r25
    1936:	6a 2b       	or	r22, r26
    1938:	7b 2b       	or	r23, r27
	X0 = ROR((X3 ^ key->rk[110]) + (X0 ^ key->rk[111]), 5);
    193a:	df 01       	movw	r26, r30
    193c:	a4 54       	subi	r26, 0x44	; 68
    193e:	be 4f       	sbci	r27, 0xFE	; 254
    1940:	cd 90       	ld	r12, X+
    1942:	dd 90       	ld	r13, X+
    1944:	ed 90       	ld	r14, X+
    1946:	fc 90       	ld	r15, X
    1948:	13 97       	sbiw	r26, 0x03	; 3
    194a:	c8 24       	eor	r12, r8
    194c:	d9 24       	eor	r13, r9
    194e:	ea 24       	eor	r14, r10
    1950:	fb 24       	eor	r15, r11
    1952:	14 97       	sbiw	r26, 0x04	; 4
    1954:	8d 91       	ld	r24, X+
    1956:	9d 91       	ld	r25, X+
    1958:	0d 90       	ld	r0, X+
    195a:	bc 91       	ld	r27, X
    195c:	a0 2d       	mov	r26, r0
    195e:	80 27       	eor	r24, r16
    1960:	91 27       	eor	r25, r17
    1962:	a2 27       	eor	r26, r18
    1964:	b3 27       	eor	r27, r19
    1966:	c8 0e       	add	r12, r24
    1968:	d9 1e       	adc	r13, r25
    196a:	ea 1e       	adc	r14, r26
    196c:	fb 1e       	adc	r15, r27
    196e:	d7 01       	movw	r26, r14
    1970:	c6 01       	movw	r24, r12
    1972:	68 94       	set
    1974:	14 f8       	bld	r1, 4
    1976:	b6 95       	lsr	r27
    1978:	a7 95       	ror	r26
    197a:	97 95       	ror	r25
    197c:	87 95       	ror	r24
    197e:	16 94       	lsr	r1
    1980:	d1 f7       	brne	.-12     	; 0x1976 <lea_encrypt_core+0x14b2>
    1982:	0b 2e       	mov	r0, r27
    1984:	bb e1       	ldi	r27, 0x1B	; 27
    1986:	cc 0c       	add	r12, r12
    1988:	dd 1c       	adc	r13, r13
    198a:	ee 1c       	adc	r14, r14
    198c:	ff 1c       	adc	r15, r15
    198e:	ba 95       	dec	r27
    1990:	d1 f7       	brne	.-12     	; 0x1986 <lea_encrypt_core+0x14c2>
    1992:	b0 2d       	mov	r27, r0
    1994:	c8 2a       	or	r12, r24
    1996:	d9 2a       	or	r13, r25
    1998:	ea 2a       	or	r14, r26
    199a:	fb 2a       	or	r15, r27
	X3 = ROL((X2 ^ key->rk[108]) + (X3 ^ key->rk[109]), 9);
    199c:	df 01       	movw	r26, r30
    199e:	ac 54       	subi	r26, 0x4C	; 76
    19a0:	be 4f       	sbci	r27, 0xFE	; 254
    19a2:	8d 90       	ld	r8, X+
    19a4:	9d 90       	ld	r9, X+
    19a6:	ad 90       	ld	r10, X+
    19a8:	bc 90       	ld	r11, X
    19aa:	13 97       	sbiw	r26, 0x03	; 3
    19ac:	80 26       	eor	r8, r16
    19ae:	91 26       	eor	r9, r17
    19b0:	a2 26       	eor	r10, r18
    19b2:	b3 26       	eor	r11, r19
    19b4:	14 97       	sbiw	r26, 0x04	; 4
    19b6:	8d 91       	ld	r24, X+
    19b8:	9d 91       	ld	r25, X+
    19ba:	0d 90       	ld	r0, X+
    19bc:	bc 91       	ld	r27, X
    19be:	a0 2d       	mov	r26, r0
    19c0:	84 25       	eor	r24, r4
    19c2:	95 25       	eor	r25, r5
    19c4:	a6 25       	eor	r26, r6
    19c6:	b7 25       	eor	r27, r7
    19c8:	88 0e       	add	r8, r24
    19ca:	99 1e       	adc	r9, r25
    19cc:	aa 1e       	adc	r10, r26
    19ce:	bb 1e       	adc	r11, r27
    19d0:	d5 01       	movw	r26, r10
    19d2:	c4 01       	movw	r24, r8
    19d4:	27 e1       	ldi	r18, 0x17	; 23
    19d6:	b6 95       	lsr	r27
    19d8:	a7 95       	ror	r26
    19da:	97 95       	ror	r25
    19dc:	87 95       	ror	r24
    19de:	2a 95       	dec	r18
    19e0:	d1 f7       	brne	.-12     	; 0x19d6 <lea_encrypt_core+0x1512>
    19e2:	39 e0       	ldi	r19, 0x09	; 9
    19e4:	88 0c       	add	r8, r8
    19e6:	99 1c       	adc	r9, r9
    19e8:	aa 1c       	adc	r10, r10
    19ea:	bb 1c       	adc	r11, r11
    19ec:	3a 95       	dec	r19
    19ee:	d1 f7       	brne	.-12     	; 0x19e4 <lea_encrypt_core+0x1520>
    19f0:	88 2a       	or	r8, r24
    19f2:	99 2a       	or	r9, r25
    19f4:	aa 2a       	or	r10, r26
    19f6:	bb 2a       	or	r11, r27
	X2 = ROR((X1 ^ key->rk[118]) + (X2 ^ key->rk[119]), 3);
    19f8:	df 01       	movw	r26, r30
    19fa:	a8 52       	subi	r26, 0x28	; 40
    19fc:	be 4f       	sbci	r27, 0xFE	; 254
    19fe:	0d 91       	ld	r16, X+
    1a00:	1d 91       	ld	r17, X+
    1a02:	2d 91       	ld	r18, X+
    1a04:	3c 91       	ld	r19, X
    1a06:	13 97       	sbiw	r26, 0x03	; 3
    1a08:	04 27       	eor	r16, r20
    1a0a:	15 27       	eor	r17, r21
    1a0c:	26 27       	eor	r18, r22
    1a0e:	37 27       	eor	r19, r23
    1a10:	14 96       	adiw	r26, 0x04	; 4
    1a12:	8d 91       	ld	r24, X+
    1a14:	9d 91       	ld	r25, X+
    1a16:	0d 90       	ld	r0, X+
    1a18:	bc 91       	ld	r27, X
    1a1a:	a0 2d       	mov	r26, r0
    1a1c:	84 25       	eor	r24, r4
    1a1e:	95 25       	eor	r25, r5
    1a20:	a6 25       	eor	r26, r6
    1a22:	b7 25       	eor	r27, r7
    1a24:	08 0f       	add	r16, r24
    1a26:	19 1f       	adc	r17, r25
    1a28:	2a 1f       	adc	r18, r26
    1a2a:	3b 1f       	adc	r19, r27
    1a2c:	d9 01       	movw	r26, r18
    1a2e:	c8 01       	movw	r24, r16
    1a30:	68 94       	set
    1a32:	12 f8       	bld	r1, 2
    1a34:	b6 95       	lsr	r27
    1a36:	a7 95       	ror	r26
    1a38:	97 95       	ror	r25
    1a3a:	87 95       	ror	r24
    1a3c:	16 94       	lsr	r1
    1a3e:	d1 f7       	brne	.-12     	; 0x1a34 <lea_encrypt_core+0x1570>
    1a40:	0f 2e       	mov	r0, r31
    1a42:	fd e1       	ldi	r31, 0x1D	; 29
    1a44:	00 0f       	add	r16, r16
    1a46:	11 1f       	adc	r17, r17
    1a48:	22 1f       	adc	r18, r18
    1a4a:	33 1f       	adc	r19, r19
    1a4c:	fa 95       	dec	r31
    1a4e:	d1 f7       	brne	.-12     	; 0x1a44 <lea_encrypt_core+0x1580>
    1a50:	f0 2d       	mov	r31, r0
    1a52:	08 2b       	or	r16, r24
    1a54:	19 2b       	or	r17, r25
    1a56:	2a 2b       	or	r18, r26
    1a58:	3b 2b       	or	r19, r27
	X1 = ROR((X0 ^ key->rk[116]) + (X1 ^ key->rk[117]), 5);
    1a5a:	df 01       	movw	r26, r30
    1a5c:	ac 52       	subi	r26, 0x2C	; 44
    1a5e:	be 4f       	sbci	r27, 0xFE	; 254
    1a60:	4d 90       	ld	r4, X+
    1a62:	5d 90       	ld	r5, X+
    1a64:	6d 90       	ld	r6, X+
    1a66:	7c 90       	ld	r7, X
    1a68:	13 97       	sbiw	r26, 0x03	; 3
    1a6a:	44 26       	eor	r4, r20
    1a6c:	55 26       	eor	r5, r21
    1a6e:	66 26       	eor	r6, r22
    1a70:	77 26       	eor	r7, r23
    1a72:	14 97       	sbiw	r26, 0x04	; 4
    1a74:	8d 91       	ld	r24, X+
    1a76:	9d 91       	ld	r25, X+
    1a78:	0d 90       	ld	r0, X+
    1a7a:	bc 91       	ld	r27, X
    1a7c:	a0 2d       	mov	r26, r0
    1a7e:	8c 25       	eor	r24, r12
    1a80:	9d 25       	eor	r25, r13
    1a82:	ae 25       	eor	r26, r14
    1a84:	bf 25       	eor	r27, r15
    1a86:	48 0e       	add	r4, r24
    1a88:	59 1e       	adc	r5, r25
    1a8a:	6a 1e       	adc	r6, r26
    1a8c:	7b 1e       	adc	r7, r27
    1a8e:	d3 01       	movw	r26, r6
    1a90:	c2 01       	movw	r24, r4
    1a92:	45 e0       	ldi	r20, 0x05	; 5
    1a94:	b6 95       	lsr	r27
    1a96:	a7 95       	ror	r26
    1a98:	97 95       	ror	r25
    1a9a:	87 95       	ror	r24
    1a9c:	4a 95       	dec	r20
    1a9e:	d1 f7       	brne	.-12     	; 0x1a94 <lea_encrypt_core+0x15d0>
    1aa0:	5b e1       	ldi	r21, 0x1B	; 27
    1aa2:	44 0c       	add	r4, r4
    1aa4:	55 1c       	adc	r5, r5
    1aa6:	66 1c       	adc	r6, r6
    1aa8:	77 1c       	adc	r7, r7
    1aaa:	5a 95       	dec	r21
    1aac:	d1 f7       	brne	.-12     	; 0x1aa2 <lea_encrypt_core+0x15de>
    1aae:	48 2a       	or	r4, r24
    1ab0:	59 2a       	or	r5, r25
    1ab2:	6a 2a       	or	r6, r26
    1ab4:	7b 2a       	or	r7, r27
	X0 = ROL((X3 ^ key->rk[114]) + (X0 ^ key->rk[115]), 9);
    1ab6:	df 01       	movw	r26, r30
    1ab8:	a4 53       	subi	r26, 0x34	; 52
    1aba:	be 4f       	sbci	r27, 0xFE	; 254
    1abc:	4d 91       	ld	r20, X+
    1abe:	5d 91       	ld	r21, X+
    1ac0:	6d 91       	ld	r22, X+
    1ac2:	7c 91       	ld	r23, X
    1ac4:	13 97       	sbiw	r26, 0x03	; 3
    1ac6:	4c 25       	eor	r20, r12
    1ac8:	5d 25       	eor	r21, r13
    1aca:	6e 25       	eor	r22, r14
    1acc:	7f 25       	eor	r23, r15
    1ace:	14 97       	sbiw	r26, 0x04	; 4
    1ad0:	8d 91       	ld	r24, X+
    1ad2:	9d 91       	ld	r25, X+
    1ad4:	0d 90       	ld	r0, X+
    1ad6:	bc 91       	ld	r27, X
    1ad8:	a0 2d       	mov	r26, r0
    1ada:	88 25       	eor	r24, r8
    1adc:	99 25       	eor	r25, r9
    1ade:	aa 25       	eor	r26, r10
    1ae0:	bb 25       	eor	r27, r11
    1ae2:	48 0f       	add	r20, r24
    1ae4:	59 1f       	adc	r21, r25
    1ae6:	6a 1f       	adc	r22, r26
    1ae8:	7b 1f       	adc	r23, r27
    1aea:	db 01       	movw	r26, r22
    1aec:	ca 01       	movw	r24, r20
    1aee:	07 2e       	mov	r0, r23
    1af0:	77 e1       	ldi	r23, 0x17	; 23
    1af2:	b6 95       	lsr	r27
    1af4:	a7 95       	ror	r26
    1af6:	97 95       	ror	r25
    1af8:	87 95       	ror	r24
    1afa:	7a 95       	dec	r23
    1afc:	d1 f7       	brne	.-12     	; 0x1af2 <lea_encrypt_core+0x162e>
    1afe:	70 2d       	mov	r23, r0
    1b00:	03 2e       	mov	r0, r19
    1b02:	39 e0       	ldi	r19, 0x09	; 9
    1b04:	44 0f       	add	r20, r20
    1b06:	55 1f       	adc	r21, r21
    1b08:	66 1f       	adc	r22, r22
    1b0a:	77 1f       	adc	r23, r23
    1b0c:	3a 95       	dec	r19
    1b0e:	d1 f7       	brne	.-12     	; 0x1b04 <lea_encrypt_core+0x1640>
    1b10:	30 2d       	mov	r19, r0
    1b12:	48 2b       	or	r20, r24
    1b14:	59 2b       	or	r21, r25
    1b16:	6a 2b       	or	r22, r26
    1b18:	7b 2b       	or	r23, r27

	X3 = ROR((X2 ^ key->rk[124]) + (X3 ^ key->rk[125]), 3);
    1b1a:	df 01       	movw	r26, r30
    1b1c:	a0 51       	subi	r26, 0x10	; 16
    1b1e:	be 4f       	sbci	r27, 0xFE	; 254
    1b20:	cd 90       	ld	r12, X+
    1b22:	dd 90       	ld	r13, X+
    1b24:	ed 90       	ld	r14, X+
    1b26:	fc 90       	ld	r15, X
    1b28:	13 97       	sbiw	r26, 0x03	; 3
    1b2a:	c0 26       	eor	r12, r16
    1b2c:	d1 26       	eor	r13, r17
    1b2e:	e2 26       	eor	r14, r18
    1b30:	f3 26       	eor	r15, r19
    1b32:	14 96       	adiw	r26, 0x04	; 4
    1b34:	8d 91       	ld	r24, X+
    1b36:	9d 91       	ld	r25, X+
    1b38:	0d 90       	ld	r0, X+
    1b3a:	bc 91       	ld	r27, X
    1b3c:	a0 2d       	mov	r26, r0
    1b3e:	88 25       	eor	r24, r8
    1b40:	99 25       	eor	r25, r9
    1b42:	aa 25       	eor	r26, r10
    1b44:	bb 25       	eor	r27, r11
    1b46:	c8 0e       	add	r12, r24
    1b48:	d9 1e       	adc	r13, r25
    1b4a:	ea 1e       	adc	r14, r26
    1b4c:	fb 1e       	adc	r15, r27
    1b4e:	d7 01       	movw	r26, r14
    1b50:	c6 01       	movw	r24, r12
    1b52:	68 94       	set
    1b54:	12 f8       	bld	r1, 2
    1b56:	b6 95       	lsr	r27
    1b58:	a7 95       	ror	r26
    1b5a:	97 95       	ror	r25
    1b5c:	87 95       	ror	r24
    1b5e:	16 94       	lsr	r1
    1b60:	d1 f7       	brne	.-12     	; 0x1b56 <lea_encrypt_core+0x1692>
    1b62:	0b 2e       	mov	r0, r27
    1b64:	bd e1       	ldi	r27, 0x1D	; 29
    1b66:	cc 0c       	add	r12, r12
    1b68:	dd 1c       	adc	r13, r13
    1b6a:	ee 1c       	adc	r14, r14
    1b6c:	ff 1c       	adc	r15, r15
    1b6e:	ba 95       	dec	r27
    1b70:	d1 f7       	brne	.-12     	; 0x1b66 <lea_encrypt_core+0x16a2>
    1b72:	b0 2d       	mov	r27, r0
    1b74:	c8 2a       	or	r12, r24
    1b76:	d9 2a       	or	r13, r25
    1b78:	ea 2a       	or	r14, r26
    1b7a:	fb 2a       	or	r15, r27
	X2 = ROR((X1 ^ key->rk[122]) + (X2 ^ key->rk[123]), 5);
    1b7c:	df 01       	movw	r26, r30
    1b7e:	a4 51       	subi	r26, 0x14	; 20
    1b80:	be 4f       	sbci	r27, 0xFE	; 254
    1b82:	8d 90       	ld	r8, X+
    1b84:	9d 90       	ld	r9, X+
    1b86:	ad 90       	ld	r10, X+
    1b88:	bc 90       	ld	r11, X
    1b8a:	13 97       	sbiw	r26, 0x03	; 3
    1b8c:	80 26       	eor	r8, r16
    1b8e:	91 26       	eor	r9, r17
    1b90:	a2 26       	eor	r10, r18
    1b92:	b3 26       	eor	r11, r19
    1b94:	14 97       	sbiw	r26, 0x04	; 4
    1b96:	8d 91       	ld	r24, X+
    1b98:	9d 91       	ld	r25, X+
    1b9a:	0d 90       	ld	r0, X+
    1b9c:	bc 91       	ld	r27, X
    1b9e:	a0 2d       	mov	r26, r0
    1ba0:	84 25       	eor	r24, r4
    1ba2:	95 25       	eor	r25, r5
    1ba4:	a6 25       	eor	r26, r6
    1ba6:	b7 25       	eor	r27, r7
    1ba8:	88 0e       	add	r8, r24
    1baa:	99 1e       	adc	r9, r25
    1bac:	aa 1e       	adc	r10, r26
    1bae:	bb 1e       	adc	r11, r27
    1bb0:	d5 01       	movw	r26, r10
    1bb2:	c4 01       	movw	r24, r8
    1bb4:	25 e0       	ldi	r18, 0x05	; 5
    1bb6:	b6 95       	lsr	r27
    1bb8:	a7 95       	ror	r26
    1bba:	97 95       	ror	r25
    1bbc:	87 95       	ror	r24
    1bbe:	2a 95       	dec	r18
    1bc0:	d1 f7       	brne	.-12     	; 0x1bb6 <lea_encrypt_core+0x16f2>
    1bc2:	3b e1       	ldi	r19, 0x1B	; 27
    1bc4:	88 0c       	add	r8, r8
    1bc6:	99 1c       	adc	r9, r9
    1bc8:	aa 1c       	adc	r10, r10
    1bca:	bb 1c       	adc	r11, r11
    1bcc:	3a 95       	dec	r19
    1bce:	d1 f7       	brne	.-12     	; 0x1bc4 <lea_encrypt_core+0x1700>
    1bd0:	88 2a       	or	r8, r24
    1bd2:	99 2a       	or	r9, r25
    1bd4:	aa 2a       	or	r10, r26
    1bd6:	bb 2a       	or	r11, r27
	X1 = ROL((X0 ^ key->rk[120]) + (X1 ^ key->rk[121]), 9);
    1bd8:	df 01       	movw	r26, r30
    1bda:	ac 51       	subi	r26, 0x1C	; 28
    1bdc:	be 4f       	sbci	r27, 0xFE	; 254
    1bde:	0d 91       	ld	r16, X+
    1be0:	1d 91       	ld	r17, X+
    1be2:	2d 91       	ld	r18, X+
    1be4:	3c 91       	ld	r19, X
    1be6:	13 97       	sbiw	r26, 0x03	; 3
    1be8:	04 25       	eor	r16, r4
    1bea:	15 25       	eor	r17, r5
    1bec:	26 25       	eor	r18, r6
    1bee:	37 25       	eor	r19, r7
    1bf0:	14 97       	sbiw	r26, 0x04	; 4
    1bf2:	8d 91       	ld	r24, X+
    1bf4:	9d 91       	ld	r25, X+
    1bf6:	0d 90       	ld	r0, X+
    1bf8:	bc 91       	ld	r27, X
    1bfa:	a0 2d       	mov	r26, r0
    1bfc:	84 27       	eor	r24, r20
    1bfe:	95 27       	eor	r25, r21
    1c00:	a6 27       	eor	r26, r22
    1c02:	b7 27       	eor	r27, r23
    1c04:	08 0f       	add	r16, r24
    1c06:	19 1f       	adc	r17, r25
    1c08:	2a 1f       	adc	r18, r26
    1c0a:	3b 1f       	adc	r19, r27
    1c0c:	d9 01       	movw	r26, r18
    1c0e:	c8 01       	movw	r24, r16
    1c10:	07 2e       	mov	r0, r23
    1c12:	77 e1       	ldi	r23, 0x17	; 23
    1c14:	b6 95       	lsr	r27
    1c16:	a7 95       	ror	r26
    1c18:	97 95       	ror	r25
    1c1a:	87 95       	ror	r24
    1c1c:	7a 95       	dec	r23
    1c1e:	d1 f7       	brne	.-12     	; 0x1c14 <lea_encrypt_core+0x1750>
    1c20:	70 2d       	mov	r23, r0
    1c22:	0f 2e       	mov	r0, r31
    1c24:	f9 e0       	ldi	r31, 0x09	; 9
    1c26:	00 0f       	add	r16, r16
    1c28:	11 1f       	adc	r17, r17
    1c2a:	22 1f       	adc	r18, r18
    1c2c:	33 1f       	adc	r19, r19
    1c2e:	fa 95       	dec	r31
    1c30:	d1 f7       	brne	.-12     	; 0x1c26 <lea_encrypt_core+0x1762>
    1c32:	f0 2d       	mov	r31, r0
    1c34:	08 2b       	or	r16, r24
    1c36:	19 2b       	or	r17, r25
    1c38:	2a 2b       	or	r18, r26
    1c3a:	3b 2b       	or	r19, r27
	X0 = ROR((X3 ^ key->rk[130]) + (X0 ^ key->rk[131]), 3);
    1c3c:	df 01       	movw	r26, r30
    1c3e:	a8 5f       	subi	r26, 0xF8	; 248
    1c40:	bd 4f       	sbci	r27, 0xFD	; 253
    1c42:	4d 90       	ld	r4, X+
    1c44:	5d 90       	ld	r5, X+
    1c46:	6d 90       	ld	r6, X+
    1c48:	7c 90       	ld	r7, X
    1c4a:	13 97       	sbiw	r26, 0x03	; 3
    1c4c:	4c 24       	eor	r4, r12
    1c4e:	5d 24       	eor	r5, r13
    1c50:	6e 24       	eor	r6, r14
    1c52:	7f 24       	eor	r7, r15
    1c54:	14 96       	adiw	r26, 0x04	; 4
    1c56:	8d 91       	ld	r24, X+
    1c58:	9d 91       	ld	r25, X+
    1c5a:	0d 90       	ld	r0, X+
    1c5c:	bc 91       	ld	r27, X
    1c5e:	a0 2d       	mov	r26, r0
    1c60:	84 27       	eor	r24, r20
    1c62:	95 27       	eor	r25, r21
    1c64:	a6 27       	eor	r26, r22
    1c66:	b7 27       	eor	r27, r23
    1c68:	48 0e       	add	r4, r24
    1c6a:	59 1e       	adc	r5, r25
    1c6c:	6a 1e       	adc	r6, r26
    1c6e:	7b 1e       	adc	r7, r27
    1c70:	d3 01       	movw	r26, r6
    1c72:	c2 01       	movw	r24, r4
    1c74:	43 e0       	ldi	r20, 0x03	; 3
    1c76:	b6 95       	lsr	r27
    1c78:	a7 95       	ror	r26
    1c7a:	97 95       	ror	r25
    1c7c:	87 95       	ror	r24
    1c7e:	4a 95       	dec	r20
    1c80:	d1 f7       	brne	.-12     	; 0x1c76 <lea_encrypt_core+0x17b2>
    1c82:	5d e1       	ldi	r21, 0x1D	; 29
    1c84:	44 0c       	add	r4, r4
    1c86:	55 1c       	adc	r5, r5
    1c88:	66 1c       	adc	r6, r6
    1c8a:	77 1c       	adc	r7, r7
    1c8c:	5a 95       	dec	r21
    1c8e:	d1 f7       	brne	.-12     	; 0x1c84 <lea_encrypt_core+0x17c0>
    1c90:	48 2a       	or	r4, r24
    1c92:	59 2a       	or	r5, r25
    1c94:	6a 2a       	or	r6, r26
    1c96:	7b 2a       	or	r7, r27
	X3 = ROR((X2 ^ key->rk[128]) + (X3 ^ key->rk[129]), 5);
    1c98:	df 01       	movw	r26, r30
    1c9a:	ac 5f       	subi	r26, 0xFC	; 252
    1c9c:	bd 4f       	sbci	r27, 0xFD	; 253
    1c9e:	4d 91       	ld	r20, X+
    1ca0:	5d 91       	ld	r21, X+
    1ca2:	6d 91       	ld	r22, X+
    1ca4:	7c 91       	ld	r23, X
    1ca6:	13 97       	sbiw	r26, 0x03	; 3
    1ca8:	4c 25       	eor	r20, r12
    1caa:	5d 25       	eor	r21, r13
    1cac:	6e 25       	eor	r22, r14
    1cae:	7f 25       	eor	r23, r15
    1cb0:	14 97       	sbiw	r26, 0x04	; 4
    1cb2:	8d 91       	ld	r24, X+
    1cb4:	9d 91       	ld	r25, X+
    1cb6:	0d 90       	ld	r0, X+
    1cb8:	bc 91       	ld	r27, X
    1cba:	a0 2d       	mov	r26, r0
    1cbc:	88 25       	eor	r24, r8
    1cbe:	99 25       	eor	r25, r9
    1cc0:	aa 25       	eor	r26, r10
    1cc2:	bb 25       	eor	r27, r11
    1cc4:	48 0f       	add	r20, r24
    1cc6:	59 1f       	adc	r21, r25
    1cc8:	6a 1f       	adc	r22, r26
    1cca:	7b 1f       	adc	r23, r27
    1ccc:	db 01       	movw	r26, r22
    1cce:	ca 01       	movw	r24, r20
    1cd0:	68 94       	set
    1cd2:	14 f8       	bld	r1, 4
    1cd4:	b6 95       	lsr	r27
    1cd6:	a7 95       	ror	r26
    1cd8:	97 95       	ror	r25
    1cda:	87 95       	ror	r24
    1cdc:	16 94       	lsr	r1
    1cde:	d1 f7       	brne	.-12     	; 0x1cd4 <lea_encrypt_core+0x1810>
    1ce0:	03 2e       	mov	r0, r19
    1ce2:	3b e1       	ldi	r19, 0x1B	; 27
    1ce4:	44 0f       	add	r20, r20
    1ce6:	55 1f       	adc	r21, r21
    1ce8:	66 1f       	adc	r22, r22
    1cea:	77 1f       	adc	r23, r23
    1cec:	3a 95       	dec	r19
    1cee:	d1 f7       	brne	.-12     	; 0x1ce4 <lea_encrypt_core+0x1820>
    1cf0:	30 2d       	mov	r19, r0
    1cf2:	48 2b       	or	r20, r24
    1cf4:	59 2b       	or	r21, r25
    1cf6:	6a 2b       	or	r22, r26
    1cf8:	7b 2b       	or	r23, r27
	X2 = ROL((X1 ^ key->rk[126]) + (X2 ^ key->rk[127]), 9);
    1cfa:	df 01       	movw	r26, r30
    1cfc:	a4 50       	subi	r26, 0x04	; 4
    1cfe:	be 4f       	sbci	r27, 0xFE	; 254
    1d00:	cd 90       	ld	r12, X+
    1d02:	dd 90       	ld	r13, X+
    1d04:	ed 90       	ld	r14, X+
    1d06:	fc 90       	ld	r15, X
    1d08:	13 97       	sbiw	r26, 0x03	; 3
    1d0a:	c8 24       	eor	r12, r8
    1d0c:	d9 24       	eor	r13, r9
    1d0e:	ea 24       	eor	r14, r10
    1d10:	fb 24       	eor	r15, r11
    1d12:	14 97       	sbiw	r26, 0x04	; 4
    1d14:	8d 91       	ld	r24, X+
    1d16:	9d 91       	ld	r25, X+
    1d18:	0d 90       	ld	r0, X+
    1d1a:	bc 91       	ld	r27, X
    1d1c:	a0 2d       	mov	r26, r0
    1d1e:	80 27       	eor	r24, r16
    1d20:	91 27       	eor	r25, r17
    1d22:	a2 27       	eor	r26, r18
    1d24:	b3 27       	eor	r27, r19
    1d26:	c8 0e       	add	r12, r24
    1d28:	d9 1e       	adc	r13, r25
    1d2a:	ea 1e       	adc	r14, r26
    1d2c:	fb 1e       	adc	r15, r27
    1d2e:	d7 01       	movw	r26, r14
    1d30:	c6 01       	movw	r24, r12
    1d32:	07 2e       	mov	r0, r23
    1d34:	77 e1       	ldi	r23, 0x17	; 23
    1d36:	b6 95       	lsr	r27
    1d38:	a7 95       	ror	r26
    1d3a:	97 95       	ror	r25
    1d3c:	87 95       	ror	r24
    1d3e:	7a 95       	dec	r23
    1d40:	d1 f7       	brne	.-12     	; 0x1d36 <lea_encrypt_core+0x1872>
    1d42:	70 2d       	mov	r23, r0
    1d44:	0b 2e       	mov	r0, r27
    1d46:	b9 e0       	ldi	r27, 0x09	; 9
    1d48:	cc 0c       	add	r12, r12
    1d4a:	dd 1c       	adc	r13, r13
    1d4c:	ee 1c       	adc	r14, r14
    1d4e:	ff 1c       	adc	r15, r15
    1d50:	ba 95       	dec	r27
    1d52:	d1 f7       	brne	.-12     	; 0x1d48 <lea_encrypt_core+0x1884>
    1d54:	b0 2d       	mov	r27, r0
    1d56:	c8 2a       	or	r12, r24
    1d58:	d9 2a       	or	r13, r25
    1d5a:	ea 2a       	or	r14, r26
    1d5c:	fb 2a       	or	r15, r27
	X1 = ROR((X0 ^ key->rk[136]) + (X1 ^ key->rk[137]), 3);
    1d5e:	df 01       	movw	r26, r30
    1d60:	a0 5e       	subi	r26, 0xE0	; 224
    1d62:	bd 4f       	sbci	r27, 0xFD	; 253
    1d64:	8d 91       	ld	r24, X+
    1d66:	9d 91       	ld	r25, X+
    1d68:	0d 90       	ld	r0, X+
    1d6a:	bc 91       	ld	r27, X
    1d6c:	a0 2d       	mov	r26, r0
    1d6e:	84 25       	eor	r24, r4
    1d70:	95 25       	eor	r25, r5
    1d72:	a6 25       	eor	r26, r6
    1d74:	b7 25       	eor	r27, r7
    1d76:	c0 52       	subi	r28, 0x20	; 32
    1d78:	de 4f       	sbci	r29, 0xFE	; 254
    1d7a:	88 80       	ld	r8, Y
    1d7c:	99 80       	ldd	r9, Y+1	; 0x01
    1d7e:	aa 80       	ldd	r10, Y+2	; 0x02
    1d80:	bb 80       	ldd	r11, Y+3	; 0x03
    1d82:	80 26       	eor	r8, r16
    1d84:	91 26       	eor	r9, r17
    1d86:	a2 26       	eor	r10, r18
    1d88:	b3 26       	eor	r11, r19
    1d8a:	88 0d       	add	r24, r8
    1d8c:	99 1d       	adc	r25, r9
    1d8e:	aa 1d       	adc	r26, r10
    1d90:	bb 1d       	adc	r27, r11
    1d92:	8c 01       	movw	r16, r24
    1d94:	9d 01       	movw	r18, r26
    1d96:	68 94       	set
    1d98:	12 f8       	bld	r1, 2
    1d9a:	36 95       	lsr	r19
    1d9c:	27 95       	ror	r18
    1d9e:	17 95       	ror	r17
    1da0:	07 95       	ror	r16
    1da2:	16 94       	lsr	r1
    1da4:	d1 f7       	brne	.-12     	; 0x1d9a <lea_encrypt_core+0x18d6>
    1da6:	4c 01       	movw	r8, r24
    1da8:	5d 01       	movw	r10, r26
    1daa:	8d e1       	ldi	r24, 0x1D	; 29
    1dac:	88 0c       	add	r8, r8
    1dae:	99 1c       	adc	r9, r9
    1db0:	aa 1c       	adc	r10, r10
    1db2:	bb 1c       	adc	r11, r11
    1db4:	8a 95       	dec	r24
    1db6:	d1 f7       	brne	.-12     	; 0x1dac <lea_encrypt_core+0x18e8>
    1db8:	80 2a       	or	r8, r16
    1dba:	91 2a       	or	r9, r17
    1dbc:	a2 2a       	or	r10, r18
    1dbe:	b3 2a       	or	r11, r19
	X0 = ROR((X3 ^ key->rk[134]) + (X0 ^ key->rk[135]), 5);
    1dc0:	df 01       	movw	r26, r30
    1dc2:	a4 5e       	subi	r26, 0xE4	; 228
    1dc4:	bd 4f       	sbci	r27, 0xFD	; 253
    1dc6:	0d 91       	ld	r16, X+
    1dc8:	1d 91       	ld	r17, X+
    1dca:	2d 91       	ld	r18, X+
    1dcc:	3c 91       	ld	r19, X
    1dce:	13 97       	sbiw	r26, 0x03	; 3
    1dd0:	04 25       	eor	r16, r4
    1dd2:	15 25       	eor	r17, r5
    1dd4:	26 25       	eor	r18, r6
    1dd6:	37 25       	eor	r19, r7
    1dd8:	14 97       	sbiw	r26, 0x04	; 4
    1dda:	8d 91       	ld	r24, X+
    1ddc:	9d 91       	ld	r25, X+
    1dde:	0d 90       	ld	r0, X+
    1de0:	bc 91       	ld	r27, X
    1de2:	a0 2d       	mov	r26, r0
    1de4:	84 27       	eor	r24, r20
    1de6:	95 27       	eor	r25, r21
    1de8:	a6 27       	eor	r26, r22
    1dea:	b7 27       	eor	r27, r23
    1dec:	08 0f       	add	r16, r24
    1dee:	19 1f       	adc	r17, r25
    1df0:	2a 1f       	adc	r18, r26
    1df2:	3b 1f       	adc	r19, r27
    1df4:	d9 01       	movw	r26, r18
    1df6:	c8 01       	movw	r24, r16
    1df8:	68 94       	set
    1dfa:	14 f8       	bld	r1, 4
    1dfc:	b6 95       	lsr	r27
    1dfe:	a7 95       	ror	r26
    1e00:	97 95       	ror	r25
    1e02:	87 95       	ror	r24
    1e04:	16 94       	lsr	r1
    1e06:	d1 f7       	brne	.-12     	; 0x1dfc <lea_encrypt_core+0x1938>
    1e08:	0f 2e       	mov	r0, r31
    1e0a:	fb e1       	ldi	r31, 0x1B	; 27
    1e0c:	00 0f       	add	r16, r16
    1e0e:	11 1f       	adc	r17, r17
    1e10:	22 1f       	adc	r18, r18
    1e12:	33 1f       	adc	r19, r19
    1e14:	fa 95       	dec	r31
    1e16:	d1 f7       	brne	.-12     	; 0x1e0c <lea_encrypt_core+0x1948>
    1e18:	f0 2d       	mov	r31, r0
    1e1a:	08 2b       	or	r16, r24
    1e1c:	19 2b       	or	r17, r25
    1e1e:	2a 2b       	or	r18, r26
    1e20:	3b 2b       	or	r19, r27
	X3 = ROL((X2 ^ key->rk[132]) + (X3 ^ key->rk[133]), 9);
    1e22:	df 01       	movw	r26, r30
    1e24:	ac 5e       	subi	r26, 0xEC	; 236
    1e26:	bd 4f       	sbci	r27, 0xFD	; 253
    1e28:	4d 90       	ld	r4, X+
    1e2a:	5d 90       	ld	r5, X+
    1e2c:	6d 90       	ld	r6, X+
    1e2e:	7c 90       	ld	r7, X
    1e30:	13 97       	sbiw	r26, 0x03	; 3
    1e32:	44 26       	eor	r4, r20
    1e34:	55 26       	eor	r5, r21
    1e36:	66 26       	eor	r6, r22
    1e38:	77 26       	eor	r7, r23
    1e3a:	14 97       	sbiw	r26, 0x04	; 4
    1e3c:	8d 91       	ld	r24, X+
    1e3e:	9d 91       	ld	r25, X+
    1e40:	0d 90       	ld	r0, X+
    1e42:	bc 91       	ld	r27, X
    1e44:	a0 2d       	mov	r26, r0
    1e46:	8c 25       	eor	r24, r12
    1e48:	9d 25       	eor	r25, r13
    1e4a:	ae 25       	eor	r26, r14
    1e4c:	bf 25       	eor	r27, r15
    1e4e:	48 0e       	add	r4, r24
    1e50:	59 1e       	adc	r5, r25
    1e52:	6a 1e       	adc	r6, r26
    1e54:	7b 1e       	adc	r7, r27
    1e56:	b3 01       	movw	r22, r6
    1e58:	a2 01       	movw	r20, r4
    1e5a:	87 e1       	ldi	r24, 0x17	; 23
    1e5c:	76 95       	lsr	r23
    1e5e:	67 95       	ror	r22
    1e60:	57 95       	ror	r21
    1e62:	47 95       	ror	r20
    1e64:	8a 95       	dec	r24
    1e66:	d1 f7       	brne	.-12     	; 0x1e5c <lea_encrypt_core+0x1998>
    1e68:	d3 01       	movw	r26, r6
    1e6a:	c2 01       	movw	r24, r4
    1e6c:	07 2e       	mov	r0, r23
    1e6e:	79 e0       	ldi	r23, 0x09	; 9
    1e70:	88 0f       	add	r24, r24
    1e72:	99 1f       	adc	r25, r25
    1e74:	aa 1f       	adc	r26, r26
    1e76:	bb 1f       	adc	r27, r27
    1e78:	7a 95       	dec	r23
    1e7a:	d1 f7       	brne	.-12     	; 0x1e70 <lea_encrypt_core+0x19ac>
    1e7c:	70 2d       	mov	r23, r0
    1e7e:	84 2b       	or	r24, r20
    1e80:	95 2b       	or	r25, r21
    1e82:	a6 2b       	or	r26, r22
    1e84:	b7 2b       	or	r27, r23
	X2 = ROR((X1 ^ key->rk[142]) + (X2 ^ key->rk[143]), 3);
    1e86:	64 96       	adiw	r28, 0x14	; 20
    1e88:	48 81       	ld	r20, Y
    1e8a:	59 81       	ldd	r21, Y+1	; 0x01
    1e8c:	6a 81       	ldd	r22, Y+2	; 0x02
    1e8e:	7b 81       	ldd	r23, Y+3	; 0x03
    1e90:	48 25       	eor	r20, r8
    1e92:	59 25       	eor	r21, r9
    1e94:	6a 25       	eor	r22, r10
    1e96:	7b 25       	eor	r23, r11
    1e98:	24 96       	adiw	r28, 0x04	; 4
    1e9a:	48 80       	ld	r4, Y
    1e9c:	59 80       	ldd	r5, Y+1	; 0x01
    1e9e:	6a 80       	ldd	r6, Y+2	; 0x02
    1ea0:	7b 80       	ldd	r7, Y+3	; 0x03
    1ea2:	4c 24       	eor	r4, r12
    1ea4:	5d 24       	eor	r5, r13
    1ea6:	6e 24       	eor	r6, r14
    1ea8:	7f 24       	eor	r7, r15
    1eaa:	44 0d       	add	r20, r4
    1eac:	55 1d       	adc	r21, r5
    1eae:	66 1d       	adc	r22, r6
    1eb0:	77 1d       	adc	r23, r7
    1eb2:	6a 01       	movw	r12, r20
    1eb4:	7b 01       	movw	r14, r22
    1eb6:	68 94       	set
    1eb8:	12 f8       	bld	r1, 2
    1eba:	f6 94       	lsr	r15
    1ebc:	e7 94       	ror	r14
    1ebe:	d7 94       	ror	r13
    1ec0:	c7 94       	ror	r12
    1ec2:	16 94       	lsr	r1
    1ec4:	d1 f7       	brne	.-12     	; 0x1eba <lea_encrypt_core+0x19f6>
    1ec6:	03 2e       	mov	r0, r19
    1ec8:	3d e1       	ldi	r19, 0x1D	; 29
    1eca:	44 0f       	add	r20, r20
    1ecc:	55 1f       	adc	r21, r21
    1ece:	66 1f       	adc	r22, r22
    1ed0:	77 1f       	adc	r23, r23
    1ed2:	3a 95       	dec	r19
    1ed4:	d1 f7       	brne	.-12     	; 0x1eca <lea_encrypt_core+0x1a06>
    1ed6:	30 2d       	mov	r19, r0
    1ed8:	4c 29       	or	r20, r12
    1eda:	5d 29       	or	r21, r13
    1edc:	6e 29       	or	r22, r14
    1ede:	7f 29       	or	r23, r15
	X1 = ROR((X0 ^ key->rk[140]) + (X1 ^ key->rk[141]), 5);
    1ee0:	28 97       	sbiw	r28, 0x08	; 8
    1ee2:	c8 80       	ld	r12, Y
    1ee4:	d9 80       	ldd	r13, Y+1	; 0x01
    1ee6:	ea 80       	ldd	r14, Y+2	; 0x02
    1ee8:	fb 80       	ldd	r15, Y+3	; 0x03
    1eea:	c8 24       	eor	r12, r8
    1eec:	d9 24       	eor	r13, r9
    1eee:	ea 24       	eor	r14, r10
    1ef0:	fb 24       	eor	r15, r11
    1ef2:	24 97       	sbiw	r28, 0x04	; 4
    1ef4:	88 80       	ld	r8, Y
    1ef6:	99 80       	ldd	r9, Y+1	; 0x01
    1ef8:	aa 80       	ldd	r10, Y+2	; 0x02
    1efa:	bb 80       	ldd	r11, Y+3	; 0x03
    1efc:	80 26       	eor	r8, r16
    1efe:	91 26       	eor	r9, r17
    1f00:	a2 26       	eor	r10, r18
    1f02:	b3 26       	eor	r11, r19
    1f04:	c8 0c       	add	r12, r8
    1f06:	d9 1c       	adc	r13, r9
    1f08:	ea 1c       	adc	r14, r10
    1f0a:	fb 1c       	adc	r15, r11
    1f0c:	46 01       	movw	r8, r12
    1f0e:	57 01       	movw	r10, r14
    1f10:	68 94       	set
    1f12:	14 f8       	bld	r1, 4
    1f14:	b6 94       	lsr	r11
    1f16:	a7 94       	ror	r10
    1f18:	97 94       	ror	r9
    1f1a:	87 94       	ror	r8
    1f1c:	16 94       	lsr	r1
    1f1e:	d1 f7       	brne	.-12     	; 0x1f14 <lea_encrypt_core+0x1a50>
    1f20:	0b 2e       	mov	r0, r27
    1f22:	bb e1       	ldi	r27, 0x1B	; 27
    1f24:	cc 0c       	add	r12, r12
    1f26:	dd 1c       	adc	r13, r13
    1f28:	ee 1c       	adc	r14, r14
    1f2a:	ff 1c       	adc	r15, r15
    1f2c:	ba 95       	dec	r27
    1f2e:	d1 f7       	brne	.-12     	; 0x1f24 <lea_encrypt_core+0x1a60>
    1f30:	b0 2d       	mov	r27, r0
    1f32:	c8 28       	or	r12, r8
    1f34:	d9 28       	or	r13, r9
    1f36:	ea 28       	or	r14, r10
    1f38:	fb 28       	or	r15, r11
	X0 = ROL((X3 ^ key->rk[138]) + (X0 ^ key->rk[139]), 9);
    1f3a:	24 97       	sbiw	r28, 0x04	; 4
    1f3c:	88 80       	ld	r8, Y
    1f3e:	99 80       	ldd	r9, Y+1	; 0x01
    1f40:	aa 80       	ldd	r10, Y+2	; 0x02
    1f42:	bb 80       	ldd	r11, Y+3	; 0x03
    1f44:	80 26       	eor	r8, r16
    1f46:	91 26       	eor	r9, r17
    1f48:	a2 26       	eor	r10, r18
    1f4a:	b3 26       	eor	r11, r19
    1f4c:	e8 5d       	subi	r30, 0xD8	; 216
    1f4e:	fd 4f       	sbci	r31, 0xFD	; 253
    1f50:	00 81       	ld	r16, Z
    1f52:	11 81       	ldd	r17, Z+1	; 0x01
    1f54:	22 81       	ldd	r18, Z+2	; 0x02
    1f56:	33 81       	ldd	r19, Z+3	; 0x03
    1f58:	08 27       	eor	r16, r24
    1f5a:	19 27       	eor	r17, r25
    1f5c:	2a 27       	eor	r18, r26
    1f5e:	3b 27       	eor	r19, r27
    1f60:	80 0e       	add	r8, r16
    1f62:	91 1e       	adc	r9, r17
    1f64:	a2 1e       	adc	r10, r18
    1f66:	b3 1e       	adc	r11, r19
    1f68:	95 01       	movw	r18, r10
    1f6a:	84 01       	movw	r16, r8
    1f6c:	e7 e1       	ldi	r30, 0x17	; 23
    1f6e:	36 95       	lsr	r19
    1f70:	27 95       	ror	r18
    1f72:	17 95       	ror	r17
    1f74:	07 95       	ror	r16
    1f76:	ea 95       	dec	r30
    1f78:	d1 f7       	brne	.-12     	; 0x1f6e <lea_encrypt_core+0x1aaa>
    1f7a:	f9 e0       	ldi	r31, 0x09	; 9
    1f7c:	88 0c       	add	r8, r8
    1f7e:	99 1c       	adc	r9, r9
    1f80:	aa 1c       	adc	r10, r10
    1f82:	bb 1c       	adc	r11, r11
    1f84:	fa 95       	dec	r31
    1f86:	d1 f7       	brne	.-12     	; 0x1f7c <lea_encrypt_core+0x1ab8>
    1f88:	80 2a       	or	r8, r16
    1f8a:	91 2a       	or	r9, r17
    1f8c:	a2 2a       	or	r10, r18
    1f8e:	b3 2a       	or	r11, r19
    1f90:	f1 01       	movw	r30, r2
    1f92:	24 e0       	ldi	r18, 0x04	; 4
		
	uint8_t i;
	for(i=0;i<4;i++){
		state->s[i] = X0;
    1f94:	81 92       	st	Z+, r8
		state->s[i+4] = X1;
    1f96:	c3 82       	std	Z+3, r12	; 0x03
		state->s[i+8] = X2;
    1f98:	47 83       	std	Z+7, r20	; 0x07
		state->s[i+12] = X3;
    1f9a:	83 87       	std	Z+11, r24	; 0x0b
		X0 >>=8;
    1f9c:	89 2c       	mov	r8, r9
    1f9e:	9a 2c       	mov	r9, r10
    1fa0:	ab 2c       	mov	r10, r11
    1fa2:	bb 24       	eor	r11, r11
		X1 >>=8;
    1fa4:	cd 2c       	mov	r12, r13
    1fa6:	de 2c       	mov	r13, r14
    1fa8:	ef 2c       	mov	r14, r15
    1faa:	ff 24       	eor	r15, r15
		X2 >>=8;
    1fac:	45 2f       	mov	r20, r21
    1fae:	56 2f       	mov	r21, r22
    1fb0:	67 2f       	mov	r22, r23
    1fb2:	77 27       	eor	r23, r23
		X3 >>=8;
    1fb4:	89 2f       	mov	r24, r25
    1fb6:	9a 2f       	mov	r25, r26
    1fb8:	ab 2f       	mov	r26, r27
    1fba:	bb 27       	eor	r27, r27
    1fbc:	21 50       	subi	r18, 0x01	; 1
	X2 = ROR((X1 ^ key->rk[142]) + (X2 ^ key->rk[143]), 3);
	X1 = ROR((X0 ^ key->rk[140]) + (X1 ^ key->rk[141]), 5);
	X0 = ROL((X3 ^ key->rk[138]) + (X0 ^ key->rk[139]), 9);
		
	uint8_t i;
	for(i=0;i<4;i++){
    1fbe:	51 f7       	brne	.-44     	; 0x1f94 <lea_encrypt_core+0x1ad0>
		lea_enc_round(state, &(ks->key[i]));
		++i;
	}
	lea_enc_lastround(state, &(ks->key[i]));
	*/
}
    1fc0:	df 91       	pop	r29
    1fc2:	cf 91       	pop	r28
    1fc4:	1f 91       	pop	r17
    1fc6:	0f 91       	pop	r16
    1fc8:	ff 90       	pop	r15
    1fca:	ef 90       	pop	r14
    1fcc:	df 90       	pop	r13
    1fce:	cf 90       	pop	r12
    1fd0:	bf 90       	pop	r11
    1fd2:	af 90       	pop	r10
    1fd4:	9f 90       	pop	r9
    1fd6:	8f 90       	pop	r8
    1fd8:	7f 90       	pop	r7
    1fda:	6f 90       	pop	r6
    1fdc:	5f 90       	pop	r5
    1fde:	4f 90       	pop	r4
    1fe0:	3f 90       	pop	r3
    1fe2:	2f 90       	pop	r2
    1fe4:	08 95       	ret

00001fe6 <lea_init>:
	0x57e5c409, 0xafcb8812, 0x5f971025, 0xbf2e204a, 0x7e5c4095, 0xfcb8812a, 0xf9710255, 0xf2e204ab,
	0xe5c40957,	0xcb8812af, 0x9710255f, 0x2e204abf}
};

void lea_init(LEA_KEY *key, const uint8_t *mk, uint32_t mk_len)
{
    1fe6:	8f 92       	push	r8
    1fe8:	9f 92       	push	r9
    1fea:	af 92       	push	r10
    1fec:	bf 92       	push	r11
    1fee:	cf 92       	push	r12
    1ff0:	df 92       	push	r13
    1ff2:	ef 92       	push	r14
    1ff4:	ff 92       	push	r15
    1ff6:	0f 93       	push	r16
    1ff8:	1f 93       	push	r17
    1ffa:	cf 93       	push	r28
    1ffc:	df 93       	push	r29
    1ffe:	fc 01       	movw	r30, r24
    2000:	db 01       	movw	r26, r22
	if(!key)
    2002:	00 97       	sbiw	r24, 0x00	; 0
    2004:	11 f4       	brne	.+4      	; 0x200a <lea_init+0x24>
    2006:	0c 94 8e 46 	jmp	0x8d1c	; 0x8d1c <__stack+0x4d1d>
		return;
	else if(!mk)
    200a:	10 97       	sbiw	r26, 0x00	; 0
    200c:	11 f4       	brne	.+4      	; 0x2012 <lea_init+0x2c>
    200e:	0c 94 8e 46 	jmp	0x8d1c	; 0x8d1c <__stack+0x4d1d>
		return;

	const uint32_t* _mk = (const uint32_t*)mk;
	switch(mk_len)
    2012:	28 31       	cpi	r18, 0x18	; 24
    2014:	31 05       	cpc	r19, r1
    2016:	41 05       	cpc	r20, r1
    2018:	51 05       	cpc	r21, r1
    201a:	11 f4       	brne	.+4      	; 0x2020 <lea_init+0x3a>
    201c:	0c 94 b2 1b 	jmp	0x3764	; 0x3764 <lea_init+0x177e>
    2020:	20 32       	cpi	r18, 0x20	; 32
    2022:	31 05       	cpc	r19, r1
    2024:	41 05       	cpc	r20, r1
    2026:	51 05       	cpc	r21, r1
    2028:	11 f4       	brne	.+4      	; 0x202e <lea_init+0x48>
    202a:	0c 94 60 2f 	jmp	0x5ec0	; 0x5ec0 <__stack+0x1ec1>
    202e:	20 31       	cpi	r18, 0x10	; 16
    2030:	31 05       	cpc	r19, r1
    2032:	41 05       	cpc	r20, r1
    2034:	51 05       	cpc	r21, r1
    2036:	11 f0       	breq	.+4      	; 0x203c <lea_init+0x56>
    2038:	0c 94 8e 46 	jmp	0x8d1c	; 0x8d1c <__stack+0x4d1d>
	{
	case 16:
		key->rk[  0] = ROL(loadU32(_mk[0]) + delta[0][ 0], 1);
    203c:	cd 90       	ld	r12, X+
    203e:	dd 90       	ld	r13, X+
    2040:	ed 90       	ld	r14, X+
    2042:	fc 90       	ld	r15, X
    2044:	13 97       	sbiw	r26, 0x03	; 3
    2046:	85 e2       	ldi	r24, 0x25	; 37
    2048:	c8 1a       	sub	r12, r24
    204a:	86 e1       	ldi	r24, 0x16	; 22
    204c:	d8 0a       	sbc	r13, r24
    204e:	80 e1       	ldi	r24, 0x10	; 16
    2050:	e8 0a       	sbc	r14, r24
    2052:	8c e3       	ldi	r24, 0x3C	; 60
    2054:	f8 0a       	sbc	r15, r24
    2056:	cc 0c       	add	r12, r12
    2058:	dd 1c       	adc	r13, r13
    205a:	ee 1c       	adc	r14, r14
    205c:	ff 1c       	adc	r15, r15
    205e:	c1 1c       	adc	r12, r1
    2060:	c0 82       	st	Z, r12
    2062:	d1 82       	std	Z+1, r13	; 0x01
    2064:	e2 82       	std	Z+2, r14	; 0x02
    2066:	f3 82       	std	Z+3, r15	; 0x03
		key->rk[  6] = ROL(key->rk[  0] + delta[1][ 1], 1);
    2068:	8c ef       	ldi	r24, 0xFC	; 252
    206a:	c8 1a       	sub	r12, r24
    206c:	89 e2       	ldi	r24, 0x29	; 41
    206e:	d8 0a       	sbc	r13, r24
    2070:	8b e3       	ldi	r24, 0x3B	; 59
    2072:	e8 0a       	sbc	r14, r24
    2074:	87 e7       	ldi	r24, 0x77	; 119
    2076:	f8 0a       	sbc	r15, r24
    2078:	cc 0c       	add	r12, r12
    207a:	dd 1c       	adc	r13, r13
    207c:	ee 1c       	adc	r14, r14
    207e:	ff 1c       	adc	r15, r15
    2080:	c1 1c       	adc	r12, r1
    2082:	c0 8e       	std	Z+24, r12	; 0x18
    2084:	d1 8e       	std	Z+25, r13	; 0x19
    2086:	e2 8e       	std	Z+26, r14	; 0x1a
    2088:	f3 8e       	std	Z+27, r15	; 0x1b
		key->rk[ 12] = ROL(key->rk[  6] + delta[2][ 2], 1);
    208a:	87 ed       	ldi	r24, 0xD7	; 215
    208c:	c8 1a       	sub	r12, r24
    208e:	8d e0       	ldi	r24, 0x0D	; 13
    2090:	d8 0a       	sbc	r13, r24
    2092:	86 e7       	ldi	r24, 0x76	; 118
    2094:	e8 0a       	sbc	r14, r24
    2096:	88 e1       	ldi	r24, 0x18	; 24
    2098:	f8 0a       	sbc	r15, r24
    209a:	cc 0c       	add	r12, r12
    209c:	dd 1c       	adc	r13, r13
    209e:	ee 1c       	adc	r14, r14
    20a0:	ff 1c       	adc	r15, r15
    20a2:	c1 1c       	adc	r12, r1
    20a4:	c0 aa       	std	Z+48, r12	; 0x30
    20a6:	d1 aa       	std	Z+49, r13	; 0x31
    20a8:	e2 aa       	std	Z+50, r14	; 0x32
    20aa:	f3 aa       	std	Z+51, r15	; 0x33
		key->rk[ 18] = ROL(key->rk[ 12] + delta[3][ 3], 1);
    20ac:	8d e9       	ldi	r24, 0x9D	; 157
    20ae:	c8 1a       	sub	r12, r24
    20b0:	88 e7       	ldi	r24, 0x78	; 120
    20b2:	d8 0a       	sbc	r13, r24
    20b4:	86 e0       	ldi	r24, 0x06	; 6
    20b6:	e8 0a       	sbc	r14, r24
    20b8:	89 e3       	ldi	r24, 0x39	; 57
    20ba:	f8 0a       	sbc	r15, r24
    20bc:	cc 0c       	add	r12, r12
    20be:	dd 1c       	adc	r13, r13
    20c0:	ee 1c       	adc	r14, r14
    20c2:	ff 1c       	adc	r15, r15
    20c4:	c1 1c       	adc	r12, r1
    20c6:	ef 01       	movw	r28, r30
    20c8:	c8 5b       	subi	r28, 0xB8	; 184
    20ca:	df 4f       	sbci	r29, 0xFF	; 255
    20cc:	c8 82       	st	Y, r12
    20ce:	d9 82       	std	Y+1, r13	; 0x01
    20d0:	ea 82       	std	Y+2, r14	; 0x02
    20d2:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 24] = ROL(key->rk[ 18] + delta[0][ 4], 1);
    20d4:	84 e4       	ldi	r24, 0x44	; 68
    20d6:	c8 1a       	sub	r12, r24
    20d8:	82 e6       	ldi	r24, 0x62	; 98
    20da:	d8 0a       	sbc	r13, r24
    20dc:	81 e0       	ldi	r24, 0x01	; 1
    20de:	e8 0a       	sbc	r14, r24
    20e0:	81 ec       	ldi	r24, 0xC1	; 193
    20e2:	f8 0a       	sbc	r15, r24
    20e4:	cc 0c       	add	r12, r12
    20e6:	dd 1c       	adc	r13, r13
    20e8:	ee 1c       	adc	r14, r14
    20ea:	ff 1c       	adc	r15, r15
    20ec:	c1 1c       	adc	r12, r1
    20ee:	68 96       	adiw	r28, 0x18	; 24
    20f0:	c8 82       	st	Y, r12
    20f2:	d9 82       	std	Y+1, r13	; 0x01
    20f4:	ea 82       	std	Y+2, r14	; 0x02
    20f6:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 30] = ROL(key->rk[ 24] + delta[1][ 5], 1);
    20f8:	88 eb       	ldi	r24, 0xB8	; 184
    20fa:	c8 1a       	sub	r12, r24
    20fc:	8f e9       	ldi	r24, 0x9F	; 159
    20fe:	d8 0a       	sbc	r13, r24
    2100:	82 eb       	ldi	r24, 0xB2	; 178
    2102:	e8 0a       	sbc	r14, r24
    2104:	83 e7       	ldi	r24, 0x73	; 115
    2106:	f8 0a       	sbc	r15, r24
    2108:	cc 0c       	add	r12, r12
    210a:	dd 1c       	adc	r13, r13
    210c:	ee 1c       	adc	r14, r14
    210e:	ff 1c       	adc	r15, r15
    2110:	c1 1c       	adc	r12, r1
    2112:	68 96       	adiw	r28, 0x18	; 24
    2114:	c8 82       	st	Y, r12
    2116:	d9 82       	std	Y+1, r13	; 0x01
    2118:	ea 82       	std	Y+2, r14	; 0x02
    211a:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 36] = ROL(key->rk[ 30] + delta[2][ 6], 1);
    211c:	82 e6       	ldi	r24, 0x62	; 98
    211e:	c8 1a       	sub	r12, r24
    2120:	8d ed       	ldi	r24, 0xDD	; 221
    2122:	d8 0a       	sbc	r13, r24
    2124:	80 e6       	ldi	r24, 0x60	; 96
    2126:	e8 0a       	sbc	r14, r24
    2128:	87 e8       	ldi	r24, 0x87	; 135
    212a:	f8 0a       	sbc	r15, r24
    212c:	cc 0c       	add	r12, r12
    212e:	dd 1c       	adc	r13, r13
    2130:	ee 1c       	adc	r14, r14
    2132:	ff 1c       	adc	r15, r15
    2134:	c1 1c       	adc	r12, r1
    2136:	68 96       	adiw	r28, 0x18	; 24
    2138:	c8 82       	st	Y, r12
    213a:	d9 82       	std	Y+1, r13	; 0x01
    213c:	ea 82       	std	Y+2, r14	; 0x02
    213e:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 42] = ROL(key->rk[ 36] + delta[3][ 7], 1);
    2140:	84 ec       	ldi	r24, 0xC4	; 196
    2142:	c8 1a       	sub	r12, r24
    2144:	89 e8       	ldi	r24, 0x89	; 137
    2146:	d8 0a       	sbc	r13, r24
    2148:	87 e6       	ldi	r24, 0x67	; 103
    214a:	e8 0a       	sbc	r14, r24
    214c:	80 e9       	ldi	r24, 0x90	; 144
    214e:	f8 0a       	sbc	r15, r24
    2150:	cc 0c       	add	r12, r12
    2152:	dd 1c       	adc	r13, r13
    2154:	ee 1c       	adc	r14, r14
    2156:	ff 1c       	adc	r15, r15
    2158:	c1 1c       	adc	r12, r1
    215a:	68 96       	adiw	r28, 0x18	; 24
    215c:	c8 82       	st	Y, r12
    215e:	d9 82       	std	Y+1, r13	; 0x01
    2160:	ea 82       	std	Y+2, r14	; 0x02
    2162:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 48] = ROL(key->rk[ 42] + delta[0][ 8], 1);
    2164:	8d e3       	ldi	r24, 0x3D	; 61
    2166:	c8 1a       	sub	r12, r24
    2168:	84 e2       	ldi	r24, 0x24	; 36
    216a:	d8 0a       	sbc	r13, r24
    216c:	86 e1       	ldi	r24, 0x16	; 22
    216e:	e8 0a       	sbc	r14, r24
    2170:	80 e1       	ldi	r24, 0x10	; 16
    2172:	f8 0a       	sbc	r15, r24
    2174:	cc 0c       	add	r12, r12
    2176:	dd 1c       	adc	r13, r13
    2178:	ee 1c       	adc	r14, r14
    217a:	ff 1c       	adc	r15, r15
    217c:	c1 1c       	adc	r12, r1
    217e:	68 96       	adiw	r28, 0x18	; 24
    2180:	c8 82       	st	Y, r12
    2182:	d9 82       	std	Y+1, r13	; 0x01
    2184:	ea 82       	std	Y+2, r14	; 0x02
    2186:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 54] = ROL(key->rk[ 48] + delta[1][ 9], 1);
    2188:	88 e7       	ldi	r24, 0x78	; 120
    218a:	c8 1a       	sub	r12, r24
    218c:	8b ef       	ldi	r24, 0xFB	; 251
    218e:	d8 0a       	sbc	r13, r24
    2190:	89 e2       	ldi	r24, 0x29	; 41
    2192:	e8 0a       	sbc	r14, r24
    2194:	8b e3       	ldi	r24, 0x3B	; 59
    2196:	f8 0a       	sbc	r15, r24
    2198:	cc 0c       	add	r12, r12
    219a:	dd 1c       	adc	r13, r13
    219c:	ee 1c       	adc	r14, r14
    219e:	ff 1c       	adc	r15, r15
    21a0:	c1 1c       	adc	r12, r1
    21a2:	68 96       	adiw	r28, 0x18	; 24
    21a4:	c8 82       	st	Y, r12
    21a6:	d9 82       	std	Y+1, r13	; 0x01
    21a8:	ea 82       	std	Y+2, r14	; 0x02
    21aa:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 60] = ROL(key->rk[ 54] + delta[2][10], 1);
    21ac:	89 e1       	ldi	r24, 0x19	; 25
    21ae:	c8 1a       	sub	r12, r24
    21b0:	86 ed       	ldi	r24, 0xD6	; 214
    21b2:	d8 0a       	sbc	r13, r24
    21b4:	8d e0       	ldi	r24, 0x0D	; 13
    21b6:	e8 0a       	sbc	r14, r24
    21b8:	86 e7       	ldi	r24, 0x76	; 118
    21ba:	f8 0a       	sbc	r15, r24
    21bc:	cc 0c       	add	r12, r12
    21be:	dd 1c       	adc	r13, r13
    21c0:	ee 1c       	adc	r14, r14
    21c2:	ff 1c       	adc	r15, r15
    21c4:	c1 1c       	adc	r12, r1
    21c6:	68 96       	adiw	r28, 0x18	; 24
    21c8:	c8 82       	st	Y, r12
    21ca:	d9 82       	std	Y+1, r13	; 0x01
    21cc:	ea 82       	std	Y+2, r14	; 0x02
    21ce:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 66] = ROL(key->rk[ 60] + delta[3][11], 1);
    21d0:	8a e3       	ldi	r24, 0x3A	; 58
    21d2:	c8 1a       	sub	r12, r24
    21d4:	8c e9       	ldi	r24, 0x9C	; 156
    21d6:	d8 0a       	sbc	r13, r24
    21d8:	88 e7       	ldi	r24, 0x78	; 120
    21da:	e8 0a       	sbc	r14, r24
    21dc:	86 e0       	ldi	r24, 0x06	; 6
    21de:	f8 0a       	sbc	r15, r24
    21e0:	cc 0c       	add	r12, r12
    21e2:	dd 1c       	adc	r13, r13
    21e4:	ee 1c       	adc	r14, r14
    21e6:	ff 1c       	adc	r15, r15
    21e8:	c1 1c       	adc	r12, r1
    21ea:	68 96       	adiw	r28, 0x18	; 24
    21ec:	c8 82       	st	Y, r12
    21ee:	d9 82       	std	Y+1, r13	; 0x01
    21f0:	ea 82       	std	Y+2, r14	; 0x02
    21f2:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 72] = ROL(key->rk[ 66] + delta[0][12], 1);
    21f4:	82 ec       	ldi	r24, 0xC2	; 194
    21f6:	c8 1a       	sub	r12, r24
    21f8:	83 e4       	ldi	r24, 0x43	; 67
    21fa:	d8 0a       	sbc	r13, r24
    21fc:	82 e6       	ldi	r24, 0x62	; 98
    21fe:	e8 0a       	sbc	r14, r24
    2200:	81 e0       	ldi	r24, 0x01	; 1
    2202:	f8 0a       	sbc	r15, r24
    2204:	cc 0c       	add	r12, r12
    2206:	dd 1c       	adc	r13, r13
    2208:	ee 1c       	adc	r14, r14
    220a:	ff 1c       	adc	r15, r15
    220c:	c1 1c       	adc	r12, r1
    220e:	68 96       	adiw	r28, 0x18	; 24
    2210:	c8 82       	st	Y, r12
    2212:	d9 82       	std	Y+1, r13	; 0x01
    2214:	ea 82       	std	Y+2, r14	; 0x02
    2216:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 78] = ROL(key->rk[ 72] + delta[1][13], 1);
    2218:	84 e7       	ldi	r24, 0x74	; 116
    221a:	c8 1a       	sub	r12, r24
    221c:	87 eb       	ldi	r24, 0xB7	; 183
    221e:	d8 0a       	sbc	r13, r24
    2220:	8f e9       	ldi	r24, 0x9F	; 159
    2222:	e8 0a       	sbc	r14, r24
    2224:	82 eb       	ldi	r24, 0xB2	; 178
    2226:	f8 0a       	sbc	r15, r24
    2228:	cc 0c       	add	r12, r12
    222a:	dd 1c       	adc	r13, r13
    222c:	ee 1c       	adc	r14, r14
    222e:	ff 1c       	adc	r15, r15
    2230:	c1 1c       	adc	r12, r1
    2232:	68 96       	adiw	r28, 0x18	; 24
    2234:	c8 82       	st	Y, r12
    2236:	d9 82       	std	Y+1, r13	; 0x01
    2238:	ea 82       	std	Y+2, r14	; 0x02
    223a:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 84] = ROL(key->rk[ 78] + delta[2][14], 1);
    223c:	88 e8       	ldi	r24, 0x88	; 136
    223e:	c8 1a       	sub	r12, r24
    2240:	81 e6       	ldi	r24, 0x61	; 97
    2242:	d8 0a       	sbc	r13, r24
    2244:	8d ed       	ldi	r24, 0xDD	; 221
    2246:	e8 0a       	sbc	r14, r24
    2248:	80 e6       	ldi	r24, 0x60	; 96
    224a:	f8 0a       	sbc	r15, r24
    224c:	cc 0c       	add	r12, r12
    224e:	dd 1c       	adc	r13, r13
    2250:	ee 1c       	adc	r14, r14
    2252:	ff 1c       	adc	r15, r15
    2254:	c1 1c       	adc	r12, r1
    2256:	68 96       	adiw	r28, 0x18	; 24
    2258:	c8 82       	st	Y, r12
    225a:	d9 82       	std	Y+1, r13	; 0x01
    225c:	ea 82       	std	Y+2, r14	; 0x02
    225e:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 90] = ROL(key->rk[ 84] + delta[3][15], 1);
    2260:	81 e9       	ldi	r24, 0x91	; 145
    2262:	c8 1a       	sub	r12, r24
    2264:	83 ec       	ldi	r24, 0xC3	; 195
    2266:	d8 0a       	sbc	r13, r24
    2268:	89 e8       	ldi	r24, 0x89	; 137
    226a:	e8 0a       	sbc	r14, r24
    226c:	87 e6       	ldi	r24, 0x67	; 103
    226e:	f8 0a       	sbc	r15, r24
    2270:	cc 0c       	add	r12, r12
    2272:	dd 1c       	adc	r13, r13
    2274:	ee 1c       	adc	r14, r14
    2276:	ff 1c       	adc	r15, r15
    2278:	c1 1c       	adc	r12, r1
    227a:	68 96       	adiw	r28, 0x18	; 24
    227c:	c8 82       	st	Y, r12
    227e:	d9 82       	std	Y+1, r13	; 0x01
    2280:	ea 82       	std	Y+2, r14	; 0x02
    2282:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 96] = ROL(key->rk[ 90] + delta[0][16], 1);
    2284:	81 e1       	ldi	r24, 0x11	; 17
    2286:	c8 1a       	sub	r12, r24
    2288:	8c e3       	ldi	r24, 0x3C	; 60
    228a:	d8 0a       	sbc	r13, r24
    228c:	84 e2       	ldi	r24, 0x24	; 36
    228e:	e8 0a       	sbc	r14, r24
    2290:	86 e1       	ldi	r24, 0x16	; 22
    2292:	f8 0a       	sbc	r15, r24
    2294:	cc 0c       	add	r12, r12
    2296:	dd 1c       	adc	r13, r13
    2298:	ee 1c       	adc	r14, r14
    229a:	ff 1c       	adc	r15, r15
    229c:	c1 1c       	adc	r12, r1
    229e:	68 96       	adiw	r28, 0x18	; 24
    22a0:	c8 82       	st	Y, r12
    22a2:	d9 82       	std	Y+1, r13	; 0x01
    22a4:	ea 82       	std	Y+2, r14	; 0x02
    22a6:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[102] = ROL(key->rk[ 96] + delta[1][17], 1);
    22a8:	8c e3       	ldi	r24, 0x3C	; 60
    22aa:	c8 1a       	sub	r12, r24
    22ac:	87 e7       	ldi	r24, 0x77	; 119
    22ae:	d8 0a       	sbc	r13, r24
    22b0:	8b ef       	ldi	r24, 0xFB	; 251
    22b2:	e8 0a       	sbc	r14, r24
    22b4:	89 e2       	ldi	r24, 0x29	; 41
    22b6:	f8 0a       	sbc	r15, r24
    22b8:	cc 0c       	add	r12, r12
    22ba:	dd 1c       	adc	r13, r13
    22bc:	ee 1c       	adc	r14, r14
    22be:	ff 1c       	adc	r15, r15
    22c0:	c1 1c       	adc	r12, r1
    22c2:	68 96       	adiw	r28, 0x18	; 24
    22c4:	c8 82       	st	Y, r12
    22c6:	d9 82       	std	Y+1, r13	; 0x01
    22c8:	ea 82       	std	Y+2, r14	; 0x02
    22ca:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[108] = ROL(key->rk[102] + delta[2][18], 1);
    22cc:	87 e7       	ldi	r24, 0x77	; 119
    22ce:	c8 1a       	sub	r12, r24
    22d0:	88 e1       	ldi	r24, 0x18	; 24
    22d2:	d8 0a       	sbc	r13, r24
    22d4:	86 ed       	ldi	r24, 0xD6	; 214
    22d6:	e8 0a       	sbc	r14, r24
    22d8:	8d e0       	ldi	r24, 0x0D	; 13
    22da:	f8 0a       	sbc	r15, r24
    22dc:	cc 0c       	add	r12, r12
    22de:	dd 1c       	adc	r13, r13
    22e0:	ee 1c       	adc	r14, r14
    22e2:	ff 1c       	adc	r15, r15
    22e4:	c1 1c       	adc	r12, r1
    22e6:	68 96       	adiw	r28, 0x18	; 24
    22e8:	c8 82       	st	Y, r12
    22ea:	d9 82       	std	Y+1, r13	; 0x01
    22ec:	ea 82       	std	Y+2, r14	; 0x02
    22ee:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[114] = ROL(key->rk[108] + delta[3][19], 1);
    22f0:	87 e0       	ldi	r24, 0x07	; 7
    22f2:	c8 1a       	sub	r12, r24
    22f4:	89 e3       	ldi	r24, 0x39	; 57
    22f6:	d8 0a       	sbc	r13, r24
    22f8:	8c e9       	ldi	r24, 0x9C	; 156
    22fa:	e8 0a       	sbc	r14, r24
    22fc:	88 e7       	ldi	r24, 0x78	; 120
    22fe:	f8 0a       	sbc	r15, r24
    2300:	cc 0c       	add	r12, r12
    2302:	dd 1c       	adc	r13, r13
    2304:	ee 1c       	adc	r14, r14
    2306:	ff 1c       	adc	r15, r15
    2308:	c1 1c       	adc	r12, r1
    230a:	68 96       	adiw	r28, 0x18	; 24
    230c:	c8 82       	st	Y, r12
    230e:	d9 82       	std	Y+1, r13	; 0x01
    2310:	ea 82       	std	Y+2, r14	; 0x02
    2312:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[120] = ROL(key->rk[114] + delta[0][20], 1);
    2314:	82 e0       	ldi	r24, 0x02	; 2
    2316:	c8 1a       	sub	r12, r24
    2318:	81 ec       	ldi	r24, 0xC1	; 193
    231a:	d8 0a       	sbc	r13, r24
    231c:	83 e4       	ldi	r24, 0x43	; 67
    231e:	e8 0a       	sbc	r14, r24
    2320:	82 e6       	ldi	r24, 0x62	; 98
    2322:	f8 0a       	sbc	r15, r24
    2324:	cc 0c       	add	r12, r12
    2326:	dd 1c       	adc	r13, r13
    2328:	ee 1c       	adc	r14, r14
    232a:	ff 1c       	adc	r15, r15
    232c:	c1 1c       	adc	r12, r1
    232e:	68 96       	adiw	r28, 0x18	; 24
    2330:	c8 82       	st	Y, r12
    2332:	d9 82       	std	Y+1, r13	; 0x01
    2334:	ea 82       	std	Y+2, r14	; 0x02
    2336:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[126] = ROL(key->rk[120] + delta[1][21], 1);
    2338:	83 eb       	ldi	r24, 0xB3	; 179
    233a:	c8 1a       	sub	r12, r24
    233c:	83 e7       	ldi	r24, 0x73	; 115
    233e:	d8 0a       	sbc	r13, r24
    2340:	87 eb       	ldi	r24, 0xB7	; 183
    2342:	e8 0a       	sbc	r14, r24
    2344:	8f e9       	ldi	r24, 0x9F	; 159
    2346:	f8 0a       	sbc	r15, r24
    2348:	cc 0c       	add	r12, r12
    234a:	dd 1c       	adc	r13, r13
    234c:	ee 1c       	adc	r14, r14
    234e:	ff 1c       	adc	r15, r15
    2350:	c1 1c       	adc	r12, r1
    2352:	68 96       	adiw	r28, 0x18	; 24
    2354:	c8 82       	st	Y, r12
    2356:	d9 82       	std	Y+1, r13	; 0x01
    2358:	ea 82       	std	Y+2, r14	; 0x02
    235a:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[132] = ROL(key->rk[126] + delta[2][22], 1);
    235c:	81 e6       	ldi	r24, 0x61	; 97
    235e:	c8 1a       	sub	r12, r24
    2360:	87 e8       	ldi	r24, 0x87	; 135
    2362:	d8 0a       	sbc	r13, r24
    2364:	81 e6       	ldi	r24, 0x61	; 97
    2366:	e8 0a       	sbc	r14, r24
    2368:	8d ed       	ldi	r24, 0xDD	; 221
    236a:	f8 0a       	sbc	r15, r24
    236c:	cc 0c       	add	r12, r12
    236e:	dd 1c       	adc	r13, r13
    2370:	ee 1c       	adc	r14, r14
    2372:	ff 1c       	adc	r15, r15
    2374:	c1 1c       	adc	r12, r1
    2376:	68 96       	adiw	r28, 0x18	; 24
    2378:	c8 82       	st	Y, r12
    237a:	d9 82       	std	Y+1, r13	; 0x01
    237c:	ea 82       	std	Y+2, r14	; 0x02
    237e:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[138] = ROL(key->rk[132] + delta[3][23], 1);
    2380:	88 e6       	ldi	r24, 0x68	; 104
    2382:	c8 1a       	sub	r12, r24
    2384:	80 e9       	ldi	r24, 0x90	; 144
    2386:	d8 0a       	sbc	r13, r24
    2388:	83 ec       	ldi	r24, 0xC3	; 195
    238a:	e8 0a       	sbc	r14, r24
    238c:	89 e8       	ldi	r24, 0x89	; 137
    238e:	f8 0a       	sbc	r15, r24
    2390:	cc 0c       	add	r12, r12
    2392:	dd 1c       	adc	r13, r13
    2394:	ee 1c       	adc	r14, r14
    2396:	ff 1c       	adc	r15, r15
    2398:	c1 1c       	adc	r12, r1
    239a:	68 96       	adiw	r28, 0x18	; 24
    239c:	c8 82       	st	Y, r12
    239e:	d9 82       	std	Y+1, r13	; 0x01
    23a0:	ea 82       	std	Y+2, r14	; 0x02
    23a2:	fb 82       	std	Y+3, r15	; 0x03

		key->rk[  1] = key->rk[  3] = key->rk[  5] = ROL(loadU32(_mk[1]) + delta[0][ 1], 3);
    23a4:	14 96       	adiw	r26, 0x04	; 4
    23a6:	8d 90       	ld	r8, X+
    23a8:	9d 90       	ld	r9, X+
    23aa:	ad 90       	ld	r10, X+
    23ac:	bc 90       	ld	r11, X
    23ae:	17 97       	sbiw	r26, 0x07	; 7
    23b0:	89 e4       	ldi	r24, 0x49	; 73
    23b2:	88 1a       	sub	r8, r24
    23b4:	8c e2       	ldi	r24, 0x2C	; 44
    23b6:	98 0a       	sbc	r9, r24
    23b8:	80 e2       	ldi	r24, 0x20	; 32
    23ba:	a8 0a       	sbc	r10, r24
    23bc:	88 e7       	ldi	r24, 0x78	; 120
    23be:	b8 0a       	sbc	r11, r24
    23c0:	75 01       	movw	r14, r10
    23c2:	64 01       	movw	r12, r8
    23c4:	1d e1       	ldi	r17, 0x1D	; 29
    23c6:	f6 94       	lsr	r15
    23c8:	e7 94       	ror	r14
    23ca:	d7 94       	ror	r13
    23cc:	c7 94       	ror	r12
    23ce:	1a 95       	dec	r17
    23d0:	d1 f7       	brne	.-12     	; 0x23c6 <lea_init+0x3e0>
    23d2:	03 e0       	ldi	r16, 0x03	; 3
    23d4:	88 0c       	add	r8, r8
    23d6:	99 1c       	adc	r9, r9
    23d8:	aa 1c       	adc	r10, r10
    23da:	bb 1c       	adc	r11, r11
    23dc:	0a 95       	dec	r16
    23de:	d1 f7       	brne	.-12     	; 0x23d4 <lea_init+0x3ee>
    23e0:	8c 28       	or	r8, r12
    23e2:	9d 28       	or	r9, r13
    23e4:	ae 28       	or	r10, r14
    23e6:	bf 28       	or	r11, r15
    23e8:	84 8a       	std	Z+20, r8	; 0x14
    23ea:	95 8a       	std	Z+21, r9	; 0x15
    23ec:	a6 8a       	std	Z+22, r10	; 0x16
    23ee:	b7 8a       	std	Z+23, r11	; 0x17
    23f0:	84 86       	std	Z+12, r8	; 0x0c
    23f2:	95 86       	std	Z+13, r9	; 0x0d
    23f4:	a6 86       	std	Z+14, r10	; 0x0e
    23f6:	b7 86       	std	Z+15, r11	; 0x0f
    23f8:	84 82       	std	Z+4, r8	; 0x04
    23fa:	95 82       	std	Z+5, r9	; 0x05
    23fc:	a6 82       	std	Z+6, r10	; 0x06
    23fe:	b7 82       	std	Z+7, r11	; 0x07
		key->rk[  7] = key->rk[  9] = key->rk[ 11] = ROL(key->rk[  1] + delta[1][ 2], 3);
    2400:	87 ef       	ldi	r24, 0xF7	; 247
    2402:	88 1a       	sub	r8, r24
    2404:	83 e5       	ldi	r24, 0x53	; 83
    2406:	98 0a       	sbc	r9, r24
    2408:	86 e7       	ldi	r24, 0x76	; 118
    240a:	a8 0a       	sbc	r10, r24
    240c:	8e ee       	ldi	r24, 0xEE	; 238
    240e:	b8 0a       	sbc	r11, r24
    2410:	75 01       	movw	r14, r10
    2412:	64 01       	movw	r12, r8
    2414:	8d e1       	ldi	r24, 0x1D	; 29
    2416:	f6 94       	lsr	r15
    2418:	e7 94       	ror	r14
    241a:	d7 94       	ror	r13
    241c:	c7 94       	ror	r12
    241e:	8a 95       	dec	r24
    2420:	d1 f7       	brne	.-12     	; 0x2416 <lea_init+0x430>
    2422:	93 e0       	ldi	r25, 0x03	; 3
    2424:	88 0c       	add	r8, r8
    2426:	99 1c       	adc	r9, r9
    2428:	aa 1c       	adc	r10, r10
    242a:	bb 1c       	adc	r11, r11
    242c:	9a 95       	dec	r25
    242e:	d1 f7       	brne	.-12     	; 0x2424 <lea_init+0x43e>
    2430:	8c 28       	or	r8, r12
    2432:	9d 28       	or	r9, r13
    2434:	ae 28       	or	r10, r14
    2436:	bf 28       	or	r11, r15
    2438:	84 a6       	std	Z+44, r8	; 0x2c
    243a:	95 a6       	std	Z+45, r9	; 0x2d
    243c:	a6 a6       	std	Z+46, r10	; 0x2e
    243e:	b7 a6       	std	Z+47, r11	; 0x2f
    2440:	84 a2       	std	Z+36, r8	; 0x24
    2442:	95 a2       	std	Z+37, r9	; 0x25
    2444:	a6 a2       	std	Z+38, r10	; 0x26
    2446:	b7 a2       	std	Z+39, r11	; 0x27
    2448:	84 8e       	std	Z+28, r8	; 0x1c
    244a:	95 8e       	std	Z+29, r9	; 0x1d
    244c:	a6 8e       	std	Z+30, r10	; 0x1e
    244e:	b7 8e       	std	Z+31, r11	; 0x1f
		key->rk[ 13] = key->rk[ 15] = key->rk[ 17] = ROL(key->rk[  7] + delta[2][ 3], 3);
    2450:	8d ea       	ldi	r24, 0xAD	; 173
    2452:	88 1a       	sub	r8, r24
    2454:	8b e1       	ldi	r24, 0x1B	; 27
    2456:	98 0a       	sbc	r9, r24
    2458:	8c ee       	ldi	r24, 0xEC	; 236
    245a:	a8 0a       	sbc	r10, r24
    245c:	80 e3       	ldi	r24, 0x30	; 48
    245e:	b8 0a       	sbc	r11, r24
    2460:	75 01       	movw	r14, r10
    2462:	64 01       	movw	r12, r8
    2464:	6d e1       	ldi	r22, 0x1D	; 29
    2466:	f6 94       	lsr	r15
    2468:	e7 94       	ror	r14
    246a:	d7 94       	ror	r13
    246c:	c7 94       	ror	r12
    246e:	6a 95       	dec	r22
    2470:	d1 f7       	brne	.-12     	; 0x2466 <lea_init+0x480>
    2472:	73 e0       	ldi	r23, 0x03	; 3
    2474:	88 0c       	add	r8, r8
    2476:	99 1c       	adc	r9, r9
    2478:	aa 1c       	adc	r10, r10
    247a:	bb 1c       	adc	r11, r11
    247c:	7a 95       	dec	r23
    247e:	d1 f7       	brne	.-12     	; 0x2474 <lea_init+0x48e>
    2480:	8c 28       	or	r8, r12
    2482:	9d 28       	or	r9, r13
    2484:	ae 28       	or	r10, r14
    2486:	bf 28       	or	r11, r15
    2488:	c4 5e       	subi	r28, 0xE4	; 228
    248a:	d1 40       	sbci	r29, 0x01	; 1
    248c:	88 82       	st	Y, r8
    248e:	99 82       	std	Y+1, r9	; 0x01
    2490:	aa 82       	std	Y+2, r10	; 0x02
    2492:	bb 82       	std	Y+3, r11	; 0x03
    2494:	84 ae       	std	Z+60, r8	; 0x3c
    2496:	95 ae       	std	Z+61, r9	; 0x3d
    2498:	a6 ae       	std	Z+62, r10	; 0x3e
    249a:	b7 ae       	std	Z+63, r11	; 0x3f
    249c:	84 aa       	std	Z+52, r8	; 0x34
    249e:	95 aa       	std	Z+53, r9	; 0x35
    24a0:	a6 aa       	std	Z+54, r10	; 0x36
    24a2:	b7 aa       	std	Z+55, r11	; 0x37
		key->rk[ 19] = key->rk[ 21] = key->rk[ 23] = ROL(key->rk[ 13] + delta[3][ 4], 3);
    24a4:	89 e3       	ldi	r24, 0x39	; 57
    24a6:	88 1a       	sub	r8, r24
    24a8:	81 ef       	ldi	r24, 0xF1	; 241
    24aa:	98 0a       	sbc	r9, r24
    24ac:	8c e0       	ldi	r24, 0x0C	; 12
    24ae:	a8 0a       	sbc	r10, r24
    24b0:	82 e7       	ldi	r24, 0x72	; 114
    24b2:	b8 0a       	sbc	r11, r24
    24b4:	75 01       	movw	r14, r10
    24b6:	64 01       	movw	r12, r8
    24b8:	1d e1       	ldi	r17, 0x1D	; 29
    24ba:	f6 94       	lsr	r15
    24bc:	e7 94       	ror	r14
    24be:	d7 94       	ror	r13
    24c0:	c7 94       	ror	r12
    24c2:	1a 95       	dec	r17
    24c4:	d1 f7       	brne	.-12     	; 0x24ba <lea_init+0x4d4>
    24c6:	03 e0       	ldi	r16, 0x03	; 3
    24c8:	88 0c       	add	r8, r8
    24ca:	99 1c       	adc	r9, r9
    24cc:	aa 1c       	adc	r10, r10
    24ce:	bb 1c       	adc	r11, r11
    24d0:	0a 95       	dec	r16
    24d2:	d1 f7       	brne	.-12     	; 0x24c8 <lea_init+0x4e2>
    24d4:	8c 28       	or	r8, r12
    24d6:	9d 28       	or	r9, r13
    24d8:	ae 28       	or	r10, r14
    24da:	bf 28       	or	r11, r15
    24dc:	68 96       	adiw	r28, 0x18	; 24
    24de:	88 82       	st	Y, r8
    24e0:	99 82       	std	Y+1, r9	; 0x01
    24e2:	aa 82       	std	Y+2, r10	; 0x02
    24e4:	bb 82       	std	Y+3, r11	; 0x03
    24e6:	28 97       	sbiw	r28, 0x08	; 8
    24e8:	88 82       	st	Y, r8
    24ea:	99 82       	std	Y+1, r9	; 0x01
    24ec:	aa 82       	std	Y+2, r10	; 0x02
    24ee:	bb 82       	std	Y+3, r11	; 0x03
    24f0:	28 97       	sbiw	r28, 0x08	; 8
    24f2:	88 82       	st	Y, r8
    24f4:	99 82       	std	Y+1, r9	; 0x01
    24f6:	aa 82       	std	Y+2, r10	; 0x02
    24f8:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 25] = key->rk[ 27] = key->rk[ 29] = ROL(key->rk[ 19] + delta[0][ 5], 3);
    24fa:	88 e8       	ldi	r24, 0x88	; 136
    24fc:	88 1a       	sub	r8, r24
    24fe:	84 ec       	ldi	r24, 0xC4	; 196
    2500:	98 0a       	sbc	r9, r24
    2502:	82 e0       	ldi	r24, 0x02	; 2
    2504:	a8 0a       	sbc	r10, r24
    2506:	82 e8       	ldi	r24, 0x82	; 130
    2508:	b8 0a       	sbc	r11, r24
    250a:	75 01       	movw	r14, r10
    250c:	64 01       	movw	r12, r8
    250e:	8d e1       	ldi	r24, 0x1D	; 29
    2510:	f6 94       	lsr	r15
    2512:	e7 94       	ror	r14
    2514:	d7 94       	ror	r13
    2516:	c7 94       	ror	r12
    2518:	8a 95       	dec	r24
    251a:	d1 f7       	brne	.-12     	; 0x2510 <lea_init+0x52a>
    251c:	93 e0       	ldi	r25, 0x03	; 3
    251e:	88 0c       	add	r8, r8
    2520:	99 1c       	adc	r9, r9
    2522:	aa 1c       	adc	r10, r10
    2524:	bb 1c       	adc	r11, r11
    2526:	9a 95       	dec	r25
    2528:	d1 f7       	brne	.-12     	; 0x251e <lea_init+0x538>
    252a:	8c 28       	or	r8, r12
    252c:	9d 28       	or	r9, r13
    252e:	ae 28       	or	r10, r14
    2530:	bf 28       	or	r11, r15
    2532:	a8 96       	adiw	r28, 0x28	; 40
    2534:	88 82       	st	Y, r8
    2536:	99 82       	std	Y+1, r9	; 0x01
    2538:	aa 82       	std	Y+2, r10	; 0x02
    253a:	bb 82       	std	Y+3, r11	; 0x03
    253c:	28 97       	sbiw	r28, 0x08	; 8
    253e:	88 82       	st	Y, r8
    2540:	99 82       	std	Y+1, r9	; 0x01
    2542:	aa 82       	std	Y+2, r10	; 0x02
    2544:	bb 82       	std	Y+3, r11	; 0x03
    2546:	28 97       	sbiw	r28, 0x08	; 8
    2548:	88 82       	st	Y, r8
    254a:	99 82       	std	Y+1, r9	; 0x01
    254c:	aa 82       	std	Y+2, r10	; 0x02
    254e:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 31] = key->rk[ 33] = key->rk[ 35] = ROL(key->rk[ 25] + delta[1][ 6], 3);
    2550:	8f e6       	ldi	r24, 0x6F	; 111
    2552:	88 1a       	sub	r8, r24
    2554:	8f e3       	ldi	r24, 0x3F	; 63
    2556:	98 0a       	sbc	r9, r24
    2558:	85 e6       	ldi	r24, 0x65	; 101
    255a:	a8 0a       	sbc	r10, r24
    255c:	87 ee       	ldi	r24, 0xE7	; 231
    255e:	b8 0a       	sbc	r11, r24
    2560:	75 01       	movw	r14, r10
    2562:	64 01       	movw	r12, r8
    2564:	6d e1       	ldi	r22, 0x1D	; 29
    2566:	f6 94       	lsr	r15
    2568:	e7 94       	ror	r14
    256a:	d7 94       	ror	r13
    256c:	c7 94       	ror	r12
    256e:	6a 95       	dec	r22
    2570:	d1 f7       	brne	.-12     	; 0x2566 <lea_init+0x580>
    2572:	73 e0       	ldi	r23, 0x03	; 3
    2574:	88 0c       	add	r8, r8
    2576:	99 1c       	adc	r9, r9
    2578:	aa 1c       	adc	r10, r10
    257a:	bb 1c       	adc	r11, r11
    257c:	7a 95       	dec	r23
    257e:	d1 f7       	brne	.-12     	; 0x2574 <lea_init+0x58e>
    2580:	8c 28       	or	r8, r12
    2582:	9d 28       	or	r9, r13
    2584:	ae 28       	or	r10, r14
    2586:	bf 28       	or	r11, r15
    2588:	a8 96       	adiw	r28, 0x28	; 40
    258a:	88 82       	st	Y, r8
    258c:	99 82       	std	Y+1, r9	; 0x01
    258e:	aa 82       	std	Y+2, r10	; 0x02
    2590:	bb 82       	std	Y+3, r11	; 0x03
    2592:	28 97       	sbiw	r28, 0x08	; 8
    2594:	88 82       	st	Y, r8
    2596:	99 82       	std	Y+1, r9	; 0x01
    2598:	aa 82       	std	Y+2, r10	; 0x02
    259a:	bb 82       	std	Y+3, r11	; 0x03
    259c:	28 97       	sbiw	r28, 0x08	; 8
    259e:	88 82       	st	Y, r8
    25a0:	99 82       	std	Y+1, r9	; 0x01
    25a2:	aa 82       	std	Y+2, r10	; 0x02
    25a4:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 37] = key->rk[ 39] = key->rk[ 41] = ROL(key->rk[ 31] + delta[2][ 7], 3);
    25a6:	84 ec       	ldi	r24, 0xC4	; 196
    25a8:	88 1a       	sub	r8, r24
    25aa:	8a eb       	ldi	r24, 0xBA	; 186
    25ac:	98 0a       	sbc	r9, r24
    25ae:	81 ec       	ldi	r24, 0xC1	; 193
    25b0:	a8 0a       	sbc	r10, r24
    25b2:	8e e0       	ldi	r24, 0x0E	; 14
    25b4:	b8 0a       	sbc	r11, r24
    25b6:	75 01       	movw	r14, r10
    25b8:	64 01       	movw	r12, r8
    25ba:	1d e1       	ldi	r17, 0x1D	; 29
    25bc:	f6 94       	lsr	r15
    25be:	e7 94       	ror	r14
    25c0:	d7 94       	ror	r13
    25c2:	c7 94       	ror	r12
    25c4:	1a 95       	dec	r17
    25c6:	d1 f7       	brne	.-12     	; 0x25bc <lea_init+0x5d6>
    25c8:	03 e0       	ldi	r16, 0x03	; 3
    25ca:	88 0c       	add	r8, r8
    25cc:	99 1c       	adc	r9, r9
    25ce:	aa 1c       	adc	r10, r10
    25d0:	bb 1c       	adc	r11, r11
    25d2:	0a 95       	dec	r16
    25d4:	d1 f7       	brne	.-12     	; 0x25ca <lea_init+0x5e4>
    25d6:	8c 28       	or	r8, r12
    25d8:	9d 28       	or	r9, r13
    25da:	ae 28       	or	r10, r14
    25dc:	bf 28       	or	r11, r15
    25de:	a8 96       	adiw	r28, 0x28	; 40
    25e0:	88 82       	st	Y, r8
    25e2:	99 82       	std	Y+1, r9	; 0x01
    25e4:	aa 82       	std	Y+2, r10	; 0x02
    25e6:	bb 82       	std	Y+3, r11	; 0x03
    25e8:	28 97       	sbiw	r28, 0x08	; 8
    25ea:	88 82       	st	Y, r8
    25ec:	99 82       	std	Y+1, r9	; 0x01
    25ee:	aa 82       	std	Y+2, r10	; 0x02
    25f0:	bb 82       	std	Y+3, r11	; 0x03
    25f2:	28 97       	sbiw	r28, 0x08	; 8
    25f4:	88 82       	st	Y, r8
    25f6:	99 82       	std	Y+1, r9	; 0x01
    25f8:	aa 82       	std	Y+2, r10	; 0x02
    25fa:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 43] = key->rk[ 45] = key->rk[ 47] = ROL(key->rk[ 37] + delta[3][ 8], 3);
    25fc:	88 e8       	ldi	r24, 0x88	; 136
    25fe:	88 1a       	sub	r8, r24
    2600:	83 e1       	ldi	r24, 0x13	; 19
    2602:	98 0a       	sbc	r9, r24
    2604:	8f ec       	ldi	r24, 0xCF	; 207
    2606:	a8 0a       	sbc	r10, r24
    2608:	80 e2       	ldi	r24, 0x20	; 32
    260a:	b8 0a       	sbc	r11, r24
    260c:	75 01       	movw	r14, r10
    260e:	64 01       	movw	r12, r8
    2610:	8d e1       	ldi	r24, 0x1D	; 29
    2612:	f6 94       	lsr	r15
    2614:	e7 94       	ror	r14
    2616:	d7 94       	ror	r13
    2618:	c7 94       	ror	r12
    261a:	8a 95       	dec	r24
    261c:	d1 f7       	brne	.-12     	; 0x2612 <lea_init+0x62c>
    261e:	93 e0       	ldi	r25, 0x03	; 3
    2620:	88 0c       	add	r8, r8
    2622:	99 1c       	adc	r9, r9
    2624:	aa 1c       	adc	r10, r10
    2626:	bb 1c       	adc	r11, r11
    2628:	9a 95       	dec	r25
    262a:	d1 f7       	brne	.-12     	; 0x2620 <lea_init+0x63a>
    262c:	8c 28       	or	r8, r12
    262e:	9d 28       	or	r9, r13
    2630:	ae 28       	or	r10, r14
    2632:	bf 28       	or	r11, r15
    2634:	a8 96       	adiw	r28, 0x28	; 40
    2636:	88 82       	st	Y, r8
    2638:	99 82       	std	Y+1, r9	; 0x01
    263a:	aa 82       	std	Y+2, r10	; 0x02
    263c:	bb 82       	std	Y+3, r11	; 0x03
    263e:	28 97       	sbiw	r28, 0x08	; 8
    2640:	88 82       	st	Y, r8
    2642:	99 82       	std	Y+1, r9	; 0x01
    2644:	aa 82       	std	Y+2, r10	; 0x02
    2646:	bb 82       	std	Y+3, r11	; 0x03
    2648:	28 97       	sbiw	r28, 0x08	; 8
    264a:	88 82       	st	Y, r8
    264c:	99 82       	std	Y+1, r9	; 0x01
    264e:	aa 82       	std	Y+2, r10	; 0x02
    2650:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 49] = key->rk[ 51] = key->rk[ 53] = ROL(key->rk[ 43] + delta[0][ 9], 3);
    2652:	89 e7       	ldi	r24, 0x79	; 121
    2654:	88 1a       	sub	r8, r24
    2656:	88 e4       	ldi	r24, 0x48	; 72
    2658:	98 0a       	sbc	r9, r24
    265a:	8c e2       	ldi	r24, 0x2C	; 44
    265c:	a8 0a       	sbc	r10, r24
    265e:	80 e2       	ldi	r24, 0x20	; 32
    2660:	b8 0a       	sbc	r11, r24
    2662:	75 01       	movw	r14, r10
    2664:	64 01       	movw	r12, r8
    2666:	6d e1       	ldi	r22, 0x1D	; 29
    2668:	f6 94       	lsr	r15
    266a:	e7 94       	ror	r14
    266c:	d7 94       	ror	r13
    266e:	c7 94       	ror	r12
    2670:	6a 95       	dec	r22
    2672:	d1 f7       	brne	.-12     	; 0x2668 <lea_init+0x682>
    2674:	73 e0       	ldi	r23, 0x03	; 3
    2676:	88 0c       	add	r8, r8
    2678:	99 1c       	adc	r9, r9
    267a:	aa 1c       	adc	r10, r10
    267c:	bb 1c       	adc	r11, r11
    267e:	7a 95       	dec	r23
    2680:	d1 f7       	brne	.-12     	; 0x2676 <lea_init+0x690>
    2682:	8c 28       	or	r8, r12
    2684:	9d 28       	or	r9, r13
    2686:	ae 28       	or	r10, r14
    2688:	bf 28       	or	r11, r15
    268a:	a8 96       	adiw	r28, 0x28	; 40
    268c:	88 82       	st	Y, r8
    268e:	99 82       	std	Y+1, r9	; 0x01
    2690:	aa 82       	std	Y+2, r10	; 0x02
    2692:	bb 82       	std	Y+3, r11	; 0x03
    2694:	28 97       	sbiw	r28, 0x08	; 8
    2696:	88 82       	st	Y, r8
    2698:	99 82       	std	Y+1, r9	; 0x01
    269a:	aa 82       	std	Y+2, r10	; 0x02
    269c:	bb 82       	std	Y+3, r11	; 0x03
    269e:	28 97       	sbiw	r28, 0x08	; 8
    26a0:	88 82       	st	Y, r8
    26a2:	99 82       	std	Y+1, r9	; 0x01
    26a4:	aa 82       	std	Y+2, r10	; 0x02
    26a6:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 55] = key->rk[ 57] = key->rk[ 59] = ROL(key->rk[ 49] + delta[1][10], 3);
    26a8:	8f ee       	ldi	r24, 0xEF	; 239
    26aa:	88 1a       	sub	r8, r24
    26ac:	86 ef       	ldi	r24, 0xF6	; 246
    26ae:	98 0a       	sbc	r9, r24
    26b0:	83 e5       	ldi	r24, 0x53	; 83
    26b2:	a8 0a       	sbc	r10, r24
    26b4:	86 e7       	ldi	r24, 0x76	; 118
    26b6:	b8 0a       	sbc	r11, r24
    26b8:	75 01       	movw	r14, r10
    26ba:	64 01       	movw	r12, r8
    26bc:	1d e1       	ldi	r17, 0x1D	; 29
    26be:	f6 94       	lsr	r15
    26c0:	e7 94       	ror	r14
    26c2:	d7 94       	ror	r13
    26c4:	c7 94       	ror	r12
    26c6:	1a 95       	dec	r17
    26c8:	d1 f7       	brne	.-12     	; 0x26be <lea_init+0x6d8>
    26ca:	03 e0       	ldi	r16, 0x03	; 3
    26cc:	88 0c       	add	r8, r8
    26ce:	99 1c       	adc	r9, r9
    26d0:	aa 1c       	adc	r10, r10
    26d2:	bb 1c       	adc	r11, r11
    26d4:	0a 95       	dec	r16
    26d6:	d1 f7       	brne	.-12     	; 0x26cc <lea_init+0x6e6>
    26d8:	8c 28       	or	r8, r12
    26da:	9d 28       	or	r9, r13
    26dc:	ae 28       	or	r10, r14
    26de:	bf 28       	or	r11, r15
    26e0:	a8 96       	adiw	r28, 0x28	; 40
    26e2:	88 82       	st	Y, r8
    26e4:	99 82       	std	Y+1, r9	; 0x01
    26e6:	aa 82       	std	Y+2, r10	; 0x02
    26e8:	bb 82       	std	Y+3, r11	; 0x03
    26ea:	28 97       	sbiw	r28, 0x08	; 8
    26ec:	88 82       	st	Y, r8
    26ee:	99 82       	std	Y+1, r9	; 0x01
    26f0:	aa 82       	std	Y+2, r10	; 0x02
    26f2:	bb 82       	std	Y+3, r11	; 0x03
    26f4:	28 97       	sbiw	r28, 0x08	; 8
    26f6:	88 82       	st	Y, r8
    26f8:	99 82       	std	Y+1, r9	; 0x01
    26fa:	aa 82       	std	Y+2, r10	; 0x02
    26fc:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 61] = key->rk[ 63] = key->rk[ 65] = ROL(key->rk[ 55] + delta[2][11], 3);
    26fe:	81 e3       	ldi	r24, 0x31	; 49
    2700:	88 1a       	sub	r8, r24
    2702:	8c ea       	ldi	r24, 0xAC	; 172
    2704:	98 0a       	sbc	r9, r24
    2706:	8b e1       	ldi	r24, 0x1B	; 27
    2708:	a8 0a       	sbc	r10, r24
    270a:	8c ee       	ldi	r24, 0xEC	; 236
    270c:	b8 0a       	sbc	r11, r24
    270e:	75 01       	movw	r14, r10
    2710:	64 01       	movw	r12, r8
    2712:	8d e1       	ldi	r24, 0x1D	; 29
    2714:	f6 94       	lsr	r15
    2716:	e7 94       	ror	r14
    2718:	d7 94       	ror	r13
    271a:	c7 94       	ror	r12
    271c:	8a 95       	dec	r24
    271e:	d1 f7       	brne	.-12     	; 0x2714 <lea_init+0x72e>
    2720:	93 e0       	ldi	r25, 0x03	; 3
    2722:	88 0c       	add	r8, r8
    2724:	99 1c       	adc	r9, r9
    2726:	aa 1c       	adc	r10, r10
    2728:	bb 1c       	adc	r11, r11
    272a:	9a 95       	dec	r25
    272c:	d1 f7       	brne	.-12     	; 0x2722 <lea_init+0x73c>
    272e:	8c 28       	or	r8, r12
    2730:	9d 28       	or	r9, r13
    2732:	ae 28       	or	r10, r14
    2734:	bf 28       	or	r11, r15
    2736:	a8 96       	adiw	r28, 0x28	; 40
    2738:	88 82       	st	Y, r8
    273a:	99 82       	std	Y+1, r9	; 0x01
    273c:	aa 82       	std	Y+2, r10	; 0x02
    273e:	bb 82       	std	Y+3, r11	; 0x03
    2740:	28 97       	sbiw	r28, 0x08	; 8
    2742:	88 82       	st	Y, r8
    2744:	99 82       	std	Y+1, r9	; 0x01
    2746:	aa 82       	std	Y+2, r10	; 0x02
    2748:	bb 82       	std	Y+3, r11	; 0x03
    274a:	28 97       	sbiw	r28, 0x08	; 8
    274c:	88 82       	st	Y, r8
    274e:	99 82       	std	Y+1, r9	; 0x01
    2750:	aa 82       	std	Y+2, r10	; 0x02
    2752:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 67] = key->rk[ 69] = key->rk[ 71] = ROL(key->rk[ 61] + delta[3][12], 3);
    2754:	83 e7       	ldi	r24, 0x73	; 115
    2756:	88 1a       	sub	r8, r24
    2758:	88 e3       	ldi	r24, 0x38	; 56
    275a:	98 0a       	sbc	r9, r24
    275c:	81 ef       	ldi	r24, 0xF1	; 241
    275e:	a8 0a       	sbc	r10, r24
    2760:	8c e0       	ldi	r24, 0x0C	; 12
    2762:	b8 0a       	sbc	r11, r24
    2764:	75 01       	movw	r14, r10
    2766:	64 01       	movw	r12, r8
    2768:	6d e1       	ldi	r22, 0x1D	; 29
    276a:	f6 94       	lsr	r15
    276c:	e7 94       	ror	r14
    276e:	d7 94       	ror	r13
    2770:	c7 94       	ror	r12
    2772:	6a 95       	dec	r22
    2774:	d1 f7       	brne	.-12     	; 0x276a <lea_init+0x784>
    2776:	73 e0       	ldi	r23, 0x03	; 3
    2778:	88 0c       	add	r8, r8
    277a:	99 1c       	adc	r9, r9
    277c:	aa 1c       	adc	r10, r10
    277e:	bb 1c       	adc	r11, r11
    2780:	7a 95       	dec	r23
    2782:	d1 f7       	brne	.-12     	; 0x2778 <lea_init+0x792>
    2784:	8c 28       	or	r8, r12
    2786:	9d 28       	or	r9, r13
    2788:	ae 28       	or	r10, r14
    278a:	bf 28       	or	r11, r15
    278c:	a8 96       	adiw	r28, 0x28	; 40
    278e:	88 82       	st	Y, r8
    2790:	99 82       	std	Y+1, r9	; 0x01
    2792:	aa 82       	std	Y+2, r10	; 0x02
    2794:	bb 82       	std	Y+3, r11	; 0x03
    2796:	28 97       	sbiw	r28, 0x08	; 8
    2798:	88 82       	st	Y, r8
    279a:	99 82       	std	Y+1, r9	; 0x01
    279c:	aa 82       	std	Y+2, r10	; 0x02
    279e:	bb 82       	std	Y+3, r11	; 0x03
    27a0:	28 97       	sbiw	r28, 0x08	; 8
    27a2:	88 82       	st	Y, r8
    27a4:	99 82       	std	Y+1, r9	; 0x01
    27a6:	aa 82       	std	Y+2, r10	; 0x02
    27a8:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 73] = key->rk[ 75] = key->rk[ 77] = ROL(key->rk[ 67] + delta[0][13], 3);
    27aa:	83 e8       	ldi	r24, 0x83	; 131
    27ac:	88 1a       	sub	r8, r24
    27ae:	87 e8       	ldi	r24, 0x87	; 135
    27b0:	98 0a       	sbc	r9, r24
    27b2:	84 ec       	ldi	r24, 0xC4	; 196
    27b4:	a8 0a       	sbc	r10, r24
    27b6:	82 e0       	ldi	r24, 0x02	; 2
    27b8:	b8 0a       	sbc	r11, r24
    27ba:	75 01       	movw	r14, r10
    27bc:	64 01       	movw	r12, r8
    27be:	1d e1       	ldi	r17, 0x1D	; 29
    27c0:	f6 94       	lsr	r15
    27c2:	e7 94       	ror	r14
    27c4:	d7 94       	ror	r13
    27c6:	c7 94       	ror	r12
    27c8:	1a 95       	dec	r17
    27ca:	d1 f7       	brne	.-12     	; 0x27c0 <lea_init+0x7da>
    27cc:	03 e0       	ldi	r16, 0x03	; 3
    27ce:	88 0c       	add	r8, r8
    27d0:	99 1c       	adc	r9, r9
    27d2:	aa 1c       	adc	r10, r10
    27d4:	bb 1c       	adc	r11, r11
    27d6:	0a 95       	dec	r16
    27d8:	d1 f7       	brne	.-12     	; 0x27ce <lea_init+0x7e8>
    27da:	8c 28       	or	r8, r12
    27dc:	9d 28       	or	r9, r13
    27de:	ae 28       	or	r10, r14
    27e0:	bf 28       	or	r11, r15
    27e2:	a8 96       	adiw	r28, 0x28	; 40
    27e4:	88 82       	st	Y, r8
    27e6:	99 82       	std	Y+1, r9	; 0x01
    27e8:	aa 82       	std	Y+2, r10	; 0x02
    27ea:	bb 82       	std	Y+3, r11	; 0x03
    27ec:	28 97       	sbiw	r28, 0x08	; 8
    27ee:	88 82       	st	Y, r8
    27f0:	99 82       	std	Y+1, r9	; 0x01
    27f2:	aa 82       	std	Y+2, r10	; 0x02
    27f4:	bb 82       	std	Y+3, r11	; 0x03
    27f6:	28 97       	sbiw	r28, 0x08	; 8
    27f8:	88 82       	st	Y, r8
    27fa:	99 82       	std	Y+1, r9	; 0x01
    27fc:	aa 82       	std	Y+2, r10	; 0x02
    27fe:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 79] = key->rk[ 81] = key->rk[ 83] = ROL(key->rk[ 73] + delta[1][14], 3);
    2800:	88 ee       	ldi	r24, 0xE8	; 232
    2802:	88 1a       	sub	r8, r24
    2804:	8e e6       	ldi	r24, 0x6E	; 110
    2806:	98 0a       	sbc	r9, r24
    2808:	8f e3       	ldi	r24, 0x3F	; 63
    280a:	a8 0a       	sbc	r10, r24
    280c:	85 e6       	ldi	r24, 0x65	; 101
    280e:	b8 0a       	sbc	r11, r24
    2810:	75 01       	movw	r14, r10
    2812:	64 01       	movw	r12, r8
    2814:	8d e1       	ldi	r24, 0x1D	; 29
    2816:	f6 94       	lsr	r15
    2818:	e7 94       	ror	r14
    281a:	d7 94       	ror	r13
    281c:	c7 94       	ror	r12
    281e:	8a 95       	dec	r24
    2820:	d1 f7       	brne	.-12     	; 0x2816 <lea_init+0x830>
    2822:	93 e0       	ldi	r25, 0x03	; 3
    2824:	88 0c       	add	r8, r8
    2826:	99 1c       	adc	r9, r9
    2828:	aa 1c       	adc	r10, r10
    282a:	bb 1c       	adc	r11, r11
    282c:	9a 95       	dec	r25
    282e:	d1 f7       	brne	.-12     	; 0x2824 <lea_init+0x83e>
    2830:	8c 28       	or	r8, r12
    2832:	9d 28       	or	r9, r13
    2834:	ae 28       	or	r10, r14
    2836:	bf 28       	or	r11, r15
    2838:	a8 96       	adiw	r28, 0x28	; 40
    283a:	88 82       	st	Y, r8
    283c:	99 82       	std	Y+1, r9	; 0x01
    283e:	aa 82       	std	Y+2, r10	; 0x02
    2840:	bb 82       	std	Y+3, r11	; 0x03
    2842:	28 97       	sbiw	r28, 0x08	; 8
    2844:	88 82       	st	Y, r8
    2846:	99 82       	std	Y+1, r9	; 0x01
    2848:	aa 82       	std	Y+2, r10	; 0x02
    284a:	bb 82       	std	Y+3, r11	; 0x03
    284c:	28 97       	sbiw	r28, 0x08	; 8
    284e:	88 82       	st	Y, r8
    2850:	99 82       	std	Y+1, r9	; 0x01
    2852:	aa 82       	std	Y+2, r10	; 0x02
    2854:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 85] = key->rk[ 87] = key->rk[ 89] = ROL(key->rk[ 79] + delta[2][15], 3);
    2856:	8f e0       	ldi	r24, 0x0F	; 15
    2858:	88 1a       	sub	r8, r24
    285a:	83 ec       	ldi	r24, 0xC3	; 195
    285c:	98 0a       	sbc	r9, r24
    285e:	8a eb       	ldi	r24, 0xBA	; 186
    2860:	a8 0a       	sbc	r10, r24
    2862:	81 ec       	ldi	r24, 0xC1	; 193
    2864:	b8 0a       	sbc	r11, r24
    2866:	75 01       	movw	r14, r10
    2868:	64 01       	movw	r12, r8
    286a:	6d e1       	ldi	r22, 0x1D	; 29
    286c:	f6 94       	lsr	r15
    286e:	e7 94       	ror	r14
    2870:	d7 94       	ror	r13
    2872:	c7 94       	ror	r12
    2874:	6a 95       	dec	r22
    2876:	d1 f7       	brne	.-12     	; 0x286c <lea_init+0x886>
    2878:	73 e0       	ldi	r23, 0x03	; 3
    287a:	88 0c       	add	r8, r8
    287c:	99 1c       	adc	r9, r9
    287e:	aa 1c       	adc	r10, r10
    2880:	bb 1c       	adc	r11, r11
    2882:	7a 95       	dec	r23
    2884:	d1 f7       	brne	.-12     	; 0x287a <lea_init+0x894>
    2886:	8c 28       	or	r8, r12
    2888:	9d 28       	or	r9, r13
    288a:	ae 28       	or	r10, r14
    288c:	bf 28       	or	r11, r15
    288e:	a8 96       	adiw	r28, 0x28	; 40
    2890:	88 82       	st	Y, r8
    2892:	99 82       	std	Y+1, r9	; 0x01
    2894:	aa 82       	std	Y+2, r10	; 0x02
    2896:	bb 82       	std	Y+3, r11	; 0x03
    2898:	28 97       	sbiw	r28, 0x08	; 8
    289a:	88 82       	st	Y, r8
    289c:	99 82       	std	Y+1, r9	; 0x01
    289e:	aa 82       	std	Y+2, r10	; 0x02
    28a0:	bb 82       	std	Y+3, r11	; 0x03
    28a2:	28 97       	sbiw	r28, 0x08	; 8
    28a4:	88 82       	st	Y, r8
    28a6:	99 82       	std	Y+1, r9	; 0x01
    28a8:	aa 82       	std	Y+2, r10	; 0x02
    28aa:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 91] = key->rk[ 93] = key->rk[ 95] = ROL(key->rk[ 85] + delta[3][16], 3);
    28ac:	81 e2       	ldi	r24, 0x21	; 33
    28ae:	88 1a       	sub	r8, r24
    28b0:	87 e8       	ldi	r24, 0x87	; 135
    28b2:	98 0a       	sbc	r9, r24
    28b4:	83 e1       	ldi	r24, 0x13	; 19
    28b6:	a8 0a       	sbc	r10, r24
    28b8:	8f ec       	ldi	r24, 0xCF	; 207
    28ba:	b8 0a       	sbc	r11, r24
    28bc:	75 01       	movw	r14, r10
    28be:	64 01       	movw	r12, r8
    28c0:	1d e1       	ldi	r17, 0x1D	; 29
    28c2:	f6 94       	lsr	r15
    28c4:	e7 94       	ror	r14
    28c6:	d7 94       	ror	r13
    28c8:	c7 94       	ror	r12
    28ca:	1a 95       	dec	r17
    28cc:	d1 f7       	brne	.-12     	; 0x28c2 <lea_init+0x8dc>
    28ce:	03 e0       	ldi	r16, 0x03	; 3
    28d0:	88 0c       	add	r8, r8
    28d2:	99 1c       	adc	r9, r9
    28d4:	aa 1c       	adc	r10, r10
    28d6:	bb 1c       	adc	r11, r11
    28d8:	0a 95       	dec	r16
    28da:	d1 f7       	brne	.-12     	; 0x28d0 <lea_init+0x8ea>
    28dc:	8c 28       	or	r8, r12
    28de:	9d 28       	or	r9, r13
    28e0:	ae 28       	or	r10, r14
    28e2:	bf 28       	or	r11, r15
    28e4:	a8 96       	adiw	r28, 0x28	; 40
    28e6:	88 82       	st	Y, r8
    28e8:	99 82       	std	Y+1, r9	; 0x01
    28ea:	aa 82       	std	Y+2, r10	; 0x02
    28ec:	bb 82       	std	Y+3, r11	; 0x03
    28ee:	28 97       	sbiw	r28, 0x08	; 8
    28f0:	88 82       	st	Y, r8
    28f2:	99 82       	std	Y+1, r9	; 0x01
    28f4:	aa 82       	std	Y+2, r10	; 0x02
    28f6:	bb 82       	std	Y+3, r11	; 0x03
    28f8:	28 97       	sbiw	r28, 0x08	; 8
    28fa:	88 82       	st	Y, r8
    28fc:	99 82       	std	Y+1, r9	; 0x01
    28fe:	aa 82       	std	Y+2, r10	; 0x02
    2900:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 97] = key->rk[ 99] = key->rk[101] = ROL(key->rk[ 91] + delta[0][17], 3);
    2902:	81 e2       	ldi	r24, 0x21	; 33
    2904:	88 1a       	sub	r8, r24
    2906:	88 e7       	ldi	r24, 0x78	; 120
    2908:	98 0a       	sbc	r9, r24
    290a:	88 e4       	ldi	r24, 0x48	; 72
    290c:	a8 0a       	sbc	r10, r24
    290e:	8c e2       	ldi	r24, 0x2C	; 44
    2910:	b8 0a       	sbc	r11, r24
    2912:	75 01       	movw	r14, r10
    2914:	64 01       	movw	r12, r8
    2916:	8d e1       	ldi	r24, 0x1D	; 29
    2918:	f6 94       	lsr	r15
    291a:	e7 94       	ror	r14
    291c:	d7 94       	ror	r13
    291e:	c7 94       	ror	r12
    2920:	8a 95       	dec	r24
    2922:	d1 f7       	brne	.-12     	; 0x2918 <lea_init+0x932>
    2924:	93 e0       	ldi	r25, 0x03	; 3
    2926:	88 0c       	add	r8, r8
    2928:	99 1c       	adc	r9, r9
    292a:	aa 1c       	adc	r10, r10
    292c:	bb 1c       	adc	r11, r11
    292e:	9a 95       	dec	r25
    2930:	d1 f7       	brne	.-12     	; 0x2926 <lea_init+0x940>
    2932:	8c 28       	or	r8, r12
    2934:	9d 28       	or	r9, r13
    2936:	ae 28       	or	r10, r14
    2938:	bf 28       	or	r11, r15
    293a:	a8 96       	adiw	r28, 0x28	; 40
    293c:	88 82       	st	Y, r8
    293e:	99 82       	std	Y+1, r9	; 0x01
    2940:	aa 82       	std	Y+2, r10	; 0x02
    2942:	bb 82       	std	Y+3, r11	; 0x03
    2944:	28 97       	sbiw	r28, 0x08	; 8
    2946:	88 82       	st	Y, r8
    2948:	99 82       	std	Y+1, r9	; 0x01
    294a:	aa 82       	std	Y+2, r10	; 0x02
    294c:	bb 82       	std	Y+3, r11	; 0x03
    294e:	28 97       	sbiw	r28, 0x08	; 8
    2950:	88 82       	st	Y, r8
    2952:	99 82       	std	Y+1, r9	; 0x01
    2954:	aa 82       	std	Y+2, r10	; 0x02
    2956:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[103] = key->rk[105] = key->rk[107] = ROL(key->rk[ 97] + delta[1][18], 3);
    2958:	87 e7       	ldi	r24, 0x77	; 119
    295a:	88 1a       	sub	r8, r24
    295c:	8e ee       	ldi	r24, 0xEE	; 238
    295e:	98 0a       	sbc	r9, r24
    2960:	86 ef       	ldi	r24, 0xF6	; 246
    2962:	a8 0a       	sbc	r10, r24
    2964:	83 e5       	ldi	r24, 0x53	; 83
    2966:	b8 0a       	sbc	r11, r24
    2968:	75 01       	movw	r14, r10
    296a:	64 01       	movw	r12, r8
    296c:	6d e1       	ldi	r22, 0x1D	; 29
    296e:	f6 94       	lsr	r15
    2970:	e7 94       	ror	r14
    2972:	d7 94       	ror	r13
    2974:	c7 94       	ror	r12
    2976:	6a 95       	dec	r22
    2978:	d1 f7       	brne	.-12     	; 0x296e <lea_init+0x988>
    297a:	73 e0       	ldi	r23, 0x03	; 3
    297c:	88 0c       	add	r8, r8
    297e:	99 1c       	adc	r9, r9
    2980:	aa 1c       	adc	r10, r10
    2982:	bb 1c       	adc	r11, r11
    2984:	7a 95       	dec	r23
    2986:	d1 f7       	brne	.-12     	; 0x297c <lea_init+0x996>
    2988:	8c 28       	or	r8, r12
    298a:	9d 28       	or	r9, r13
    298c:	ae 28       	or	r10, r14
    298e:	bf 28       	or	r11, r15
    2990:	a8 96       	adiw	r28, 0x28	; 40
    2992:	88 82       	st	Y, r8
    2994:	99 82       	std	Y+1, r9	; 0x01
    2996:	aa 82       	std	Y+2, r10	; 0x02
    2998:	bb 82       	std	Y+3, r11	; 0x03
    299a:	28 97       	sbiw	r28, 0x08	; 8
    299c:	88 82       	st	Y, r8
    299e:	99 82       	std	Y+1, r9	; 0x01
    29a0:	aa 82       	std	Y+2, r10	; 0x02
    29a2:	bb 82       	std	Y+3, r11	; 0x03
    29a4:	28 97       	sbiw	r28, 0x08	; 8
    29a6:	88 82       	st	Y, r8
    29a8:	99 82       	std	Y+1, r9	; 0x01
    29aa:	aa 82       	std	Y+2, r10	; 0x02
    29ac:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[109] = key->rk[111] = key->rk[113] = ROL(key->rk[103] + delta[2][19], 3);
    29ae:	8d ee       	ldi	r24, 0xED	; 237
    29b0:	88 1a       	sub	r8, r24
    29b2:	80 e3       	ldi	r24, 0x30	; 48
    29b4:	98 0a       	sbc	r9, r24
    29b6:	8c ea       	ldi	r24, 0xAC	; 172
    29b8:	a8 0a       	sbc	r10, r24
    29ba:	8b e1       	ldi	r24, 0x1B	; 27
    29bc:	b8 0a       	sbc	r11, r24
    29be:	75 01       	movw	r14, r10
    29c0:	64 01       	movw	r12, r8
    29c2:	1d e1       	ldi	r17, 0x1D	; 29
    29c4:	f6 94       	lsr	r15
    29c6:	e7 94       	ror	r14
    29c8:	d7 94       	ror	r13
    29ca:	c7 94       	ror	r12
    29cc:	1a 95       	dec	r17
    29ce:	d1 f7       	brne	.-12     	; 0x29c4 <lea_init+0x9de>
    29d0:	03 e0       	ldi	r16, 0x03	; 3
    29d2:	88 0c       	add	r8, r8
    29d4:	99 1c       	adc	r9, r9
    29d6:	aa 1c       	adc	r10, r10
    29d8:	bb 1c       	adc	r11, r11
    29da:	0a 95       	dec	r16
    29dc:	d1 f7       	brne	.-12     	; 0x29d2 <lea_init+0x9ec>
    29de:	8c 28       	or	r8, r12
    29e0:	9d 28       	or	r9, r13
    29e2:	ae 28       	or	r10, r14
    29e4:	bf 28       	or	r11, r15
    29e6:	a8 96       	adiw	r28, 0x28	; 40
    29e8:	88 82       	st	Y, r8
    29ea:	99 82       	std	Y+1, r9	; 0x01
    29ec:	aa 82       	std	Y+2, r10	; 0x02
    29ee:	bb 82       	std	Y+3, r11	; 0x03
    29f0:	28 97       	sbiw	r28, 0x08	; 8
    29f2:	88 82       	st	Y, r8
    29f4:	99 82       	std	Y+1, r9	; 0x01
    29f6:	aa 82       	std	Y+2, r10	; 0x02
    29f8:	bb 82       	std	Y+3, r11	; 0x03
    29fa:	28 97       	sbiw	r28, 0x08	; 8
    29fc:	88 82       	st	Y, r8
    29fe:	99 82       	std	Y+1, r9	; 0x01
    2a00:	aa 82       	std	Y+2, r10	; 0x02
    2a02:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[115] = key->rk[117] = key->rk[119] = ROL(key->rk[109] + delta[3][20], 3);
    2a04:	8d e0       	ldi	r24, 0x0D	; 13
    2a06:	88 1a       	sub	r8, r24
    2a08:	82 e7       	ldi	r24, 0x72	; 114
    2a0a:	98 0a       	sbc	r9, r24
    2a0c:	88 e3       	ldi	r24, 0x38	; 56
    2a0e:	a8 0a       	sbc	r10, r24
    2a10:	81 ef       	ldi	r24, 0xF1	; 241
    2a12:	b8 0a       	sbc	r11, r24
    2a14:	75 01       	movw	r14, r10
    2a16:	64 01       	movw	r12, r8
    2a18:	8d e1       	ldi	r24, 0x1D	; 29
    2a1a:	f6 94       	lsr	r15
    2a1c:	e7 94       	ror	r14
    2a1e:	d7 94       	ror	r13
    2a20:	c7 94       	ror	r12
    2a22:	8a 95       	dec	r24
    2a24:	d1 f7       	brne	.-12     	; 0x2a1a <lea_init+0xa34>
    2a26:	93 e0       	ldi	r25, 0x03	; 3
    2a28:	88 0c       	add	r8, r8
    2a2a:	99 1c       	adc	r9, r9
    2a2c:	aa 1c       	adc	r10, r10
    2a2e:	bb 1c       	adc	r11, r11
    2a30:	9a 95       	dec	r25
    2a32:	d1 f7       	brne	.-12     	; 0x2a28 <lea_init+0xa42>
    2a34:	8c 28       	or	r8, r12
    2a36:	9d 28       	or	r9, r13
    2a38:	ae 28       	or	r10, r14
    2a3a:	bf 28       	or	r11, r15
    2a3c:	a8 96       	adiw	r28, 0x28	; 40
    2a3e:	88 82       	st	Y, r8
    2a40:	99 82       	std	Y+1, r9	; 0x01
    2a42:	aa 82       	std	Y+2, r10	; 0x02
    2a44:	bb 82       	std	Y+3, r11	; 0x03
    2a46:	28 97       	sbiw	r28, 0x08	; 8
    2a48:	88 82       	st	Y, r8
    2a4a:	99 82       	std	Y+1, r9	; 0x01
    2a4c:	aa 82       	std	Y+2, r10	; 0x02
    2a4e:	bb 82       	std	Y+3, r11	; 0x03
    2a50:	28 97       	sbiw	r28, 0x08	; 8
    2a52:	88 82       	st	Y, r8
    2a54:	99 82       	std	Y+1, r9	; 0x01
    2a56:	aa 82       	std	Y+2, r10	; 0x02
    2a58:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[121] = key->rk[123] = key->rk[125] = ROL(key->rk[115] + delta[0][21], 3);
    2a5a:	83 e0       	ldi	r24, 0x03	; 3
    2a5c:	88 1a       	sub	r8, r24
    2a5e:	82 e8       	ldi	r24, 0x82	; 130
    2a60:	98 0a       	sbc	r9, r24
    2a62:	87 e8       	ldi	r24, 0x87	; 135
    2a64:	a8 0a       	sbc	r10, r24
    2a66:	84 ec       	ldi	r24, 0xC4	; 196
    2a68:	b8 0a       	sbc	r11, r24
    2a6a:	75 01       	movw	r14, r10
    2a6c:	64 01       	movw	r12, r8
    2a6e:	6d e1       	ldi	r22, 0x1D	; 29
    2a70:	f6 94       	lsr	r15
    2a72:	e7 94       	ror	r14
    2a74:	d7 94       	ror	r13
    2a76:	c7 94       	ror	r12
    2a78:	6a 95       	dec	r22
    2a7a:	d1 f7       	brne	.-12     	; 0x2a70 <lea_init+0xa8a>
    2a7c:	73 e0       	ldi	r23, 0x03	; 3
    2a7e:	88 0c       	add	r8, r8
    2a80:	99 1c       	adc	r9, r9
    2a82:	aa 1c       	adc	r10, r10
    2a84:	bb 1c       	adc	r11, r11
    2a86:	7a 95       	dec	r23
    2a88:	d1 f7       	brne	.-12     	; 0x2a7e <lea_init+0xa98>
    2a8a:	8c 28       	or	r8, r12
    2a8c:	9d 28       	or	r9, r13
    2a8e:	ae 28       	or	r10, r14
    2a90:	bf 28       	or	r11, r15
    2a92:	a8 96       	adiw	r28, 0x28	; 40
    2a94:	88 82       	st	Y, r8
    2a96:	99 82       	std	Y+1, r9	; 0x01
    2a98:	aa 82       	std	Y+2, r10	; 0x02
    2a9a:	bb 82       	std	Y+3, r11	; 0x03
    2a9c:	28 97       	sbiw	r28, 0x08	; 8
    2a9e:	88 82       	st	Y, r8
    2aa0:	99 82       	std	Y+1, r9	; 0x01
    2aa2:	aa 82       	std	Y+2, r10	; 0x02
    2aa4:	bb 82       	std	Y+3, r11	; 0x03
    2aa6:	28 97       	sbiw	r28, 0x08	; 8
    2aa8:	88 82       	st	Y, r8
    2aaa:	99 82       	std	Y+1, r9	; 0x01
    2aac:	aa 82       	std	Y+2, r10	; 0x02
    2aae:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[127] = key->rk[129] = key->rk[131] = ROL(key->rk[121] + delta[1][22], 3);
    2ab0:	86 e6       	ldi	r24, 0x66	; 102
    2ab2:	88 1a       	sub	r8, r24
    2ab4:	87 ee       	ldi	r24, 0xE7	; 231
    2ab6:	98 0a       	sbc	r9, r24
    2ab8:	8e e6       	ldi	r24, 0x6E	; 110
    2aba:	a8 0a       	sbc	r10, r24
    2abc:	8f e3       	ldi	r24, 0x3F	; 63
    2abe:	b8 0a       	sbc	r11, r24
    2ac0:	75 01       	movw	r14, r10
    2ac2:	64 01       	movw	r12, r8
    2ac4:	1d e1       	ldi	r17, 0x1D	; 29
    2ac6:	f6 94       	lsr	r15
    2ac8:	e7 94       	ror	r14
    2aca:	d7 94       	ror	r13
    2acc:	c7 94       	ror	r12
    2ace:	1a 95       	dec	r17
    2ad0:	d1 f7       	brne	.-12     	; 0x2ac6 <lea_init+0xae0>
    2ad2:	03 e0       	ldi	r16, 0x03	; 3
    2ad4:	88 0c       	add	r8, r8
    2ad6:	99 1c       	adc	r9, r9
    2ad8:	aa 1c       	adc	r10, r10
    2ada:	bb 1c       	adc	r11, r11
    2adc:	0a 95       	dec	r16
    2ade:	d1 f7       	brne	.-12     	; 0x2ad4 <lea_init+0xaee>
    2ae0:	8c 28       	or	r8, r12
    2ae2:	9d 28       	or	r9, r13
    2ae4:	ae 28       	or	r10, r14
    2ae6:	bf 28       	or	r11, r15
    2ae8:	a8 96       	adiw	r28, 0x28	; 40
    2aea:	88 82       	st	Y, r8
    2aec:	99 82       	std	Y+1, r9	; 0x01
    2aee:	aa 82       	std	Y+2, r10	; 0x02
    2af0:	bb 82       	std	Y+3, r11	; 0x03
    2af2:	28 97       	sbiw	r28, 0x08	; 8
    2af4:	88 82       	st	Y, r8
    2af6:	99 82       	std	Y+1, r9	; 0x01
    2af8:	aa 82       	std	Y+2, r10	; 0x02
    2afa:	bb 82       	std	Y+3, r11	; 0x03
    2afc:	28 97       	sbiw	r28, 0x08	; 8
    2afe:	88 82       	st	Y, r8
    2b00:	99 82       	std	Y+1, r9	; 0x01
    2b02:	aa 82       	std	Y+2, r10	; 0x02
    2b04:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[133] = key->rk[135] = key->rk[137] = ROL(key->rk[127] + delta[2][23], 3);
    2b06:	82 ec       	ldi	r24, 0xC2	; 194
    2b08:	88 1a       	sub	r8, r24
    2b0a:	8e e0       	ldi	r24, 0x0E	; 14
    2b0c:	98 0a       	sbc	r9, r24
    2b0e:	83 ec       	ldi	r24, 0xC3	; 195
    2b10:	a8 0a       	sbc	r10, r24
    2b12:	8a eb       	ldi	r24, 0xBA	; 186
    2b14:	b8 0a       	sbc	r11, r24
    2b16:	75 01       	movw	r14, r10
    2b18:	64 01       	movw	r12, r8
    2b1a:	8d e1       	ldi	r24, 0x1D	; 29
    2b1c:	f6 94       	lsr	r15
    2b1e:	e7 94       	ror	r14
    2b20:	d7 94       	ror	r13
    2b22:	c7 94       	ror	r12
    2b24:	8a 95       	dec	r24
    2b26:	d1 f7       	brne	.-12     	; 0x2b1c <lea_init+0xb36>
    2b28:	93 e0       	ldi	r25, 0x03	; 3
    2b2a:	88 0c       	add	r8, r8
    2b2c:	99 1c       	adc	r9, r9
    2b2e:	aa 1c       	adc	r10, r10
    2b30:	bb 1c       	adc	r11, r11
    2b32:	9a 95       	dec	r25
    2b34:	d1 f7       	brne	.-12     	; 0x2b2a <lea_init+0xb44>
    2b36:	8c 28       	or	r8, r12
    2b38:	9d 28       	or	r9, r13
    2b3a:	ae 28       	or	r10, r14
    2b3c:	bf 28       	or	r11, r15
    2b3e:	a8 96       	adiw	r28, 0x28	; 40
    2b40:	88 82       	st	Y, r8
    2b42:	99 82       	std	Y+1, r9	; 0x01
    2b44:	aa 82       	std	Y+2, r10	; 0x02
    2b46:	bb 82       	std	Y+3, r11	; 0x03
    2b48:	28 97       	sbiw	r28, 0x08	; 8
    2b4a:	88 82       	st	Y, r8
    2b4c:	99 82       	std	Y+1, r9	; 0x01
    2b4e:	aa 82       	std	Y+2, r10	; 0x02
    2b50:	bb 82       	std	Y+3, r11	; 0x03
    2b52:	28 97       	sbiw	r28, 0x08	; 8
    2b54:	88 82       	st	Y, r8
    2b56:	99 82       	std	Y+1, r9	; 0x01
    2b58:	aa 82       	std	Y+2, r10	; 0x02
    2b5a:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[139] = key->rk[141] = key->rk[143] = ROL(key->rk[133] + delta[3][24], 3);
    2b5c:	80 ed       	ldi	r24, 0xD0	; 208
    2b5e:	88 1a       	sub	r8, r24
    2b60:	80 e2       	ldi	r24, 0x20	; 32
    2b62:	98 0a       	sbc	r9, r24
    2b64:	87 e8       	ldi	r24, 0x87	; 135
    2b66:	a8 0a       	sbc	r10, r24
    2b68:	83 e1       	ldi	r24, 0x13	; 19
    2b6a:	b8 0a       	sbc	r11, r24
    2b6c:	75 01       	movw	r14, r10
    2b6e:	64 01       	movw	r12, r8
    2b70:	6d e1       	ldi	r22, 0x1D	; 29
    2b72:	f6 94       	lsr	r15
    2b74:	e7 94       	ror	r14
    2b76:	d7 94       	ror	r13
    2b78:	c7 94       	ror	r12
    2b7a:	6a 95       	dec	r22
    2b7c:	d1 f7       	brne	.-12     	; 0x2b72 <lea_init+0xb8c>
    2b7e:	73 e0       	ldi	r23, 0x03	; 3
    2b80:	88 0c       	add	r8, r8
    2b82:	99 1c       	adc	r9, r9
    2b84:	aa 1c       	adc	r10, r10
    2b86:	bb 1c       	adc	r11, r11
    2b88:	7a 95       	dec	r23
    2b8a:	d1 f7       	brne	.-12     	; 0x2b80 <lea_init+0xb9a>
    2b8c:	8c 28       	or	r8, r12
    2b8e:	9d 28       	or	r9, r13
    2b90:	ae 28       	or	r10, r14
    2b92:	bf 28       	or	r11, r15
    2b94:	a8 96       	adiw	r28, 0x28	; 40
    2b96:	88 82       	st	Y, r8
    2b98:	99 82       	std	Y+1, r9	; 0x01
    2b9a:	aa 82       	std	Y+2, r10	; 0x02
    2b9c:	bb 82       	std	Y+3, r11	; 0x03
    2b9e:	28 97       	sbiw	r28, 0x08	; 8
    2ba0:	88 82       	st	Y, r8
    2ba2:	99 82       	std	Y+1, r9	; 0x01
    2ba4:	aa 82       	std	Y+2, r10	; 0x02
    2ba6:	bb 82       	std	Y+3, r11	; 0x03
    2ba8:	28 97       	sbiw	r28, 0x08	; 8
    2baa:	88 82       	st	Y, r8
    2bac:	99 82       	std	Y+1, r9	; 0x01
    2bae:	aa 82       	std	Y+2, r10	; 0x02
    2bb0:	bb 82       	std	Y+3, r11	; 0x03

		key->rk[  2] = ROL(loadU32(_mk[2]) + delta[0][ 2], 6);
    2bb2:	18 96       	adiw	r26, 0x08	; 8
    2bb4:	8d 90       	ld	r8, X+
    2bb6:	9d 90       	ld	r9, X+
    2bb8:	ad 90       	ld	r10, X+
    2bba:	bc 90       	ld	r11, X
    2bbc:	1b 97       	sbiw	r26, 0x0b	; 11
    2bbe:	81 e9       	ldi	r24, 0x91	; 145
    2bc0:	88 1a       	sub	r8, r24
    2bc2:	88 e5       	ldi	r24, 0x58	; 88
    2bc4:	98 0a       	sbc	r9, r24
    2bc6:	80 e4       	ldi	r24, 0x40	; 64
    2bc8:	a8 0a       	sbc	r10, r24
    2bca:	80 ef       	ldi	r24, 0xF0	; 240
    2bcc:	b8 0a       	sbc	r11, r24
    2bce:	75 01       	movw	r14, r10
    2bd0:	64 01       	movw	r12, r8
    2bd2:	1a e1       	ldi	r17, 0x1A	; 26
    2bd4:	f6 94       	lsr	r15
    2bd6:	e7 94       	ror	r14
    2bd8:	d7 94       	ror	r13
    2bda:	c7 94       	ror	r12
    2bdc:	1a 95       	dec	r17
    2bde:	d1 f7       	brne	.-12     	; 0x2bd4 <lea_init+0xbee>
    2be0:	06 e0       	ldi	r16, 0x06	; 6
    2be2:	88 0c       	add	r8, r8
    2be4:	99 1c       	adc	r9, r9
    2be6:	aa 1c       	adc	r10, r10
    2be8:	bb 1c       	adc	r11, r11
    2bea:	0a 95       	dec	r16
    2bec:	d1 f7       	brne	.-12     	; 0x2be2 <lea_init+0xbfc>
    2bee:	8c 28       	or	r8, r12
    2bf0:	9d 28       	or	r9, r13
    2bf2:	ae 28       	or	r10, r14
    2bf4:	bf 28       	or	r11, r15
    2bf6:	80 86       	std	Z+8, r8	; 0x08
    2bf8:	91 86       	std	Z+9, r9	; 0x09
    2bfa:	a2 86       	std	Z+10, r10	; 0x0a
    2bfc:	b3 86       	std	Z+11, r11	; 0x0b
		key->rk[  8] = ROL(key->rk[  2] + delta[1][ 3], 6);
    2bfe:	8e ee       	ldi	r24, 0xEE	; 238
    2c00:	88 1a       	sub	r8, r24
    2c02:	87 ea       	ldi	r24, 0xA7	; 167
    2c04:	98 0a       	sbc	r9, r24
    2c06:	8c ee       	ldi	r24, 0xEC	; 236
    2c08:	a8 0a       	sbc	r10, r24
    2c0a:	8c ed       	ldi	r24, 0xDC	; 220
    2c0c:	b8 0a       	sbc	r11, r24
    2c0e:	75 01       	movw	r14, r10
    2c10:	64 01       	movw	r12, r8
    2c12:	8a e1       	ldi	r24, 0x1A	; 26
    2c14:	f6 94       	lsr	r15
    2c16:	e7 94       	ror	r14
    2c18:	d7 94       	ror	r13
    2c1a:	c7 94       	ror	r12
    2c1c:	8a 95       	dec	r24
    2c1e:	d1 f7       	brne	.-12     	; 0x2c14 <lea_init+0xc2e>
    2c20:	96 e0       	ldi	r25, 0x06	; 6
    2c22:	88 0c       	add	r8, r8
    2c24:	99 1c       	adc	r9, r9
    2c26:	aa 1c       	adc	r10, r10
    2c28:	bb 1c       	adc	r11, r11
    2c2a:	9a 95       	dec	r25
    2c2c:	d1 f7       	brne	.-12     	; 0x2c22 <lea_init+0xc3c>
    2c2e:	8c 28       	or	r8, r12
    2c30:	9d 28       	or	r9, r13
    2c32:	ae 28       	or	r10, r14
    2c34:	bf 28       	or	r11, r15
    2c36:	80 a2       	std	Z+32, r8	; 0x20
    2c38:	91 a2       	std	Z+33, r9	; 0x21
    2c3a:	a2 a2       	std	Z+34, r10	; 0x22
    2c3c:	b3 a2       	std	Z+35, r11	; 0x23
		key->rk[ 14] = ROL(key->rk[  8] + delta[2][ 4], 6);
    2c3e:	89 e5       	ldi	r24, 0x59	; 89
    2c40:	88 1a       	sub	r8, r24
    2c42:	87 e3       	ldi	r24, 0x37	; 55
    2c44:	98 0a       	sbc	r9, r24
    2c46:	88 ed       	ldi	r24, 0xD8	; 216
    2c48:	a8 0a       	sbc	r10, r24
    2c4a:	81 e6       	ldi	r24, 0x61	; 97
    2c4c:	b8 0a       	sbc	r11, r24
    2c4e:	75 01       	movw	r14, r10
    2c50:	64 01       	movw	r12, r8
    2c52:	6a e1       	ldi	r22, 0x1A	; 26
    2c54:	f6 94       	lsr	r15
    2c56:	e7 94       	ror	r14
    2c58:	d7 94       	ror	r13
    2c5a:	c7 94       	ror	r12
    2c5c:	6a 95       	dec	r22
    2c5e:	d1 f7       	brne	.-12     	; 0x2c54 <lea_init+0xc6e>
    2c60:	76 e0       	ldi	r23, 0x06	; 6
    2c62:	88 0c       	add	r8, r8
    2c64:	99 1c       	adc	r9, r9
    2c66:	aa 1c       	adc	r10, r10
    2c68:	bb 1c       	adc	r11, r11
    2c6a:	7a 95       	dec	r23
    2c6c:	d1 f7       	brne	.-12     	; 0x2c62 <lea_init+0xc7c>
    2c6e:	8c 28       	or	r8, r12
    2c70:	9d 28       	or	r9, r13
    2c72:	ae 28       	or	r10, r14
    2c74:	bf 28       	or	r11, r15
    2c76:	80 ae       	std	Z+56, r8	; 0x38
    2c78:	91 ae       	std	Z+57, r9	; 0x39
    2c7a:	a2 ae       	std	Z+58, r10	; 0x3a
    2c7c:	b3 ae       	std	Z+59, r11	; 0x3b
		key->rk[ 20] = ROL(key->rk[ 14] + delta[3][ 5], 6);
    2c7e:	81 e7       	ldi	r24, 0x71	; 113
    2c80:	88 1a       	sub	r8, r24
    2c82:	82 ee       	ldi	r24, 0xE2	; 226
    2c84:	98 0a       	sbc	r9, r24
    2c86:	89 e1       	ldi	r24, 0x19	; 25
    2c88:	a8 0a       	sbc	r10, r24
    2c8a:	84 ee       	ldi	r24, 0xE4	; 228
    2c8c:	b8 0a       	sbc	r11, r24
    2c8e:	75 01       	movw	r14, r10
    2c90:	64 01       	movw	r12, r8
    2c92:	1a e1       	ldi	r17, 0x1A	; 26
    2c94:	f6 94       	lsr	r15
    2c96:	e7 94       	ror	r14
    2c98:	d7 94       	ror	r13
    2c9a:	c7 94       	ror	r12
    2c9c:	1a 95       	dec	r17
    2c9e:	d1 f7       	brne	.-12     	; 0x2c94 <lea_init+0xcae>
    2ca0:	06 e0       	ldi	r16, 0x06	; 6
    2ca2:	88 0c       	add	r8, r8
    2ca4:	99 1c       	adc	r9, r9
    2ca6:	aa 1c       	adc	r10, r10
    2ca8:	bb 1c       	adc	r11, r11
    2caa:	0a 95       	dec	r16
    2cac:	d1 f7       	brne	.-12     	; 0x2ca2 <lea_init+0xcbc>
    2cae:	8c 28       	or	r8, r12
    2cb0:	9d 28       	or	r9, r13
    2cb2:	ae 28       	or	r10, r14
    2cb4:	bf 28       	or	r11, r15
    2cb6:	cc 5d       	subi	r28, 0xDC	; 220
    2cb8:	d1 40       	sbci	r29, 0x01	; 1
    2cba:	88 82       	st	Y, r8
    2cbc:	99 82       	std	Y+1, r9	; 0x01
    2cbe:	aa 82       	std	Y+2, r10	; 0x02
    2cc0:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 26] = ROL(key->rk[ 20] + delta[0][ 6], 6);
    2cc2:	80 e1       	ldi	r24, 0x10	; 16
    2cc4:	88 1a       	sub	r8, r24
    2cc6:	89 e8       	ldi	r24, 0x89	; 137
    2cc8:	98 0a       	sbc	r9, r24
    2cca:	85 e0       	ldi	r24, 0x05	; 5
    2ccc:	a8 0a       	sbc	r10, r24
    2cce:	84 e0       	ldi	r24, 0x04	; 4
    2cd0:	b8 0a       	sbc	r11, r24
    2cd2:	75 01       	movw	r14, r10
    2cd4:	64 01       	movw	r12, r8
    2cd6:	8a e1       	ldi	r24, 0x1A	; 26
    2cd8:	f6 94       	lsr	r15
    2cda:	e7 94       	ror	r14
    2cdc:	d7 94       	ror	r13
    2cde:	c7 94       	ror	r12
    2ce0:	8a 95       	dec	r24
    2ce2:	d1 f7       	brne	.-12     	; 0x2cd8 <lea_init+0xcf2>
    2ce4:	96 e0       	ldi	r25, 0x06	; 6
    2ce6:	88 0c       	add	r8, r8
    2ce8:	99 1c       	adc	r9, r9
    2cea:	aa 1c       	adc	r10, r10
    2cec:	bb 1c       	adc	r11, r11
    2cee:	9a 95       	dec	r25
    2cf0:	d1 f7       	brne	.-12     	; 0x2ce6 <lea_init+0xd00>
    2cf2:	8c 28       	or	r8, r12
    2cf4:	9d 28       	or	r9, r13
    2cf6:	ae 28       	or	r10, r14
    2cf8:	bf 28       	or	r11, r15
    2cfa:	68 96       	adiw	r28, 0x18	; 24
    2cfc:	88 82       	st	Y, r8
    2cfe:	99 82       	std	Y+1, r9	; 0x01
    2d00:	aa 82       	std	Y+2, r10	; 0x02
    2d02:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 32] = ROL(key->rk[ 26] + delta[1][ 7], 6);
    2d04:	8e ed       	ldi	r24, 0xDE	; 222
    2d06:	88 1a       	sub	r8, r24
    2d08:	8e e7       	ldi	r24, 0x7E	; 126
    2d0a:	98 0a       	sbc	r9, r24
    2d0c:	8a ec       	ldi	r24, 0xCA	; 202
    2d0e:	a8 0a       	sbc	r10, r24
    2d10:	8e ec       	ldi	r24, 0xCE	; 206
    2d12:	b8 0a       	sbc	r11, r24
    2d14:	75 01       	movw	r14, r10
    2d16:	64 01       	movw	r12, r8
    2d18:	6a e1       	ldi	r22, 0x1A	; 26
    2d1a:	f6 94       	lsr	r15
    2d1c:	e7 94       	ror	r14
    2d1e:	d7 94       	ror	r13
    2d20:	c7 94       	ror	r12
    2d22:	6a 95       	dec	r22
    2d24:	d1 f7       	brne	.-12     	; 0x2d1a <lea_init+0xd34>
    2d26:	76 e0       	ldi	r23, 0x06	; 6
    2d28:	88 0c       	add	r8, r8
    2d2a:	99 1c       	adc	r9, r9
    2d2c:	aa 1c       	adc	r10, r10
    2d2e:	bb 1c       	adc	r11, r11
    2d30:	7a 95       	dec	r23
    2d32:	d1 f7       	brne	.-12     	; 0x2d28 <lea_init+0xd42>
    2d34:	8c 28       	or	r8, r12
    2d36:	9d 28       	or	r9, r13
    2d38:	ae 28       	or	r10, r14
    2d3a:	bf 28       	or	r11, r15
    2d3c:	68 96       	adiw	r28, 0x18	; 24
    2d3e:	88 82       	st	Y, r8
    2d40:	99 82       	std	Y+1, r9	; 0x01
    2d42:	aa 82       	std	Y+2, r10	; 0x02
    2d44:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 38] = ROL(key->rk[ 32] + delta[2][ 8], 6);
    2d46:	87 e8       	ldi	r24, 0x87	; 135
    2d48:	88 1a       	sub	r8, r24
    2d4a:	85 e7       	ldi	r24, 0x75	; 117
    2d4c:	98 0a       	sbc	r9, r24
    2d4e:	83 e8       	ldi	r24, 0x83	; 131
    2d50:	a8 0a       	sbc	r10, r24
    2d52:	8d e1       	ldi	r24, 0x1D	; 29
    2d54:	b8 0a       	sbc	r11, r24
    2d56:	75 01       	movw	r14, r10
    2d58:	64 01       	movw	r12, r8
    2d5a:	1a e1       	ldi	r17, 0x1A	; 26
    2d5c:	f6 94       	lsr	r15
    2d5e:	e7 94       	ror	r14
    2d60:	d7 94       	ror	r13
    2d62:	c7 94       	ror	r12
    2d64:	1a 95       	dec	r17
    2d66:	d1 f7       	brne	.-12     	; 0x2d5c <lea_init+0xd76>
    2d68:	06 e0       	ldi	r16, 0x06	; 6
    2d6a:	88 0c       	add	r8, r8
    2d6c:	99 1c       	adc	r9, r9
    2d6e:	aa 1c       	adc	r10, r10
    2d70:	bb 1c       	adc	r11, r11
    2d72:	0a 95       	dec	r16
    2d74:	d1 f7       	brne	.-12     	; 0x2d6a <lea_init+0xd84>
    2d76:	8c 28       	or	r8, r12
    2d78:	9d 28       	or	r9, r13
    2d7a:	ae 28       	or	r10, r14
    2d7c:	bf 28       	or	r11, r15
    2d7e:	68 96       	adiw	r28, 0x18	; 24
    2d80:	88 82       	st	Y, r8
    2d82:	99 82       	std	Y+1, r9	; 0x01
    2d84:	aa 82       	std	Y+2, r10	; 0x02
    2d86:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 44] = ROL(key->rk[ 38] + delta[3][ 9], 6);
    2d88:	8f e0       	ldi	r24, 0x0F	; 15
    2d8a:	88 1a       	sub	r8, r24
    2d8c:	87 e2       	ldi	r24, 0x27	; 39
    2d8e:	98 0a       	sbc	r9, r24
    2d90:	8e e9       	ldi	r24, 0x9E	; 158
    2d92:	a8 0a       	sbc	r10, r24
    2d94:	81 e4       	ldi	r24, 0x41	; 65
    2d96:	b8 0a       	sbc	r11, r24
    2d98:	75 01       	movw	r14, r10
    2d9a:	64 01       	movw	r12, r8
    2d9c:	8a e1       	ldi	r24, 0x1A	; 26
    2d9e:	f6 94       	lsr	r15
    2da0:	e7 94       	ror	r14
    2da2:	d7 94       	ror	r13
    2da4:	c7 94       	ror	r12
    2da6:	8a 95       	dec	r24
    2da8:	d1 f7       	brne	.-12     	; 0x2d9e <lea_init+0xdb8>
    2daa:	96 e0       	ldi	r25, 0x06	; 6
    2dac:	88 0c       	add	r8, r8
    2dae:	99 1c       	adc	r9, r9
    2db0:	aa 1c       	adc	r10, r10
    2db2:	bb 1c       	adc	r11, r11
    2db4:	9a 95       	dec	r25
    2db6:	d1 f7       	brne	.-12     	; 0x2dac <lea_init+0xdc6>
    2db8:	8c 28       	or	r8, r12
    2dba:	9d 28       	or	r9, r13
    2dbc:	ae 28       	or	r10, r14
    2dbe:	bf 28       	or	r11, r15
    2dc0:	68 96       	adiw	r28, 0x18	; 24
    2dc2:	88 82       	st	Y, r8
    2dc4:	99 82       	std	Y+1, r9	; 0x01
    2dc6:	aa 82       	std	Y+2, r10	; 0x02
    2dc8:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 50] = ROL(key->rk[ 44] + delta[0][10], 6);
    2dca:	81 ef       	ldi	r24, 0xF1	; 241
    2dcc:	88 1a       	sub	r8, r24
    2dce:	80 e9       	ldi	r24, 0x90	; 144
    2dd0:	98 0a       	sbc	r9, r24
    2dd2:	88 e5       	ldi	r24, 0x58	; 88
    2dd4:	a8 0a       	sbc	r10, r24
    2dd6:	80 e4       	ldi	r24, 0x40	; 64
    2dd8:	b8 0a       	sbc	r11, r24
    2dda:	75 01       	movw	r14, r10
    2ddc:	64 01       	movw	r12, r8
    2dde:	6a e1       	ldi	r22, 0x1A	; 26
    2de0:	f6 94       	lsr	r15
    2de2:	e7 94       	ror	r14
    2de4:	d7 94       	ror	r13
    2de6:	c7 94       	ror	r12
    2de8:	6a 95       	dec	r22
    2dea:	d1 f7       	brne	.-12     	; 0x2de0 <lea_init+0xdfa>
    2dec:	76 e0       	ldi	r23, 0x06	; 6
    2dee:	88 0c       	add	r8, r8
    2df0:	99 1c       	adc	r9, r9
    2df2:	aa 1c       	adc	r10, r10
    2df4:	bb 1c       	adc	r11, r11
    2df6:	7a 95       	dec	r23
    2df8:	d1 f7       	brne	.-12     	; 0x2dee <lea_init+0xe08>
    2dfa:	8c 28       	or	r8, r12
    2dfc:	9d 28       	or	r9, r13
    2dfe:	ae 28       	or	r10, r14
    2e00:	bf 28       	or	r11, r15
    2e02:	68 96       	adiw	r28, 0x18	; 24
    2e04:	88 82       	st	Y, r8
    2e06:	99 82       	std	Y+1, r9	; 0x01
    2e08:	aa 82       	std	Y+2, r10	; 0x02
    2e0a:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 56] = ROL(key->rk[ 50] + delta[1][11], 6);
    2e0c:	8d ed       	ldi	r24, 0xDD	; 221
    2e0e:	88 1a       	sub	r8, r24
    2e10:	8d ee       	ldi	r24, 0xED	; 237
    2e12:	98 0a       	sbc	r9, r24
    2e14:	87 ea       	ldi	r24, 0xA7	; 167
    2e16:	a8 0a       	sbc	r10, r24
    2e18:	8c ee       	ldi	r24, 0xEC	; 236
    2e1a:	b8 0a       	sbc	r11, r24
    2e1c:	75 01       	movw	r14, r10
    2e1e:	64 01       	movw	r12, r8
    2e20:	1a e1       	ldi	r17, 0x1A	; 26
    2e22:	f6 94       	lsr	r15
    2e24:	e7 94       	ror	r14
    2e26:	d7 94       	ror	r13
    2e28:	c7 94       	ror	r12
    2e2a:	1a 95       	dec	r17
    2e2c:	d1 f7       	brne	.-12     	; 0x2e22 <lea_init+0xe3c>
    2e2e:	06 e0       	ldi	r16, 0x06	; 6
    2e30:	88 0c       	add	r8, r8
    2e32:	99 1c       	adc	r9, r9
    2e34:	aa 1c       	adc	r10, r10
    2e36:	bb 1c       	adc	r11, r11
    2e38:	0a 95       	dec	r16
    2e3a:	d1 f7       	brne	.-12     	; 0x2e30 <lea_init+0xe4a>
    2e3c:	8c 28       	or	r8, r12
    2e3e:	9d 28       	or	r9, r13
    2e40:	ae 28       	or	r10, r14
    2e42:	bf 28       	or	r11, r15
    2e44:	68 96       	adiw	r28, 0x18	; 24
    2e46:	88 82       	st	Y, r8
    2e48:	99 82       	std	Y+1, r9	; 0x01
    2e4a:	aa 82       	std	Y+2, r10	; 0x02
    2e4c:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 62] = ROL(key->rk[ 56] + delta[2][12], 6);
    2e4e:	82 e6       	ldi	r24, 0x62	; 98
    2e50:	88 1a       	sub	r8, r24
    2e52:	88 e5       	ldi	r24, 0x58	; 88
    2e54:	98 0a       	sbc	r9, r24
    2e56:	87 e3       	ldi	r24, 0x37	; 55
    2e58:	a8 0a       	sbc	r10, r24
    2e5a:	88 ed       	ldi	r24, 0xD8	; 216
    2e5c:	b8 0a       	sbc	r11, r24
    2e5e:	75 01       	movw	r14, r10
    2e60:	64 01       	movw	r12, r8
    2e62:	8a e1       	ldi	r24, 0x1A	; 26
    2e64:	f6 94       	lsr	r15
    2e66:	e7 94       	ror	r14
    2e68:	d7 94       	ror	r13
    2e6a:	c7 94       	ror	r12
    2e6c:	8a 95       	dec	r24
    2e6e:	d1 f7       	brne	.-12     	; 0x2e64 <lea_init+0xe7e>
    2e70:	96 e0       	ldi	r25, 0x06	; 6
    2e72:	88 0c       	add	r8, r8
    2e74:	99 1c       	adc	r9, r9
    2e76:	aa 1c       	adc	r10, r10
    2e78:	bb 1c       	adc	r11, r11
    2e7a:	9a 95       	dec	r25
    2e7c:	d1 f7       	brne	.-12     	; 0x2e72 <lea_init+0xe8c>
    2e7e:	8c 28       	or	r8, r12
    2e80:	9d 28       	or	r9, r13
    2e82:	ae 28       	or	r10, r14
    2e84:	bf 28       	or	r11, r15
    2e86:	68 96       	adiw	r28, 0x18	; 24
    2e88:	88 82       	st	Y, r8
    2e8a:	99 82       	std	Y+1, r9	; 0x01
    2e8c:	aa 82       	std	Y+2, r10	; 0x02
    2e8e:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 68] = ROL(key->rk[ 62] + delta[3][13], 6);
    2e90:	85 ee       	ldi	r24, 0xE5	; 229
    2e92:	88 1a       	sub	r8, r24
    2e94:	80 e7       	ldi	r24, 0x70	; 112
    2e96:	98 0a       	sbc	r9, r24
    2e98:	82 ee       	ldi	r24, 0xE2	; 226
    2e9a:	a8 0a       	sbc	r10, r24
    2e9c:	89 e1       	ldi	r24, 0x19	; 25
    2e9e:	b8 0a       	sbc	r11, r24
    2ea0:	75 01       	movw	r14, r10
    2ea2:	64 01       	movw	r12, r8
    2ea4:	6a e1       	ldi	r22, 0x1A	; 26
    2ea6:	f6 94       	lsr	r15
    2ea8:	e7 94       	ror	r14
    2eaa:	d7 94       	ror	r13
    2eac:	c7 94       	ror	r12
    2eae:	6a 95       	dec	r22
    2eb0:	d1 f7       	brne	.-12     	; 0x2ea6 <lea_init+0xec0>
    2eb2:	76 e0       	ldi	r23, 0x06	; 6
    2eb4:	88 0c       	add	r8, r8
    2eb6:	99 1c       	adc	r9, r9
    2eb8:	aa 1c       	adc	r10, r10
    2eba:	bb 1c       	adc	r11, r11
    2ebc:	7a 95       	dec	r23
    2ebe:	d1 f7       	brne	.-12     	; 0x2eb4 <lea_init+0xece>
    2ec0:	8c 28       	or	r8, r12
    2ec2:	9d 28       	or	r9, r13
    2ec4:	ae 28       	or	r10, r14
    2ec6:	bf 28       	or	r11, r15
    2ec8:	68 96       	adiw	r28, 0x18	; 24
    2eca:	88 82       	st	Y, r8
    2ecc:	99 82       	std	Y+1, r9	; 0x01
    2ece:	aa 82       	std	Y+2, r10	; 0x02
    2ed0:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 74] = ROL(key->rk[ 68] + delta[0][14], 6);
    2ed2:	85 e0       	ldi	r24, 0x05	; 5
    2ed4:	88 1a       	sub	r8, r24
    2ed6:	8f e0       	ldi	r24, 0x0F	; 15
    2ed8:	98 0a       	sbc	r9, r24
    2eda:	89 e8       	ldi	r24, 0x89	; 137
    2edc:	a8 0a       	sbc	r10, r24
    2ede:	85 e0       	ldi	r24, 0x05	; 5
    2ee0:	b8 0a       	sbc	r11, r24
    2ee2:	75 01       	movw	r14, r10
    2ee4:	64 01       	movw	r12, r8
    2ee6:	1a e1       	ldi	r17, 0x1A	; 26
    2ee8:	f6 94       	lsr	r15
    2eea:	e7 94       	ror	r14
    2eec:	d7 94       	ror	r13
    2eee:	c7 94       	ror	r12
    2ef0:	1a 95       	dec	r17
    2ef2:	d1 f7       	brne	.-12     	; 0x2ee8 <lea_init+0xf02>
    2ef4:	06 e0       	ldi	r16, 0x06	; 6
    2ef6:	88 0c       	add	r8, r8
    2ef8:	99 1c       	adc	r9, r9
    2efa:	aa 1c       	adc	r10, r10
    2efc:	bb 1c       	adc	r11, r11
    2efe:	0a 95       	dec	r16
    2f00:	d1 f7       	brne	.-12     	; 0x2ef6 <lea_init+0xf10>
    2f02:	8c 28       	or	r8, r12
    2f04:	9d 28       	or	r9, r13
    2f06:	ae 28       	or	r10, r14
    2f08:	bf 28       	or	r11, r15
    2f0a:	68 96       	adiw	r28, 0x18	; 24
    2f0c:	88 82       	st	Y, r8
    2f0e:	99 82       	std	Y+1, r9	; 0x01
    2f10:	aa 82       	std	Y+2, r10	; 0x02
    2f12:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 80] = ROL(key->rk[ 74] + delta[1][15], 6);
    2f14:	8f ec       	ldi	r24, 0xCF	; 207
    2f16:	88 1a       	sub	r8, r24
    2f18:	8d ed       	ldi	r24, 0xDD	; 221
    2f1a:	98 0a       	sbc	r9, r24
    2f1c:	8e e7       	ldi	r24, 0x7E	; 126
    2f1e:	a8 0a       	sbc	r10, r24
    2f20:	8a ec       	ldi	r24, 0xCA	; 202
    2f22:	b8 0a       	sbc	r11, r24
    2f24:	75 01       	movw	r14, r10
    2f26:	64 01       	movw	r12, r8
    2f28:	8a e1       	ldi	r24, 0x1A	; 26
    2f2a:	f6 94       	lsr	r15
    2f2c:	e7 94       	ror	r14
    2f2e:	d7 94       	ror	r13
    2f30:	c7 94       	ror	r12
    2f32:	8a 95       	dec	r24
    2f34:	d1 f7       	brne	.-12     	; 0x2f2a <lea_init+0xf44>
    2f36:	96 e0       	ldi	r25, 0x06	; 6
    2f38:	88 0c       	add	r8, r8
    2f3a:	99 1c       	adc	r9, r9
    2f3c:	aa 1c       	adc	r10, r10
    2f3e:	bb 1c       	adc	r11, r11
    2f40:	9a 95       	dec	r25
    2f42:	d1 f7       	brne	.-12     	; 0x2f38 <lea_init+0xf52>
    2f44:	8c 28       	or	r8, r12
    2f46:	9d 28       	or	r9, r13
    2f48:	ae 28       	or	r10, r14
    2f4a:	bf 28       	or	r11, r15
    2f4c:	68 96       	adiw	r28, 0x18	; 24
    2f4e:	88 82       	st	Y, r8
    2f50:	99 82       	std	Y+1, r9	; 0x01
    2f52:	aa 82       	std	Y+2, r10	; 0x02
    2f54:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 86] = ROL(key->rk[ 80] + delta[2][16], 6);
    2f56:	8e e1       	ldi	r24, 0x1E	; 30
    2f58:	88 1a       	sub	r8, r24
    2f5a:	86 e8       	ldi	r24, 0x86	; 134
    2f5c:	98 0a       	sbc	r9, r24
    2f5e:	85 e7       	ldi	r24, 0x75	; 117
    2f60:	a8 0a       	sbc	r10, r24
    2f62:	83 e8       	ldi	r24, 0x83	; 131
    2f64:	b8 0a       	sbc	r11, r24
    2f66:	75 01       	movw	r14, r10
    2f68:	64 01       	movw	r12, r8
    2f6a:	6a e1       	ldi	r22, 0x1A	; 26
    2f6c:	f6 94       	lsr	r15
    2f6e:	e7 94       	ror	r14
    2f70:	d7 94       	ror	r13
    2f72:	c7 94       	ror	r12
    2f74:	6a 95       	dec	r22
    2f76:	d1 f7       	brne	.-12     	; 0x2f6c <lea_init+0xf86>
    2f78:	76 e0       	ldi	r23, 0x06	; 6
    2f7a:	88 0c       	add	r8, r8
    2f7c:	99 1c       	adc	r9, r9
    2f7e:	aa 1c       	adc	r10, r10
    2f80:	bb 1c       	adc	r11, r11
    2f82:	7a 95       	dec	r23
    2f84:	d1 f7       	brne	.-12     	; 0x2f7a <lea_init+0xf94>
    2f86:	8c 28       	or	r8, r12
    2f88:	9d 28       	or	r9, r13
    2f8a:	ae 28       	or	r10, r14
    2f8c:	bf 28       	or	r11, r15
    2f8e:	68 96       	adiw	r28, 0x18	; 24
    2f90:	88 82       	st	Y, r8
    2f92:	99 82       	std	Y+1, r9	; 0x01
    2f94:	aa 82       	std	Y+2, r10	; 0x02
    2f96:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 92] = ROL(key->rk[ 86] + delta[3][17], 6);
    2f98:	82 e4       	ldi	r24, 0x42	; 66
    2f9a:	88 1a       	sub	r8, r24
    2f9c:	8e e0       	ldi	r24, 0x0E	; 14
    2f9e:	98 0a       	sbc	r9, r24
    2fa0:	87 e2       	ldi	r24, 0x27	; 39
    2fa2:	a8 0a       	sbc	r10, r24
    2fa4:	8e e9       	ldi	r24, 0x9E	; 158
    2fa6:	b8 0a       	sbc	r11, r24
    2fa8:	75 01       	movw	r14, r10
    2faa:	64 01       	movw	r12, r8
    2fac:	1a e1       	ldi	r17, 0x1A	; 26
    2fae:	f6 94       	lsr	r15
    2fb0:	e7 94       	ror	r14
    2fb2:	d7 94       	ror	r13
    2fb4:	c7 94       	ror	r12
    2fb6:	1a 95       	dec	r17
    2fb8:	d1 f7       	brne	.-12     	; 0x2fae <lea_init+0xfc8>
    2fba:	06 e0       	ldi	r16, 0x06	; 6
    2fbc:	88 0c       	add	r8, r8
    2fbe:	99 1c       	adc	r9, r9
    2fc0:	aa 1c       	adc	r10, r10
    2fc2:	bb 1c       	adc	r11, r11
    2fc4:	0a 95       	dec	r16
    2fc6:	d1 f7       	brne	.-12     	; 0x2fbc <lea_init+0xfd6>
    2fc8:	8c 28       	or	r8, r12
    2fca:	9d 28       	or	r9, r13
    2fcc:	ae 28       	or	r10, r14
    2fce:	bf 28       	or	r11, r15
    2fd0:	68 96       	adiw	r28, 0x18	; 24
    2fd2:	88 82       	st	Y, r8
    2fd4:	99 82       	std	Y+1, r9	; 0x01
    2fd6:	aa 82       	std	Y+2, r10	; 0x02
    2fd8:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 98] = ROL(key->rk[ 92] + delta[0][18], 6);
    2fda:	81 e4       	ldi	r24, 0x41	; 65
    2fdc:	88 1a       	sub	r8, r24
    2fde:	80 ef       	ldi	r24, 0xF0	; 240
    2fe0:	98 0a       	sbc	r9, r24
    2fe2:	80 e9       	ldi	r24, 0x90	; 144
    2fe4:	a8 0a       	sbc	r10, r24
    2fe6:	88 e5       	ldi	r24, 0x58	; 88
    2fe8:	b8 0a       	sbc	r11, r24
    2fea:	75 01       	movw	r14, r10
    2fec:	64 01       	movw	r12, r8
    2fee:	8a e1       	ldi	r24, 0x1A	; 26
    2ff0:	f6 94       	lsr	r15
    2ff2:	e7 94       	ror	r14
    2ff4:	d7 94       	ror	r13
    2ff6:	c7 94       	ror	r12
    2ff8:	8a 95       	dec	r24
    2ffa:	d1 f7       	brne	.-12     	; 0x2ff0 <lea_init+0x100a>
    2ffc:	96 e0       	ldi	r25, 0x06	; 6
    2ffe:	88 0c       	add	r8, r8
    3000:	99 1c       	adc	r9, r9
    3002:	aa 1c       	adc	r10, r10
    3004:	bb 1c       	adc	r11, r11
    3006:	9a 95       	dec	r25
    3008:	d1 f7       	brne	.-12     	; 0x2ffe <lea_init+0x1018>
    300a:	8c 28       	or	r8, r12
    300c:	9d 28       	or	r9, r13
    300e:	ae 28       	or	r10, r14
    3010:	bf 28       	or	r11, r15
    3012:	68 96       	adiw	r28, 0x18	; 24
    3014:	88 82       	st	Y, r8
    3016:	99 82       	std	Y+1, r9	; 0x01
    3018:	aa 82       	std	Y+2, r10	; 0x02
    301a:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[104] = ROL(key->rk[ 98] + delta[1][19], 6);
    301c:	8d ee       	ldi	r24, 0xED	; 237
    301e:	88 1a       	sub	r8, r24
    3020:	8c ed       	ldi	r24, 0xDC	; 220
    3022:	98 0a       	sbc	r9, r24
    3024:	8d ee       	ldi	r24, 0xED	; 237
    3026:	a8 0a       	sbc	r10, r24
    3028:	87 ea       	ldi	r24, 0xA7	; 167
    302a:	b8 0a       	sbc	r11, r24
    302c:	75 01       	movw	r14, r10
    302e:	64 01       	movw	r12, r8
    3030:	6a e1       	ldi	r22, 0x1A	; 26
    3032:	f6 94       	lsr	r15
    3034:	e7 94       	ror	r14
    3036:	d7 94       	ror	r13
    3038:	c7 94       	ror	r12
    303a:	6a 95       	dec	r22
    303c:	d1 f7       	brne	.-12     	; 0x3032 <lea_init+0x104c>
    303e:	76 e0       	ldi	r23, 0x06	; 6
    3040:	88 0c       	add	r8, r8
    3042:	99 1c       	adc	r9, r9
    3044:	aa 1c       	adc	r10, r10
    3046:	bb 1c       	adc	r11, r11
    3048:	7a 95       	dec	r23
    304a:	d1 f7       	brne	.-12     	; 0x3040 <lea_init+0x105a>
    304c:	8c 28       	or	r8, r12
    304e:	9d 28       	or	r9, r13
    3050:	ae 28       	or	r10, r14
    3052:	bf 28       	or	r11, r15
    3054:	68 96       	adiw	r28, 0x18	; 24
    3056:	88 82       	st	Y, r8
    3058:	99 82       	std	Y+1, r9	; 0x01
    305a:	aa 82       	std	Y+2, r10	; 0x02
    305c:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[110] = ROL(key->rk[104] + delta[2][20], 6);
    305e:	89 ed       	ldi	r24, 0xD9	; 217
    3060:	88 1a       	sub	r8, r24
    3062:	81 e6       	ldi	r24, 0x61	; 97
    3064:	98 0a       	sbc	r9, r24
    3066:	88 e5       	ldi	r24, 0x58	; 88
    3068:	a8 0a       	sbc	r10, r24
    306a:	87 e3       	ldi	r24, 0x37	; 55
    306c:	b8 0a       	sbc	r11, r24
    306e:	75 01       	movw	r14, r10
    3070:	64 01       	movw	r12, r8
    3072:	1a e1       	ldi	r17, 0x1A	; 26
    3074:	f6 94       	lsr	r15
    3076:	e7 94       	ror	r14
    3078:	d7 94       	ror	r13
    307a:	c7 94       	ror	r12
    307c:	1a 95       	dec	r17
    307e:	d1 f7       	brne	.-12     	; 0x3074 <lea_init+0x108e>
    3080:	06 e0       	ldi	r16, 0x06	; 6
    3082:	88 0c       	add	r8, r8
    3084:	99 1c       	adc	r9, r9
    3086:	aa 1c       	adc	r10, r10
    3088:	bb 1c       	adc	r11, r11
    308a:	0a 95       	dec	r16
    308c:	d1 f7       	brne	.-12     	; 0x3082 <lea_init+0x109c>
    308e:	8c 28       	or	r8, r12
    3090:	9d 28       	or	r9, r13
    3092:	ae 28       	or	r10, r14
    3094:	bf 28       	or	r11, r15
    3096:	68 96       	adiw	r28, 0x18	; 24
    3098:	88 82       	st	Y, r8
    309a:	99 82       	std	Y+1, r9	; 0x01
    309c:	aa 82       	std	Y+2, r10	; 0x02
    309e:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[116] = ROL(key->rk[110] + delta[3][21], 6);
    30a0:	8a e1       	ldi	r24, 0x1A	; 26
    30a2:	88 1a       	sub	r8, r24
    30a4:	84 ee       	ldi	r24, 0xE4	; 228
    30a6:	98 0a       	sbc	r9, r24
    30a8:	80 e7       	ldi	r24, 0x70	; 112
    30aa:	a8 0a       	sbc	r10, r24
    30ac:	82 ee       	ldi	r24, 0xE2	; 226
    30ae:	b8 0a       	sbc	r11, r24
    30b0:	75 01       	movw	r14, r10
    30b2:	64 01       	movw	r12, r8
    30b4:	8a e1       	ldi	r24, 0x1A	; 26
    30b6:	f6 94       	lsr	r15
    30b8:	e7 94       	ror	r14
    30ba:	d7 94       	ror	r13
    30bc:	c7 94       	ror	r12
    30be:	8a 95       	dec	r24
    30c0:	d1 f7       	brne	.-12     	; 0x30b6 <lea_init+0x10d0>
    30c2:	96 e0       	ldi	r25, 0x06	; 6
    30c4:	88 0c       	add	r8, r8
    30c6:	99 1c       	adc	r9, r9
    30c8:	aa 1c       	adc	r10, r10
    30ca:	bb 1c       	adc	r11, r11
    30cc:	9a 95       	dec	r25
    30ce:	d1 f7       	brne	.-12     	; 0x30c4 <lea_init+0x10de>
    30d0:	8c 28       	or	r8, r12
    30d2:	9d 28       	or	r9, r13
    30d4:	ae 28       	or	r10, r14
    30d6:	bf 28       	or	r11, r15
    30d8:	68 96       	adiw	r28, 0x18	; 24
    30da:	88 82       	st	Y, r8
    30dc:	99 82       	std	Y+1, r9	; 0x01
    30de:	aa 82       	std	Y+2, r10	; 0x02
    30e0:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[122] = ROL(key->rk[116] + delta[0][22], 6);
    30e2:	86 e0       	ldi	r24, 0x06	; 6
    30e4:	88 1a       	sub	r8, r24
    30e6:	84 e0       	ldi	r24, 0x04	; 4
    30e8:	98 0a       	sbc	r9, r24
    30ea:	8f e0       	ldi	r24, 0x0F	; 15
    30ec:	a8 0a       	sbc	r10, r24
    30ee:	89 e8       	ldi	r24, 0x89	; 137
    30f0:	b8 0a       	sbc	r11, r24
    30f2:	75 01       	movw	r14, r10
    30f4:	64 01       	movw	r12, r8
    30f6:	6a e1       	ldi	r22, 0x1A	; 26
    30f8:	f6 94       	lsr	r15
    30fa:	e7 94       	ror	r14
    30fc:	d7 94       	ror	r13
    30fe:	c7 94       	ror	r12
    3100:	6a 95       	dec	r22
    3102:	d1 f7       	brne	.-12     	; 0x30f8 <lea_init+0x1112>
    3104:	76 e0       	ldi	r23, 0x06	; 6
    3106:	88 0c       	add	r8, r8
    3108:	99 1c       	adc	r9, r9
    310a:	aa 1c       	adc	r10, r10
    310c:	bb 1c       	adc	r11, r11
    310e:	7a 95       	dec	r23
    3110:	d1 f7       	brne	.-12     	; 0x3106 <lea_init+0x1120>
    3112:	8c 28       	or	r8, r12
    3114:	9d 28       	or	r9, r13
    3116:	ae 28       	or	r10, r14
    3118:	bf 28       	or	r11, r15
    311a:	68 96       	adiw	r28, 0x18	; 24
    311c:	88 82       	st	Y, r8
    311e:	99 82       	std	Y+1, r9	; 0x01
    3120:	aa 82       	std	Y+2, r10	; 0x02
    3122:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[128] = ROL(key->rk[122] + delta[1][23], 6);
    3124:	8b ec       	ldi	r24, 0xCB	; 203
    3126:	88 1a       	sub	r8, r24
    3128:	8e ec       	ldi	r24, 0xCE	; 206
    312a:	98 0a       	sbc	r9, r24
    312c:	8d ed       	ldi	r24, 0xDD	; 221
    312e:	a8 0a       	sbc	r10, r24
    3130:	8e e7       	ldi	r24, 0x7E	; 126
    3132:	b8 0a       	sbc	r11, r24
    3134:	75 01       	movw	r14, r10
    3136:	64 01       	movw	r12, r8
    3138:	1a e1       	ldi	r17, 0x1A	; 26
    313a:	f6 94       	lsr	r15
    313c:	e7 94       	ror	r14
    313e:	d7 94       	ror	r13
    3140:	c7 94       	ror	r12
    3142:	1a 95       	dec	r17
    3144:	d1 f7       	brne	.-12     	; 0x313a <lea_init+0x1154>
    3146:	06 e0       	ldi	r16, 0x06	; 6
    3148:	88 0c       	add	r8, r8
    314a:	99 1c       	adc	r9, r9
    314c:	aa 1c       	adc	r10, r10
    314e:	bb 1c       	adc	r11, r11
    3150:	0a 95       	dec	r16
    3152:	d1 f7       	brne	.-12     	; 0x3148 <lea_init+0x1162>
    3154:	8c 28       	or	r8, r12
    3156:	9d 28       	or	r9, r13
    3158:	ae 28       	or	r10, r14
    315a:	bf 28       	or	r11, r15
    315c:	68 96       	adiw	r28, 0x18	; 24
    315e:	88 82       	st	Y, r8
    3160:	99 82       	std	Y+1, r9	; 0x01
    3162:	aa 82       	std	Y+2, r10	; 0x02
    3164:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[134] = ROL(key->rk[128] + delta[2][24], 6);
    3166:	84 e8       	ldi	r24, 0x84	; 132
    3168:	88 1a       	sub	r8, r24
    316a:	8d e1       	ldi	r24, 0x1D	; 29
    316c:	98 0a       	sbc	r9, r24
    316e:	86 e8       	ldi	r24, 0x86	; 134
    3170:	a8 0a       	sbc	r10, r24
    3172:	85 e7       	ldi	r24, 0x75	; 117
    3174:	b8 0a       	sbc	r11, r24
    3176:	75 01       	movw	r14, r10
    3178:	64 01       	movw	r12, r8
    317a:	8a e1       	ldi	r24, 0x1A	; 26
    317c:	f6 94       	lsr	r15
    317e:	e7 94       	ror	r14
    3180:	d7 94       	ror	r13
    3182:	c7 94       	ror	r12
    3184:	8a 95       	dec	r24
    3186:	d1 f7       	brne	.-12     	; 0x317c <lea_init+0x1196>
    3188:	96 e0       	ldi	r25, 0x06	; 6
    318a:	88 0c       	add	r8, r8
    318c:	99 1c       	adc	r9, r9
    318e:	aa 1c       	adc	r10, r10
    3190:	bb 1c       	adc	r11, r11
    3192:	9a 95       	dec	r25
    3194:	d1 f7       	brne	.-12     	; 0x318a <lea_init+0x11a4>
    3196:	8c 28       	or	r8, r12
    3198:	9d 28       	or	r9, r13
    319a:	ae 28       	or	r10, r14
    319c:	bf 28       	or	r11, r15
    319e:	68 96       	adiw	r28, 0x18	; 24
    31a0:	88 82       	st	Y, r8
    31a2:	99 82       	std	Y+1, r9	; 0x01
    31a4:	aa 82       	std	Y+2, r10	; 0x02
    31a6:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[140] = ROL(key->rk[134] + delta[3][25], 6);
    31a8:	8f e9       	ldi	r24, 0x9F	; 159
    31aa:	88 1a       	sub	r8, r24
    31ac:	81 e4       	ldi	r24, 0x41	; 65
    31ae:	98 0a       	sbc	r9, r24
    31b0:	8e e0       	ldi	r24, 0x0E	; 14
    31b2:	a8 0a       	sbc	r10, r24
    31b4:	87 e2       	ldi	r24, 0x27	; 39
    31b6:	b8 0a       	sbc	r11, r24
    31b8:	75 01       	movw	r14, r10
    31ba:	64 01       	movw	r12, r8
    31bc:	6a e1       	ldi	r22, 0x1A	; 26
    31be:	f6 94       	lsr	r15
    31c0:	e7 94       	ror	r14
    31c2:	d7 94       	ror	r13
    31c4:	c7 94       	ror	r12
    31c6:	6a 95       	dec	r22
    31c8:	d1 f7       	brne	.-12     	; 0x31be <lea_init+0x11d8>
    31ca:	76 e0       	ldi	r23, 0x06	; 6
    31cc:	88 0c       	add	r8, r8
    31ce:	99 1c       	adc	r9, r9
    31d0:	aa 1c       	adc	r10, r10
    31d2:	bb 1c       	adc	r11, r11
    31d4:	7a 95       	dec	r23
    31d6:	d1 f7       	brne	.-12     	; 0x31cc <lea_init+0x11e6>
    31d8:	c8 28       	or	r12, r8
    31da:	d9 28       	or	r13, r9
    31dc:	ea 28       	or	r14, r10
    31de:	fb 28       	or	r15, r11
    31e0:	68 96       	adiw	r28, 0x18	; 24
    31e2:	c8 82       	st	Y, r12
    31e4:	d9 82       	std	Y+1, r13	; 0x01
    31e6:	ea 82       	std	Y+2, r14	; 0x02
    31e8:	fb 82       	std	Y+3, r15	; 0x03

		key->rk[  4] = ROL(loadU32(_mk[3]) + delta[0][ 3], 11);
    31ea:	1c 96       	adiw	r26, 0x0c	; 12
    31ec:	8d 91       	ld	r24, X+
    31ee:	9d 91       	ld	r25, X+
    31f0:	0d 90       	ld	r0, X+
    31f2:	bc 91       	ld	r27, X
    31f4:	a0 2d       	mov	r26, r0
    31f6:	82 52       	subi	r24, 0x22	; 34
    31f8:	91 4b       	sbci	r25, 0xB1	; 177
    31fa:	a0 48       	sbci	r26, 0x80	; 128
    31fc:	b0 4e       	sbci	r27, 0xE0	; 224
    31fe:	6c 01       	movw	r12, r24
    3200:	7d 01       	movw	r14, r26
    3202:	15 e1       	ldi	r17, 0x15	; 21
    3204:	f6 94       	lsr	r15
    3206:	e7 94       	ror	r14
    3208:	d7 94       	ror	r13
    320a:	c7 94       	ror	r12
    320c:	1a 95       	dec	r17
    320e:	d1 f7       	brne	.-12     	; 0x3204 <lea_init+0x121e>
    3210:	0b e0       	ldi	r16, 0x0B	; 11
    3212:	88 0f       	add	r24, r24
    3214:	99 1f       	adc	r25, r25
    3216:	aa 1f       	adc	r26, r26
    3218:	bb 1f       	adc	r27, r27
    321a:	0a 95       	dec	r16
    321c:	d1 f7       	brne	.-12     	; 0x3212 <lea_init+0x122c>
    321e:	8c 29       	or	r24, r12
    3220:	9d 29       	or	r25, r13
    3222:	ae 29       	or	r26, r14
    3224:	bf 29       	or	r27, r15
    3226:	80 8b       	std	Z+16, r24	; 0x10
    3228:	91 8b       	std	Z+17, r25	; 0x11
    322a:	a2 8b       	std	Z+18, r26	; 0x12
    322c:	b3 8b       	std	Z+19, r27	; 0x13
		key->rk[ 10] = ROL(key->rk[  4] + delta[1][ 4], 11);
    322e:	8c 5d       	subi	r24, 0xDC	; 220
    3230:	9f 44       	sbci	r25, 0x4F	; 79
    3232:	a9 4d       	sbci	r26, 0xD9	; 217
    3234:	b9 4b       	sbci	r27, 0xB9	; 185
    3236:	6c 01       	movw	r12, r24
    3238:	7d 01       	movw	r14, r26
    323a:	65 e1       	ldi	r22, 0x15	; 21
    323c:	f6 94       	lsr	r15
    323e:	e7 94       	ror	r14
    3240:	d7 94       	ror	r13
    3242:	c7 94       	ror	r12
    3244:	6a 95       	dec	r22
    3246:	d1 f7       	brne	.-12     	; 0x323c <lea_init+0x1256>
    3248:	7b e0       	ldi	r23, 0x0B	; 11
    324a:	88 0f       	add	r24, r24
    324c:	99 1f       	adc	r25, r25
    324e:	aa 1f       	adc	r26, r26
    3250:	bb 1f       	adc	r27, r27
    3252:	7a 95       	dec	r23
    3254:	d1 f7       	brne	.-12     	; 0x324a <lea_init+0x1264>
    3256:	8c 29       	or	r24, r12
    3258:	9d 29       	or	r25, r13
    325a:	ae 29       	or	r26, r14
    325c:	bf 29       	or	r27, r15
    325e:	80 a7       	std	Z+40, r24	; 0x28
    3260:	91 a7       	std	Z+41, r25	; 0x29
    3262:	a2 a7       	std	Z+42, r26	; 0x2a
    3264:	b3 a7       	std	Z+43, r27	; 0x2b
		key->rk[ 16] = ROL(key->rk[ 10] + delta[2][ 5], 11);
    3266:	81 5b       	subi	r24, 0xB1	; 177
    3268:	9e 46       	sbci	r25, 0x6E	; 110
    326a:	a0 4b       	sbci	r26, 0xB0	; 176
    326c:	b3 4c       	sbci	r27, 0xC3	; 195
    326e:	6c 01       	movw	r12, r24
    3270:	7d 01       	movw	r14, r26
    3272:	15 e1       	ldi	r17, 0x15	; 21
    3274:	f6 94       	lsr	r15
    3276:	e7 94       	ror	r14
    3278:	d7 94       	ror	r13
    327a:	c7 94       	ror	r12
    327c:	1a 95       	dec	r17
    327e:	d1 f7       	brne	.-12     	; 0x3274 <lea_init+0x128e>
    3280:	0b e0       	ldi	r16, 0x0B	; 11
    3282:	88 0f       	add	r24, r24
    3284:	99 1f       	adc	r25, r25
    3286:	aa 1f       	adc	r26, r26
    3288:	bb 1f       	adc	r27, r27
    328a:	0a 95       	dec	r16
    328c:	d1 f7       	brne	.-12     	; 0x3282 <lea_init+0x129c>
    328e:	8c 29       	or	r24, r12
    3290:	9d 29       	or	r25, r13
    3292:	ae 29       	or	r26, r14
    3294:	bf 29       	or	r27, r15
    3296:	c0 5f       	subi	r28, 0xF0	; 240
    3298:	d1 40       	sbci	r29, 0x01	; 1
    329a:	88 83       	st	Y, r24
    329c:	99 83       	std	Y+1, r25	; 0x01
    329e:	aa 83       	std	Y+2, r26	; 0x02
    32a0:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[ 22] = ROL(key->rk[ 16] + delta[3][ 6], 11);
    32a2:	82 5e       	subi	r24, 0xE2	; 226
    32a4:	94 4c       	sbci	r25, 0xC4	; 196
    32a6:	a3 43       	sbci	r26, 0x33	; 51
    32a8:	b8 4c       	sbci	r27, 0xC8	; 200
    32aa:	6c 01       	movw	r12, r24
    32ac:	7d 01       	movw	r14, r26
    32ae:	65 e1       	ldi	r22, 0x15	; 21
    32b0:	f6 94       	lsr	r15
    32b2:	e7 94       	ror	r14
    32b4:	d7 94       	ror	r13
    32b6:	c7 94       	ror	r12
    32b8:	6a 95       	dec	r22
    32ba:	d1 f7       	brne	.-12     	; 0x32b0 <lea_init+0x12ca>
    32bc:	7b e0       	ldi	r23, 0x0B	; 11
    32be:	88 0f       	add	r24, r24
    32c0:	99 1f       	adc	r25, r25
    32c2:	aa 1f       	adc	r26, r26
    32c4:	bb 1f       	adc	r27, r27
    32c6:	7a 95       	dec	r23
    32c8:	d1 f7       	brne	.-12     	; 0x32be <lea_init+0x12d8>
    32ca:	8c 29       	or	r24, r12
    32cc:	9d 29       	or	r25, r13
    32ce:	ae 29       	or	r26, r14
    32d0:	bf 29       	or	r27, r15
    32d2:	68 96       	adiw	r28, 0x18	; 24
    32d4:	88 83       	st	Y, r24
    32d6:	99 83       	std	Y+1, r25	; 0x01
    32d8:	aa 83       	std	Y+2, r26	; 0x02
    32da:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[ 28] = ROL(key->rk[ 22] + delta[0][ 7], 11);
    32dc:	8f 51       	subi	r24, 0x1F	; 31
    32de:	92 41       	sbci	r25, 0x12	; 18
    32e0:	ab 40       	sbci	r26, 0x0B	; 11
    32e2:	b8 40       	sbci	r27, 0x08	; 8
    32e4:	6c 01       	movw	r12, r24
    32e6:	7d 01       	movw	r14, r26
    32e8:	15 e1       	ldi	r17, 0x15	; 21
    32ea:	f6 94       	lsr	r15
    32ec:	e7 94       	ror	r14
    32ee:	d7 94       	ror	r13
    32f0:	c7 94       	ror	r12
    32f2:	1a 95       	dec	r17
    32f4:	d1 f7       	brne	.-12     	; 0x32ea <lea_init+0x1304>
    32f6:	0b e0       	ldi	r16, 0x0B	; 11
    32f8:	88 0f       	add	r24, r24
    32fa:	99 1f       	adc	r25, r25
    32fc:	aa 1f       	adc	r26, r26
    32fe:	bb 1f       	adc	r27, r27
    3300:	0a 95       	dec	r16
    3302:	d1 f7       	brne	.-12     	; 0x32f8 <lea_init+0x1312>
    3304:	8c 29       	or	r24, r12
    3306:	9d 29       	or	r25, r13
    3308:	ae 29       	or	r26, r14
    330a:	bf 29       	or	r27, r15
    330c:	68 96       	adiw	r28, 0x18	; 24
    330e:	88 83       	st	Y, r24
    3310:	99 83       	std	Y+1, r25	; 0x01
    3312:	aa 83       	std	Y+2, r26	; 0x02
    3314:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[ 34] = ROL(key->rk[ 28] + delta[1][ 8], 11);
    3316:	8c 5b       	subi	r24, 0xBC	; 188
    3318:	9d 4f       	sbci	r25, 0xFD	; 253
    331a:	a4 49       	sbci	r26, 0x94	; 148
    331c:	bd 49       	sbci	r27, 0x9D	; 157
    331e:	6c 01       	movw	r12, r24
    3320:	7d 01       	movw	r14, r26
    3322:	65 e1       	ldi	r22, 0x15	; 21
    3324:	f6 94       	lsr	r15
    3326:	e7 94       	ror	r14
    3328:	d7 94       	ror	r13
    332a:	c7 94       	ror	r12
    332c:	6a 95       	dec	r22
    332e:	d1 f7       	brne	.-12     	; 0x3324 <lea_init+0x133e>
    3330:	7b e0       	ldi	r23, 0x0B	; 11
    3332:	88 0f       	add	r24, r24
    3334:	99 1f       	adc	r25, r25
    3336:	aa 1f       	adc	r26, r26
    3338:	bb 1f       	adc	r27, r27
    333a:	7a 95       	dec	r23
    333c:	d1 f7       	brne	.-12     	; 0x3332 <lea_init+0x134c>
    333e:	8c 29       	or	r24, r12
    3340:	9d 29       	or	r25, r13
    3342:	ae 29       	or	r26, r14
    3344:	bf 29       	or	r27, r15
    3346:	68 96       	adiw	r28, 0x18	; 24
    3348:	88 83       	st	Y, r24
    334a:	99 83       	std	Y+1, r25	; 0x01
    334c:	aa 83       	std	Y+2, r26	; 0x02
    334e:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[ 40] = ROL(key->rk[ 34] + delta[2][ 9], 11);
    3350:	8d 50       	subi	r24, 0x0D	; 13
    3352:	9b 4e       	sbci	r25, 0xEB	; 235
    3354:	a6 40       	sbci	r26, 0x06	; 6
    3356:	bb 43       	sbci	r27, 0x3B	; 59
    3358:	6c 01       	movw	r12, r24
    335a:	7d 01       	movw	r14, r26
    335c:	15 e1       	ldi	r17, 0x15	; 21
    335e:	f6 94       	lsr	r15
    3360:	e7 94       	ror	r14
    3362:	d7 94       	ror	r13
    3364:	c7 94       	ror	r12
    3366:	1a 95       	dec	r17
    3368:	d1 f7       	brne	.-12     	; 0x335e <lea_init+0x1378>
    336a:	0b e0       	ldi	r16, 0x0B	; 11
    336c:	88 0f       	add	r24, r24
    336e:	99 1f       	adc	r25, r25
    3370:	aa 1f       	adc	r26, r26
    3372:	bb 1f       	adc	r27, r27
    3374:	0a 95       	dec	r16
    3376:	d1 f7       	brne	.-12     	; 0x336c <lea_init+0x1386>
    3378:	8c 29       	or	r24, r12
    337a:	9d 29       	or	r25, r13
    337c:	ae 29       	or	r26, r14
    337e:	bf 29       	or	r27, r15
    3380:	68 96       	adiw	r28, 0x18	; 24
    3382:	88 83       	st	Y, r24
    3384:	99 83       	std	Y+1, r25	; 0x01
    3386:	aa 83       	std	Y+2, r26	; 0x02
    3388:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[ 46] = ROL(key->rk[ 40] + delta[3][10], 11);
    338a:	8d 51       	subi	r24, 0x1D	; 29
    338c:	9e 44       	sbci	r25, 0x4E	; 78
    338e:	ac 43       	sbci	r26, 0x3C	; 60
    3390:	b3 48       	sbci	r27, 0x83	; 131
    3392:	6c 01       	movw	r12, r24
    3394:	7d 01       	movw	r14, r26
    3396:	65 e1       	ldi	r22, 0x15	; 21
    3398:	f6 94       	lsr	r15
    339a:	e7 94       	ror	r14
    339c:	d7 94       	ror	r13
    339e:	c7 94       	ror	r12
    33a0:	6a 95       	dec	r22
    33a2:	d1 f7       	brne	.-12     	; 0x3398 <lea_init+0x13b2>
    33a4:	7b e0       	ldi	r23, 0x0B	; 11
    33a6:	88 0f       	add	r24, r24
    33a8:	99 1f       	adc	r25, r25
    33aa:	aa 1f       	adc	r26, r26
    33ac:	bb 1f       	adc	r27, r27
    33ae:	7a 95       	dec	r23
    33b0:	d1 f7       	brne	.-12     	; 0x33a6 <lea_init+0x13c0>
    33b2:	8c 29       	or	r24, r12
    33b4:	9d 29       	or	r25, r13
    33b6:	ae 29       	or	r26, r14
    33b8:	bf 29       	or	r27, r15
    33ba:	68 96       	adiw	r28, 0x18	; 24
    33bc:	88 83       	st	Y, r24
    33be:	99 83       	std	Y+1, r25	; 0x01
    33c0:	aa 83       	std	Y+2, r26	; 0x02
    33c2:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[ 52] = ROL(key->rk[ 46] + delta[0][11], 11);
    33c4:	81 5e       	subi	r24, 0xE1	; 225
    33c6:	91 42       	sbci	r25, 0x21	; 33
    33c8:	a1 4b       	sbci	r26, 0xB1	; 177
    33ca:	b0 48       	sbci	r27, 0x80	; 128
    33cc:	6c 01       	movw	r12, r24
    33ce:	7d 01       	movw	r14, r26
    33d0:	15 e1       	ldi	r17, 0x15	; 21
    33d2:	f6 94       	lsr	r15
    33d4:	e7 94       	ror	r14
    33d6:	d7 94       	ror	r13
    33d8:	c7 94       	ror	r12
    33da:	1a 95       	dec	r17
    33dc:	d1 f7       	brne	.-12     	; 0x33d2 <lea_init+0x13ec>
    33de:	0b e0       	ldi	r16, 0x0B	; 11
    33e0:	88 0f       	add	r24, r24
    33e2:	99 1f       	adc	r25, r25
    33e4:	aa 1f       	adc	r26, r26
    33e6:	bb 1f       	adc	r27, r27
    33e8:	0a 95       	dec	r16
    33ea:	d1 f7       	brne	.-12     	; 0x33e0 <lea_init+0x13fa>
    33ec:	8c 29       	or	r24, r12
    33ee:	9d 29       	or	r25, r13
    33f0:	ae 29       	or	r26, r14
    33f2:	bf 29       	or	r27, r15
    33f4:	68 96       	adiw	r28, 0x18	; 24
    33f6:	88 83       	st	Y, r24
    33f8:	99 83       	std	Y+1, r25	; 0x01
    33fa:	aa 83       	std	Y+2, r26	; 0x02
    33fc:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[ 58] = ROL(key->rk[ 52] + delta[1][12], 11);
    33fe:	8a 5b       	subi	r24, 0xBA	; 186
    3400:	9b 4d       	sbci	r25, 0xDB	; 219
    3402:	af 44       	sbci	r26, 0x4F	; 79
    3404:	b9 4d       	sbci	r27, 0xD9	; 217
    3406:	6c 01       	movw	r12, r24
    3408:	7d 01       	movw	r14, r26
    340a:	65 e1       	ldi	r22, 0x15	; 21
    340c:	f6 94       	lsr	r15
    340e:	e7 94       	ror	r14
    3410:	d7 94       	ror	r13
    3412:	c7 94       	ror	r12
    3414:	6a 95       	dec	r22
    3416:	d1 f7       	brne	.-12     	; 0x340c <lea_init+0x1426>
    3418:	7b e0       	ldi	r23, 0x0B	; 11
    341a:	88 0f       	add	r24, r24
    341c:	99 1f       	adc	r25, r25
    341e:	aa 1f       	adc	r26, r26
    3420:	bb 1f       	adc	r27, r27
    3422:	7a 95       	dec	r23
    3424:	d1 f7       	brne	.-12     	; 0x341a <lea_init+0x1434>
    3426:	8c 29       	or	r24, r12
    3428:	9d 29       	or	r25, r13
    342a:	ae 29       	or	r26, r14
    342c:	bf 29       	or	r27, r15
    342e:	68 96       	adiw	r28, 0x18	; 24
    3430:	88 83       	st	Y, r24
    3432:	99 83       	std	Y+1, r25	; 0x01
    3434:	aa 83       	std	Y+2, r26	; 0x02
    3436:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[ 64] = ROL(key->rk[ 58] + delta[2][13], 11);
    3438:	84 5c       	subi	r24, 0xC4	; 196
    343a:	90 4b       	sbci	r25, 0xB0	; 176
    343c:	ae 46       	sbci	r26, 0x6E	; 110
    343e:	b0 4b       	sbci	r27, 0xB0	; 176
    3440:	6c 01       	movw	r12, r24
    3442:	7d 01       	movw	r14, r26
    3444:	15 e1       	ldi	r17, 0x15	; 21
    3446:	f6 94       	lsr	r15
    3448:	e7 94       	ror	r14
    344a:	d7 94       	ror	r13
    344c:	c7 94       	ror	r12
    344e:	1a 95       	dec	r17
    3450:	d1 f7       	brne	.-12     	; 0x3446 <lea_init+0x1460>
    3452:	0b e0       	ldi	r16, 0x0B	; 11
    3454:	88 0f       	add	r24, r24
    3456:	99 1f       	adc	r25, r25
    3458:	aa 1f       	adc	r26, r26
    345a:	bb 1f       	adc	r27, r27
    345c:	0a 95       	dec	r16
    345e:	d1 f7       	brne	.-12     	; 0x3454 <lea_init+0x146e>
    3460:	8c 29       	or	r24, r12
    3462:	9d 29       	or	r25, r13
    3464:	ae 29       	or	r26, r14
    3466:	bf 29       	or	r27, r15
    3468:	68 96       	adiw	r28, 0x18	; 24
    346a:	88 83       	st	Y, r24
    346c:	99 83       	std	Y+1, r25	; 0x01
    346e:	aa 83       	std	Y+2, r26	; 0x02
    3470:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[ 70] = ROL(key->rk[ 64] + delta[3][14], 11);
    3472:	89 5c       	subi	r24, 0xC9	; 201
    3474:	91 4e       	sbci	r25, 0xE1	; 225
    3476:	a4 4c       	sbci	r26, 0xC4	; 196
    3478:	b3 43       	sbci	r27, 0x33	; 51
    347a:	6c 01       	movw	r12, r24
    347c:	7d 01       	movw	r14, r26
    347e:	65 e1       	ldi	r22, 0x15	; 21
    3480:	f6 94       	lsr	r15
    3482:	e7 94       	ror	r14
    3484:	d7 94       	ror	r13
    3486:	c7 94       	ror	r12
    3488:	6a 95       	dec	r22
    348a:	d1 f7       	brne	.-12     	; 0x3480 <lea_init+0x149a>
    348c:	7b e0       	ldi	r23, 0x0B	; 11
    348e:	88 0f       	add	r24, r24
    3490:	99 1f       	adc	r25, r25
    3492:	aa 1f       	adc	r26, r26
    3494:	bb 1f       	adc	r27, r27
    3496:	7a 95       	dec	r23
    3498:	d1 f7       	brne	.-12     	; 0x348e <lea_init+0x14a8>
    349a:	8c 29       	or	r24, r12
    349c:	9d 29       	or	r25, r13
    349e:	ae 29       	or	r26, r14
    34a0:	bf 29       	or	r27, r15
    34a2:	68 96       	adiw	r28, 0x18	; 24
    34a4:	88 83       	st	Y, r24
    34a6:	99 83       	std	Y+1, r25	; 0x01
    34a8:	aa 83       	std	Y+2, r26	; 0x02
    34aa:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[ 76] = ROL(key->rk[ 70] + delta[0][15], 11);
    34ac:	89 50       	subi	r24, 0x09	; 9
    34ae:	9e 41       	sbci	r25, 0x1E	; 30
    34b0:	a2 41       	sbci	r26, 0x12	; 18
    34b2:	bb 40       	sbci	r27, 0x0B	; 11
    34b4:	6c 01       	movw	r12, r24
    34b6:	7d 01       	movw	r14, r26
    34b8:	15 e1       	ldi	r17, 0x15	; 21
    34ba:	f6 94       	lsr	r15
    34bc:	e7 94       	ror	r14
    34be:	d7 94       	ror	r13
    34c0:	c7 94       	ror	r12
    34c2:	1a 95       	dec	r17
    34c4:	d1 f7       	brne	.-12     	; 0x34ba <lea_init+0x14d4>
    34c6:	0b e0       	ldi	r16, 0x0B	; 11
    34c8:	88 0f       	add	r24, r24
    34ca:	99 1f       	adc	r25, r25
    34cc:	aa 1f       	adc	r26, r26
    34ce:	bb 1f       	adc	r27, r27
    34d0:	0a 95       	dec	r16
    34d2:	d1 f7       	brne	.-12     	; 0x34c8 <lea_init+0x14e2>
    34d4:	8c 29       	or	r24, r12
    34d6:	9d 29       	or	r25, r13
    34d8:	ae 29       	or	r26, r14
    34da:	bf 29       	or	r27, r15
    34dc:	68 96       	adiw	r28, 0x18	; 24
    34de:	88 83       	st	Y, r24
    34e0:	99 83       	std	Y+1, r25	; 0x01
    34e2:	aa 83       	std	Y+2, r26	; 0x02
    34e4:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[ 82] = ROL(key->rk[ 76] + delta[1][16], 11);
    34e6:	8e 59       	subi	r24, 0x9E	; 158
    34e8:	9b 4b       	sbci	r25, 0xBB	; 187
    34ea:	ad 4f       	sbci	r26, 0xFD	; 253
    34ec:	b4 49       	sbci	r27, 0x94	; 148
    34ee:	6c 01       	movw	r12, r24
    34f0:	7d 01       	movw	r14, r26
    34f2:	65 e1       	ldi	r22, 0x15	; 21
    34f4:	f6 94       	lsr	r15
    34f6:	e7 94       	ror	r14
    34f8:	d7 94       	ror	r13
    34fa:	c7 94       	ror	r12
    34fc:	6a 95       	dec	r22
    34fe:	d1 f7       	brne	.-12     	; 0x34f4 <lea_init+0x150e>
    3500:	7b e0       	ldi	r23, 0x0B	; 11
    3502:	88 0f       	add	r24, r24
    3504:	99 1f       	adc	r25, r25
    3506:	aa 1f       	adc	r26, r26
    3508:	bb 1f       	adc	r27, r27
    350a:	7a 95       	dec	r23
    350c:	d1 f7       	brne	.-12     	; 0x3502 <lea_init+0x151c>
    350e:	8c 29       	or	r24, r12
    3510:	9d 29       	or	r25, r13
    3512:	ae 29       	or	r26, r14
    3514:	bf 29       	or	r27, r15
    3516:	68 96       	adiw	r28, 0x18	; 24
    3518:	88 83       	st	Y, r24
    351a:	99 83       	std	Y+1, r25	; 0x01
    351c:	aa 83       	std	Y+2, r26	; 0x02
    351e:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[ 88] = ROL(key->rk[ 82] + delta[2][17], 11);
    3520:	8c 53       	subi	r24, 0x3C	; 60
    3522:	9c 40       	sbci	r25, 0x0C	; 12
    3524:	ab 4e       	sbci	r26, 0xEB	; 235
    3526:	b6 40       	sbci	r27, 0x06	; 6
    3528:	6c 01       	movw	r12, r24
    352a:	7d 01       	movw	r14, r26
    352c:	15 e1       	ldi	r17, 0x15	; 21
    352e:	f6 94       	lsr	r15
    3530:	e7 94       	ror	r14
    3532:	d7 94       	ror	r13
    3534:	c7 94       	ror	r12
    3536:	1a 95       	dec	r17
    3538:	d1 f7       	brne	.-12     	; 0x352e <lea_init+0x1548>
    353a:	0b e0       	ldi	r16, 0x0B	; 11
    353c:	88 0f       	add	r24, r24
    353e:	99 1f       	adc	r25, r25
    3540:	aa 1f       	adc	r26, r26
    3542:	bb 1f       	adc	r27, r27
    3544:	0a 95       	dec	r16
    3546:	d1 f7       	brne	.-12     	; 0x353c <lea_init+0x1556>
    3548:	8c 29       	or	r24, r12
    354a:	9d 29       	or	r25, r13
    354c:	ae 29       	or	r26, r14
    354e:	bf 29       	or	r27, r15
    3550:	68 96       	adiw	r28, 0x18	; 24
    3552:	88 83       	st	Y, r24
    3554:	99 83       	std	Y+1, r25	; 0x01
    3556:	aa 83       	std	Y+2, r26	; 0x02
    3558:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[ 94] = ROL(key->rk[ 88] + delta[3][18], 11);
    355a:	84 58       	subi	r24, 0x84	; 132
    355c:	9c 41       	sbci	r25, 0x1C	; 28
    355e:	ae 44       	sbci	r26, 0x4E	; 78
    3560:	bc 43       	sbci	r27, 0x3C	; 60
    3562:	6c 01       	movw	r12, r24
    3564:	7d 01       	movw	r14, r26
    3566:	65 e1       	ldi	r22, 0x15	; 21
    3568:	f6 94       	lsr	r15
    356a:	e7 94       	ror	r14
    356c:	d7 94       	ror	r13
    356e:	c7 94       	ror	r12
    3570:	6a 95       	dec	r22
    3572:	d1 f7       	brne	.-12     	; 0x3568 <lea_init+0x1582>
    3574:	7b e0       	ldi	r23, 0x0B	; 11
    3576:	88 0f       	add	r24, r24
    3578:	99 1f       	adc	r25, r25
    357a:	aa 1f       	adc	r26, r26
    357c:	bb 1f       	adc	r27, r27
    357e:	7a 95       	dec	r23
    3580:	d1 f7       	brne	.-12     	; 0x3576 <lea_init+0x1590>
    3582:	8c 29       	or	r24, r12
    3584:	9d 29       	or	r25, r13
    3586:	ae 29       	or	r26, r14
    3588:	bf 29       	or	r27, r15
    358a:	68 96       	adiw	r28, 0x18	; 24
    358c:	88 83       	st	Y, r24
    358e:	99 83       	std	Y+1, r25	; 0x01
    3590:	aa 83       	std	Y+2, r26	; 0x02
    3592:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[100] = ROL(key->rk[ 94] + delta[0][19], 11);
    3594:	81 58       	subi	r24, 0x81	; 129
    3596:	90 4e       	sbci	r25, 0xE0	; 224
    3598:	a1 42       	sbci	r26, 0x21	; 33
    359a:	b1 4b       	sbci	r27, 0xB1	; 177
    359c:	6c 01       	movw	r12, r24
    359e:	7d 01       	movw	r14, r26
    35a0:	15 e1       	ldi	r17, 0x15	; 21
    35a2:	f6 94       	lsr	r15
    35a4:	e7 94       	ror	r14
    35a6:	d7 94       	ror	r13
    35a8:	c7 94       	ror	r12
    35aa:	1a 95       	dec	r17
    35ac:	d1 f7       	brne	.-12     	; 0x35a2 <lea_init+0x15bc>
    35ae:	0b e0       	ldi	r16, 0x0B	; 11
    35b0:	88 0f       	add	r24, r24
    35b2:	99 1f       	adc	r25, r25
    35b4:	aa 1f       	adc	r26, r26
    35b6:	bb 1f       	adc	r27, r27
    35b8:	0a 95       	dec	r16
    35ba:	d1 f7       	brne	.-12     	; 0x35b0 <lea_init+0x15ca>
    35bc:	8c 29       	or	r24, r12
    35be:	9d 29       	or	r25, r13
    35c0:	ae 29       	or	r26, r14
    35c2:	bf 29       	or	r27, r15
    35c4:	68 96       	adiw	r28, 0x18	; 24
    35c6:	88 83       	st	Y, r24
    35c8:	99 83       	std	Y+1, r25	; 0x01
    35ca:	aa 83       	std	Y+2, r26	; 0x02
    35cc:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[106] = ROL(key->rk[100] + delta[1][20], 11);
    35ce:	8a 5d       	subi	r24, 0xDA	; 218
    35d0:	99 4b       	sbci	r25, 0xB9	; 185
    35d2:	ab 4d       	sbci	r26, 0xDB	; 219
    35d4:	bf 44       	sbci	r27, 0x4F	; 79
    35d6:	6c 01       	movw	r12, r24
    35d8:	7d 01       	movw	r14, r26
    35da:	65 e1       	ldi	r22, 0x15	; 21
    35dc:	f6 94       	lsr	r15
    35de:	e7 94       	ror	r14
    35e0:	d7 94       	ror	r13
    35e2:	c7 94       	ror	r12
    35e4:	6a 95       	dec	r22
    35e6:	d1 f7       	brne	.-12     	; 0x35dc <lea_init+0x15f6>
    35e8:	7b e0       	ldi	r23, 0x0B	; 11
    35ea:	88 0f       	add	r24, r24
    35ec:	99 1f       	adc	r25, r25
    35ee:	aa 1f       	adc	r26, r26
    35f0:	bb 1f       	adc	r27, r27
    35f2:	7a 95       	dec	r23
    35f4:	d1 f7       	brne	.-12     	; 0x35ea <lea_init+0x1604>
    35f6:	8c 29       	or	r24, r12
    35f8:	9d 29       	or	r25, r13
    35fa:	ae 29       	or	r26, r14
    35fc:	bf 29       	or	r27, r15
    35fe:	68 96       	adiw	r28, 0x18	; 24
    3600:	88 83       	st	Y, r24
    3602:	99 83       	std	Y+1, r25	; 0x01
    3604:	aa 83       	std	Y+2, r26	; 0x02
    3606:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[112] = ROL(key->rk[106] + delta[2][21], 11);
    3608:	81 5b       	subi	r24, 0xB1	; 177
    360a:	93 4c       	sbci	r25, 0xC3	; 195
    360c:	a0 4b       	sbci	r26, 0xB0	; 176
    360e:	be 46       	sbci	r27, 0x6E	; 110
    3610:	6c 01       	movw	r12, r24
    3612:	7d 01       	movw	r14, r26
    3614:	15 e1       	ldi	r17, 0x15	; 21
    3616:	f6 94       	lsr	r15
    3618:	e7 94       	ror	r14
    361a:	d7 94       	ror	r13
    361c:	c7 94       	ror	r12
    361e:	1a 95       	dec	r17
    3620:	d1 f7       	brne	.-12     	; 0x3616 <lea_init+0x1630>
    3622:	0b e0       	ldi	r16, 0x0B	; 11
    3624:	88 0f       	add	r24, r24
    3626:	99 1f       	adc	r25, r25
    3628:	aa 1f       	adc	r26, r26
    362a:	bb 1f       	adc	r27, r27
    362c:	0a 95       	dec	r16
    362e:	d1 f7       	brne	.-12     	; 0x3624 <lea_init+0x163e>
    3630:	8c 29       	or	r24, r12
    3632:	9d 29       	or	r25, r13
    3634:	ae 29       	or	r26, r14
    3636:	bf 29       	or	r27, r15
    3638:	68 96       	adiw	r28, 0x18	; 24
    363a:	88 83       	st	Y, r24
    363c:	99 83       	std	Y+1, r25	; 0x01
    363e:	aa 83       	std	Y+2, r26	; 0x02
    3640:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[118] = ROL(key->rk[112] + delta[3][22], 11);
    3642:	84 53       	subi	r24, 0x34	; 52
    3644:	98 4c       	sbci	r25, 0xC8	; 200
    3646:	a1 4e       	sbci	r26, 0xE1	; 225
    3648:	b4 4c       	sbci	r27, 0xC4	; 196
    364a:	6c 01       	movw	r12, r24
    364c:	7d 01       	movw	r14, r26
    364e:	65 e1       	ldi	r22, 0x15	; 21
    3650:	f6 94       	lsr	r15
    3652:	e7 94       	ror	r14
    3654:	d7 94       	ror	r13
    3656:	c7 94       	ror	r12
    3658:	6a 95       	dec	r22
    365a:	d1 f7       	brne	.-12     	; 0x3650 <lea_init+0x166a>
    365c:	7b e0       	ldi	r23, 0x0B	; 11
    365e:	88 0f       	add	r24, r24
    3660:	99 1f       	adc	r25, r25
    3662:	aa 1f       	adc	r26, r26
    3664:	bb 1f       	adc	r27, r27
    3666:	7a 95       	dec	r23
    3668:	d1 f7       	brne	.-12     	; 0x365e <lea_init+0x1678>
    366a:	8c 29       	or	r24, r12
    366c:	9d 29       	or	r25, r13
    366e:	ae 29       	or	r26, r14
    3670:	bf 29       	or	r27, r15
    3672:	68 96       	adiw	r28, 0x18	; 24
    3674:	88 83       	st	Y, r24
    3676:	99 83       	std	Y+1, r25	; 0x01
    3678:	aa 83       	std	Y+2, r26	; 0x02
    367a:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[124] = ROL(key->rk[118] + delta[0][23], 11);
    367c:	8c 50       	subi	r24, 0x0C	; 12
    367e:	98 40       	sbci	r25, 0x08	; 8
    3680:	ae 41       	sbci	r26, 0x1E	; 30
    3682:	b2 41       	sbci	r27, 0x12	; 18
    3684:	6c 01       	movw	r12, r24
    3686:	7d 01       	movw	r14, r26
    3688:	15 e1       	ldi	r17, 0x15	; 21
    368a:	f6 94       	lsr	r15
    368c:	e7 94       	ror	r14
    368e:	d7 94       	ror	r13
    3690:	c7 94       	ror	r12
    3692:	1a 95       	dec	r17
    3694:	d1 f7       	brne	.-12     	; 0x368a <lea_init+0x16a4>
    3696:	0b e0       	ldi	r16, 0x0B	; 11
    3698:	88 0f       	add	r24, r24
    369a:	99 1f       	adc	r25, r25
    369c:	aa 1f       	adc	r26, r26
    369e:	bb 1f       	adc	r27, r27
    36a0:	0a 95       	dec	r16
    36a2:	d1 f7       	brne	.-12     	; 0x3698 <lea_init+0x16b2>
    36a4:	8c 29       	or	r24, r12
    36a6:	9d 29       	or	r25, r13
    36a8:	ae 29       	or	r26, r14
    36aa:	bf 29       	or	r27, r15
    36ac:	68 96       	adiw	r28, 0x18	; 24
    36ae:	88 83       	st	Y, r24
    36b0:	99 83       	std	Y+1, r25	; 0x01
    36b2:	aa 83       	std	Y+2, r26	; 0x02
    36b4:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[130] = ROL(key->rk[124] + delta[1][24], 11);
    36b6:	85 59       	subi	r24, 0x95	; 149
    36b8:	9d 49       	sbci	r25, 0x9D	; 157
    36ba:	ab 4b       	sbci	r26, 0xBB	; 187
    36bc:	bd 4f       	sbci	r27, 0xFD	; 253
    36be:	6c 01       	movw	r12, r24
    36c0:	7d 01       	movw	r14, r26
    36c2:	65 e1       	ldi	r22, 0x15	; 21
    36c4:	f6 94       	lsr	r15
    36c6:	e7 94       	ror	r14
    36c8:	d7 94       	ror	r13
    36ca:	c7 94       	ror	r12
    36cc:	6a 95       	dec	r22
    36ce:	d1 f7       	brne	.-12     	; 0x36c4 <lea_init+0x16de>
    36d0:	7b e0       	ldi	r23, 0x0B	; 11
    36d2:	88 0f       	add	r24, r24
    36d4:	99 1f       	adc	r25, r25
    36d6:	aa 1f       	adc	r26, r26
    36d8:	bb 1f       	adc	r27, r27
    36da:	7a 95       	dec	r23
    36dc:	d1 f7       	brne	.-12     	; 0x36d2 <lea_init+0x16ec>
    36de:	8c 29       	or	r24, r12
    36e0:	9d 29       	or	r25, r13
    36e2:	ae 29       	or	r26, r14
    36e4:	bf 29       	or	r27, r15
    36e6:	68 96       	adiw	r28, 0x18	; 24
    36e8:	88 83       	st	Y, r24
    36ea:	99 83       	std	Y+1, r25	; 0x01
    36ec:	aa 83       	std	Y+2, r26	; 0x02
    36ee:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[136] = ROL(key->rk[130] + delta[2][25], 11);
    36f0:	87 50       	subi	r24, 0x07	; 7
    36f2:	9b 43       	sbci	r25, 0x3B	; 59
    36f4:	ac 40       	sbci	r26, 0x0C	; 12
    36f6:	bb 4e       	sbci	r27, 0xEB	; 235
    36f8:	6c 01       	movw	r12, r24
    36fa:	7d 01       	movw	r14, r26
    36fc:	15 e1       	ldi	r17, 0x15	; 21
    36fe:	f6 94       	lsr	r15
    3700:	e7 94       	ror	r14
    3702:	d7 94       	ror	r13
    3704:	c7 94       	ror	r12
    3706:	1a 95       	dec	r17
    3708:	d1 f7       	brne	.-12     	; 0x36fe <lea_init+0x1718>
    370a:	0b e0       	ldi	r16, 0x0B	; 11
    370c:	88 0f       	add	r24, r24
    370e:	99 1f       	adc	r25, r25
    3710:	aa 1f       	adc	r26, r26
    3712:	bb 1f       	adc	r27, r27
    3714:	0a 95       	dec	r16
    3716:	d1 f7       	brne	.-12     	; 0x370c <lea_init+0x1726>
    3718:	8c 29       	or	r24, r12
    371a:	9d 29       	or	r25, r13
    371c:	ae 29       	or	r26, r14
    371e:	bf 29       	or	r27, r15
    3720:	68 96       	adiw	r28, 0x18	; 24
    3722:	88 83       	st	Y, r24
    3724:	99 83       	std	Y+1, r25	; 0x01
    3726:	aa 83       	std	Y+2, r26	; 0x02
    3728:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[142] = ROL(key->rk[136] + delta[3][26], 11);
    372a:	8d 53       	subi	r24, 0x3D	; 61
    372c:	93 48       	sbci	r25, 0x83	; 131
    372e:	ac 41       	sbci	r26, 0x1C	; 28
    3730:	be 44       	sbci	r27, 0x4E	; 78
    3732:	6c 01       	movw	r12, r24
    3734:	7d 01       	movw	r14, r26
    3736:	65 e1       	ldi	r22, 0x15	; 21
    3738:	f6 94       	lsr	r15
    373a:	e7 94       	ror	r14
    373c:	d7 94       	ror	r13
    373e:	c7 94       	ror	r12
    3740:	6a 95       	dec	r22
    3742:	d1 f7       	brne	.-12     	; 0x3738 <lea_init+0x1752>
    3744:	7b e0       	ldi	r23, 0x0B	; 11
    3746:	88 0f       	add	r24, r24
    3748:	99 1f       	adc	r25, r25
    374a:	aa 1f       	adc	r26, r26
    374c:	bb 1f       	adc	r27, r27
    374e:	7a 95       	dec	r23
    3750:	d1 f7       	brne	.-12     	; 0x3746 <lea_init+0x1760>
    3752:	c8 2a       	or	r12, r24
    3754:	d9 2a       	or	r13, r25
    3756:	ea 2a       	or	r14, r26
    3758:	fb 2a       	or	r15, r27
    375a:	df 01       	movw	r26, r30
    375c:	a8 5c       	subi	r26, 0xC8	; 200
    375e:	bd 4f       	sbci	r27, 0xFD	; 253
    3760:	0c 94 80 46 	jmp	0x8d00	; 0x8d00 <__stack+0x4d01>
		break;

	case 24:
		key->rk[  0] = ROL(loadU32(_mk[0]) + delta[0][ 0], 1);
    3764:	cd 90       	ld	r12, X+
    3766:	dd 90       	ld	r13, X+
    3768:	ed 90       	ld	r14, X+
    376a:	fc 90       	ld	r15, X
    376c:	13 97       	sbiw	r26, 0x03	; 3
    376e:	85 e2       	ldi	r24, 0x25	; 37
    3770:	c8 1a       	sub	r12, r24
    3772:	86 e1       	ldi	r24, 0x16	; 22
    3774:	d8 0a       	sbc	r13, r24
    3776:	80 e1       	ldi	r24, 0x10	; 16
    3778:	e8 0a       	sbc	r14, r24
    377a:	8c e3       	ldi	r24, 0x3C	; 60
    377c:	f8 0a       	sbc	r15, r24
    377e:	cc 0c       	add	r12, r12
    3780:	dd 1c       	adc	r13, r13
    3782:	ee 1c       	adc	r14, r14
    3784:	ff 1c       	adc	r15, r15
    3786:	c1 1c       	adc	r12, r1
    3788:	c0 82       	st	Z, r12
    378a:	d1 82       	std	Z+1, r13	; 0x01
    378c:	e2 82       	std	Z+2, r14	; 0x02
    378e:	f3 82       	std	Z+3, r15	; 0x03
		key->rk[  6] = ROL(key->rk[  0] + delta[1][ 1], 1);
    3790:	8c ef       	ldi	r24, 0xFC	; 252
    3792:	c8 1a       	sub	r12, r24
    3794:	89 e2       	ldi	r24, 0x29	; 41
    3796:	d8 0a       	sbc	r13, r24
    3798:	8b e3       	ldi	r24, 0x3B	; 59
    379a:	e8 0a       	sbc	r14, r24
    379c:	87 e7       	ldi	r24, 0x77	; 119
    379e:	f8 0a       	sbc	r15, r24
    37a0:	cc 0c       	add	r12, r12
    37a2:	dd 1c       	adc	r13, r13
    37a4:	ee 1c       	adc	r14, r14
    37a6:	ff 1c       	adc	r15, r15
    37a8:	c1 1c       	adc	r12, r1
    37aa:	c0 8e       	std	Z+24, r12	; 0x18
    37ac:	d1 8e       	std	Z+25, r13	; 0x19
    37ae:	e2 8e       	std	Z+26, r14	; 0x1a
    37b0:	f3 8e       	std	Z+27, r15	; 0x1b
		key->rk[ 12] = ROL(key->rk[  6] + delta[2][ 2], 1);
    37b2:	87 ed       	ldi	r24, 0xD7	; 215
    37b4:	c8 1a       	sub	r12, r24
    37b6:	8d e0       	ldi	r24, 0x0D	; 13
    37b8:	d8 0a       	sbc	r13, r24
    37ba:	86 e7       	ldi	r24, 0x76	; 118
    37bc:	e8 0a       	sbc	r14, r24
    37be:	88 e1       	ldi	r24, 0x18	; 24
    37c0:	f8 0a       	sbc	r15, r24
    37c2:	cc 0c       	add	r12, r12
    37c4:	dd 1c       	adc	r13, r13
    37c6:	ee 1c       	adc	r14, r14
    37c8:	ff 1c       	adc	r15, r15
    37ca:	c1 1c       	adc	r12, r1
    37cc:	c0 aa       	std	Z+48, r12	; 0x30
    37ce:	d1 aa       	std	Z+49, r13	; 0x31
    37d0:	e2 aa       	std	Z+50, r14	; 0x32
    37d2:	f3 aa       	std	Z+51, r15	; 0x33
		key->rk[ 18] = ROL(key->rk[ 12] + delta[3][ 3], 1);
    37d4:	8d e9       	ldi	r24, 0x9D	; 157
    37d6:	c8 1a       	sub	r12, r24
    37d8:	88 e7       	ldi	r24, 0x78	; 120
    37da:	d8 0a       	sbc	r13, r24
    37dc:	86 e0       	ldi	r24, 0x06	; 6
    37de:	e8 0a       	sbc	r14, r24
    37e0:	89 e3       	ldi	r24, 0x39	; 57
    37e2:	f8 0a       	sbc	r15, r24
    37e4:	cc 0c       	add	r12, r12
    37e6:	dd 1c       	adc	r13, r13
    37e8:	ee 1c       	adc	r14, r14
    37ea:	ff 1c       	adc	r15, r15
    37ec:	c1 1c       	adc	r12, r1
    37ee:	ef 01       	movw	r28, r30
    37f0:	c8 5b       	subi	r28, 0xB8	; 184
    37f2:	df 4f       	sbci	r29, 0xFF	; 255
    37f4:	c8 82       	st	Y, r12
    37f6:	d9 82       	std	Y+1, r13	; 0x01
    37f8:	ea 82       	std	Y+2, r14	; 0x02
    37fa:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 24] = ROL(key->rk[ 18] + delta[4][ 4], 1);
    37fc:	89 e1       	ldi	r24, 0x19	; 25
    37fe:	c8 1a       	sub	r12, r24
    3800:	86 eb       	ldi	r24, 0xB6	; 182
    3802:	d8 0a       	sbc	r13, r24
    3804:	85 e1       	ldi	r24, 0x15	; 21
    3806:	e8 0a       	sbc	r14, r24
    3808:	8a ee       	ldi	r24, 0xEA	; 234
    380a:	f8 0a       	sbc	r15, r24
    380c:	cc 0c       	add	r12, r12
    380e:	dd 1c       	adc	r13, r13
    3810:	ee 1c       	adc	r14, r14
    3812:	ff 1c       	adc	r15, r15
    3814:	c1 1c       	adc	r12, r1
    3816:	68 96       	adiw	r28, 0x18	; 24
    3818:	c8 82       	st	Y, r12
    381a:	d9 82       	std	Y+1, r13	; 0x01
    381c:	ea 82       	std	Y+2, r14	; 0x02
    381e:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 30] = ROL(key->rk[ 24] + delta[5][ 5], 1);
    3820:	88 ea       	ldi	r24, 0xA8	; 168
    3822:	c8 1a       	sub	r12, r24
    3824:	8e eb       	ldi	r24, 0xBE	; 190
    3826:	d8 0a       	sbc	r13, r24
    3828:	84 e4       	ldi	r24, 0x44	; 68
    382a:	e8 0a       	sbc	r14, r24
    382c:	8f e0       	ldi	r24, 0x0F	; 15
    382e:	f8 0a       	sbc	r15, r24
    3830:	cc 0c       	add	r12, r12
    3832:	dd 1c       	adc	r13, r13
    3834:	ee 1c       	adc	r14, r14
    3836:	ff 1c       	adc	r15, r15
    3838:	c1 1c       	adc	r12, r1
    383a:	68 96       	adiw	r28, 0x18	; 24
    383c:	c8 82       	st	Y, r12
    383e:	d9 82       	std	Y+1, r13	; 0x01
    3840:	ea 82       	std	Y+2, r14	; 0x02
    3842:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 36] = ROL(key->rk[ 30] + delta[0][ 6], 1);
    3844:	80 e1       	ldi	r24, 0x10	; 16
    3846:	c8 1a       	sub	r12, r24
    3848:	89 e8       	ldi	r24, 0x89	; 137
    384a:	d8 0a       	sbc	r13, r24
    384c:	85 e0       	ldi	r24, 0x05	; 5
    384e:	e8 0a       	sbc	r14, r24
    3850:	84 e0       	ldi	r24, 0x04	; 4
    3852:	f8 0a       	sbc	r15, r24
    3854:	cc 0c       	add	r12, r12
    3856:	dd 1c       	adc	r13, r13
    3858:	ee 1c       	adc	r14, r14
    385a:	ff 1c       	adc	r15, r15
    385c:	c1 1c       	adc	r12, r1
    385e:	68 96       	adiw	r28, 0x18	; 24
    3860:	c8 82       	st	Y, r12
    3862:	d9 82       	std	Y+1, r13	; 0x01
    3864:	ea 82       	std	Y+2, r14	; 0x02
    3866:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 42] = ROL(key->rk[ 36] + delta[1][ 7], 1);
    3868:	8e ed       	ldi	r24, 0xDE	; 222
    386a:	c8 1a       	sub	r12, r24
    386c:	8e e7       	ldi	r24, 0x7E	; 126
    386e:	d8 0a       	sbc	r13, r24
    3870:	8a ec       	ldi	r24, 0xCA	; 202
    3872:	e8 0a       	sbc	r14, r24
    3874:	8e ec       	ldi	r24, 0xCE	; 206
    3876:	f8 0a       	sbc	r15, r24
    3878:	cc 0c       	add	r12, r12
    387a:	dd 1c       	adc	r13, r13
    387c:	ee 1c       	adc	r14, r14
    387e:	ff 1c       	adc	r15, r15
    3880:	c1 1c       	adc	r12, r1
    3882:	68 96       	adiw	r28, 0x18	; 24
    3884:	c8 82       	st	Y, r12
    3886:	d9 82       	std	Y+1, r13	; 0x01
    3888:	ea 82       	std	Y+2, r14	; 0x02
    388a:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 48] = ROL(key->rk[ 42] + delta[2][ 8], 1);
    388c:	87 e8       	ldi	r24, 0x87	; 135
    388e:	c8 1a       	sub	r12, r24
    3890:	85 e7       	ldi	r24, 0x75	; 117
    3892:	d8 0a       	sbc	r13, r24
    3894:	83 e8       	ldi	r24, 0x83	; 131
    3896:	e8 0a       	sbc	r14, r24
    3898:	8d e1       	ldi	r24, 0x1D	; 29
    389a:	f8 0a       	sbc	r15, r24
    389c:	cc 0c       	add	r12, r12
    389e:	dd 1c       	adc	r13, r13
    38a0:	ee 1c       	adc	r14, r14
    38a2:	ff 1c       	adc	r15, r15
    38a4:	c1 1c       	adc	r12, r1
    38a6:	68 96       	adiw	r28, 0x18	; 24
    38a8:	c8 82       	st	Y, r12
    38aa:	d9 82       	std	Y+1, r13	; 0x01
    38ac:	ea 82       	std	Y+2, r14	; 0x02
    38ae:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 54] = ROL(key->rk[ 48] + delta[3][ 9], 1);
    38b0:	8f e0       	ldi	r24, 0x0F	; 15
    38b2:	c8 1a       	sub	r12, r24
    38b4:	87 e2       	ldi	r24, 0x27	; 39
    38b6:	d8 0a       	sbc	r13, r24
    38b8:	8e e9       	ldi	r24, 0x9E	; 158
    38ba:	e8 0a       	sbc	r14, r24
    38bc:	81 e4       	ldi	r24, 0x41	; 65
    38be:	f8 0a       	sbc	r15, r24
    38c0:	cc 0c       	add	r12, r12
    38c2:	dd 1c       	adc	r13, r13
    38c4:	ee 1c       	adc	r14, r14
    38c6:	ff 1c       	adc	r15, r15
    38c8:	c1 1c       	adc	r12, r1
    38ca:	68 96       	adiw	r28, 0x18	; 24
    38cc:	c8 82       	st	Y, r12
    38ce:	d9 82       	std	Y+1, r13	; 0x01
    38d0:	ea 82       	std	Y+2, r14	; 0x02
    38d2:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 60] = ROL(key->rk[ 54] + delta[4][10], 1);
    38d4:	8b e3       	ldi	r24, 0x3B	; 59
    38d6:	c8 1a       	sub	r12, r24
    38d8:	86 e8       	ldi	r24, 0x86	; 134
    38da:	d8 0a       	sbc	r13, r24
    38dc:	8d e6       	ldi	r24, 0x6D	; 109
    38de:	e8 0a       	sbc	r14, r24
    38e0:	85 e8       	ldi	r24, 0x85	; 133
    38e2:	f8 0a       	sbc	r15, r24
    38e4:	cc 0c       	add	r12, r12
    38e6:	dd 1c       	adc	r13, r13
    38e8:	ee 1c       	adc	r14, r14
    38ea:	ff 1c       	adc	r15, r15
    38ec:	c1 1c       	adc	r12, r1
    38ee:	68 96       	adiw	r28, 0x18	; 24
    38f0:	c8 82       	st	Y, r12
    38f2:	d9 82       	std	Y+1, r13	; 0x01
    38f4:	ea 82       	std	Y+2, r14	; 0x02
    38f6:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 66] = ROL(key->rk[ 60] + delta[5][11], 1);
    38f8:	84 ec       	ldi	r24, 0xC4	; 196
    38fa:	c8 1a       	sub	r12, r24
    38fc:	89 ea       	ldi	r24, 0xA9	; 169
    38fe:	d8 0a       	sbc	r13, r24
    3900:	8f e2       	ldi	r24, 0x2F	; 47
    3902:	e8 0a       	sbc	r14, r24
    3904:	81 ed       	ldi	r24, 0xD1	; 209
    3906:	f8 0a       	sbc	r15, r24
    3908:	cc 0c       	add	r12, r12
    390a:	dd 1c       	adc	r13, r13
    390c:	ee 1c       	adc	r14, r14
    390e:	ff 1c       	adc	r15, r15
    3910:	c1 1c       	adc	r12, r1
    3912:	68 96       	adiw	r28, 0x18	; 24
    3914:	c8 82       	st	Y, r12
    3916:	d9 82       	std	Y+1, r13	; 0x01
    3918:	ea 82       	std	Y+2, r14	; 0x02
    391a:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 72] = ROL(key->rk[ 66] + delta[0][12], 1);
    391c:	82 ec       	ldi	r24, 0xC2	; 194
    391e:	c8 1a       	sub	r12, r24
    3920:	83 e4       	ldi	r24, 0x43	; 67
    3922:	d8 0a       	sbc	r13, r24
    3924:	82 e6       	ldi	r24, 0x62	; 98
    3926:	e8 0a       	sbc	r14, r24
    3928:	81 e0       	ldi	r24, 0x01	; 1
    392a:	f8 0a       	sbc	r15, r24
    392c:	cc 0c       	add	r12, r12
    392e:	dd 1c       	adc	r13, r13
    3930:	ee 1c       	adc	r14, r14
    3932:	ff 1c       	adc	r15, r15
    3934:	c1 1c       	adc	r12, r1
    3936:	68 96       	adiw	r28, 0x18	; 24
    3938:	c8 82       	st	Y, r12
    393a:	d9 82       	std	Y+1, r13	; 0x01
    393c:	ea 82       	std	Y+2, r14	; 0x02
    393e:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 78] = ROL(key->rk[ 72] + delta[1][13], 1);
    3940:	84 e7       	ldi	r24, 0x74	; 116
    3942:	c8 1a       	sub	r12, r24
    3944:	87 eb       	ldi	r24, 0xB7	; 183
    3946:	d8 0a       	sbc	r13, r24
    3948:	8f e9       	ldi	r24, 0x9F	; 159
    394a:	e8 0a       	sbc	r14, r24
    394c:	82 eb       	ldi	r24, 0xB2	; 178
    394e:	f8 0a       	sbc	r15, r24
    3950:	cc 0c       	add	r12, r12
    3952:	dd 1c       	adc	r13, r13
    3954:	ee 1c       	adc	r14, r14
    3956:	ff 1c       	adc	r15, r15
    3958:	c1 1c       	adc	r12, r1
    395a:	68 96       	adiw	r28, 0x18	; 24
    395c:	c8 82       	st	Y, r12
    395e:	d9 82       	std	Y+1, r13	; 0x01
    3960:	ea 82       	std	Y+2, r14	; 0x02
    3962:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 84] = ROL(key->rk[ 78] + delta[2][14], 1);
    3964:	88 e8       	ldi	r24, 0x88	; 136
    3966:	c8 1a       	sub	r12, r24
    3968:	81 e6       	ldi	r24, 0x61	; 97
    396a:	d8 0a       	sbc	r13, r24
    396c:	8d ed       	ldi	r24, 0xDD	; 221
    396e:	e8 0a       	sbc	r14, r24
    3970:	80 e6       	ldi	r24, 0x60	; 96
    3972:	f8 0a       	sbc	r15, r24
    3974:	cc 0c       	add	r12, r12
    3976:	dd 1c       	adc	r13, r13
    3978:	ee 1c       	adc	r14, r14
    397a:	ff 1c       	adc	r15, r15
    397c:	c1 1c       	adc	r12, r1
    397e:	68 96       	adiw	r28, 0x18	; 24
    3980:	c8 82       	st	Y, r12
    3982:	d9 82       	std	Y+1, r13	; 0x01
    3984:	ea 82       	std	Y+2, r14	; 0x02
    3986:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 90] = ROL(key->rk[ 84] + delta[3][15], 1);
    3988:	81 e9       	ldi	r24, 0x91	; 145
    398a:	c8 1a       	sub	r12, r24
    398c:	83 ec       	ldi	r24, 0xC3	; 195
    398e:	d8 0a       	sbc	r13, r24
    3990:	89 e8       	ldi	r24, 0x89	; 137
    3992:	e8 0a       	sbc	r14, r24
    3994:	87 e6       	ldi	r24, 0x67	; 103
    3996:	f8 0a       	sbc	r15, r24
    3998:	cc 0c       	add	r12, r12
    399a:	dd 1c       	adc	r13, r13
    399c:	ee 1c       	adc	r14, r14
    399e:	ff 1c       	adc	r15, r15
    39a0:	c1 1c       	adc	r12, r1
    39a2:	68 96       	adiw	r28, 0x18	; 24
    39a4:	c8 82       	st	Y, r12
    39a6:	d9 82       	std	Y+1, r13	; 0x01
    39a8:	ea 82       	std	Y+2, r14	; 0x02
    39aa:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 96] = ROL(key->rk[ 90] + delta[4][16], 1);
    39ac:	82 ea       	ldi	r24, 0xA2	; 162
    39ae:	c8 1a       	sub	r12, r24
    39b0:	8e e8       	ldi	r24, 0x8E	; 142
    39b2:	d8 0a       	sbc	r13, r24
    39b4:	81 e6       	ldi	r24, 0x61	; 97
    39b6:	e8 0a       	sbc	r14, r24
    39b8:	8b e5       	ldi	r24, 0x5B	; 91
    39ba:	f8 0a       	sbc	r15, r24
    39bc:	cc 0c       	add	r12, r12
    39be:	dd 1c       	adc	r13, r13
    39c0:	ee 1c       	adc	r14, r14
    39c2:	ff 1c       	adc	r15, r15
    39c4:	c1 1c       	adc	r12, r1
    39c6:	68 96       	adiw	r28, 0x18	; 24
    39c8:	c8 82       	st	Y, r12
    39ca:	d9 82       	std	Y+1, r13	; 0x01
    39cc:	ea 82       	std	Y+2, r14	; 0x02
    39ce:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[102] = ROL(key->rk[ 96] + delta[5][17], 1);
    39d0:	85 ef       	ldi	r24, 0xF5	; 245
    39d2:	c8 1a       	sub	r12, r24
    39d4:	80 e7       	ldi	r24, 0x70	; 112
    39d6:	d8 0a       	sbc	r13, r24
    39d8:	8a ee       	ldi	r24, 0xEA	; 234
    39da:	e8 0a       	sbc	r14, r24
    39dc:	8b e4       	ldi	r24, 0x4B	; 75
    39de:	f8 0a       	sbc	r15, r24
    39e0:	cc 0c       	add	r12, r12
    39e2:	dd 1c       	adc	r13, r13
    39e4:	ee 1c       	adc	r14, r14
    39e6:	ff 1c       	adc	r15, r15
    39e8:	c1 1c       	adc	r12, r1
    39ea:	68 96       	adiw	r28, 0x18	; 24
    39ec:	c8 82       	st	Y, r12
    39ee:	d9 82       	std	Y+1, r13	; 0x01
    39f0:	ea 82       	std	Y+2, r14	; 0x02
    39f2:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[108] = ROL(key->rk[102] + delta[0][18], 1);
    39f4:	81 e4       	ldi	r24, 0x41	; 65
    39f6:	c8 1a       	sub	r12, r24
    39f8:	80 ef       	ldi	r24, 0xF0	; 240
    39fa:	d8 0a       	sbc	r13, r24
    39fc:	80 e9       	ldi	r24, 0x90	; 144
    39fe:	e8 0a       	sbc	r14, r24
    3a00:	88 e5       	ldi	r24, 0x58	; 88
    3a02:	f8 0a       	sbc	r15, r24
    3a04:	cc 0c       	add	r12, r12
    3a06:	dd 1c       	adc	r13, r13
    3a08:	ee 1c       	adc	r14, r14
    3a0a:	ff 1c       	adc	r15, r15
    3a0c:	c1 1c       	adc	r12, r1
    3a0e:	68 96       	adiw	r28, 0x18	; 24
    3a10:	c8 82       	st	Y, r12
    3a12:	d9 82       	std	Y+1, r13	; 0x01
    3a14:	ea 82       	std	Y+2, r14	; 0x02
    3a16:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[114] = ROL(key->rk[108] + delta[1][19], 1);
    3a18:	8d ee       	ldi	r24, 0xED	; 237
    3a1a:	c8 1a       	sub	r12, r24
    3a1c:	8c ed       	ldi	r24, 0xDC	; 220
    3a1e:	d8 0a       	sbc	r13, r24
    3a20:	8d ee       	ldi	r24, 0xED	; 237
    3a22:	e8 0a       	sbc	r14, r24
    3a24:	87 ea       	ldi	r24, 0xA7	; 167
    3a26:	f8 0a       	sbc	r15, r24
    3a28:	cc 0c       	add	r12, r12
    3a2a:	dd 1c       	adc	r13, r13
    3a2c:	ee 1c       	adc	r14, r14
    3a2e:	ff 1c       	adc	r15, r15
    3a30:	c1 1c       	adc	r12, r1
    3a32:	68 96       	adiw	r28, 0x18	; 24
    3a34:	c8 82       	st	Y, r12
    3a36:	d9 82       	std	Y+1, r13	; 0x01
    3a38:	ea 82       	std	Y+2, r14	; 0x02
    3a3a:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[120] = ROL(key->rk[114] + delta[2][20], 1);
    3a3c:	89 ed       	ldi	r24, 0xD9	; 217
    3a3e:	c8 1a       	sub	r12, r24
    3a40:	81 e6       	ldi	r24, 0x61	; 97
    3a42:	d8 0a       	sbc	r13, r24
    3a44:	88 e5       	ldi	r24, 0x58	; 88
    3a46:	e8 0a       	sbc	r14, r24
    3a48:	87 e3       	ldi	r24, 0x37	; 55
    3a4a:	f8 0a       	sbc	r15, r24
    3a4c:	cc 0c       	add	r12, r12
    3a4e:	dd 1c       	adc	r13, r13
    3a50:	ee 1c       	adc	r14, r14
    3a52:	ff 1c       	adc	r15, r15
    3a54:	c1 1c       	adc	r12, r1
    3a56:	68 96       	adiw	r28, 0x18	; 24
    3a58:	c8 82       	st	Y, r12
    3a5a:	d9 82       	std	Y+1, r13	; 0x01
    3a5c:	ea 82       	std	Y+2, r14	; 0x02
    3a5e:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[126] = ROL(key->rk[120] + delta[3][21], 1);
    3a60:	8a e1       	ldi	r24, 0x1A	; 26
    3a62:	c8 1a       	sub	r12, r24
    3a64:	84 ee       	ldi	r24, 0xE4	; 228
    3a66:	d8 0a       	sbc	r13, r24
    3a68:	80 e7       	ldi	r24, 0x70	; 112
    3a6a:	e8 0a       	sbc	r14, r24
    3a6c:	82 ee       	ldi	r24, 0xE2	; 226
    3a6e:	f8 0a       	sbc	r15, r24
    3a70:	cc 0c       	add	r12, r12
    3a72:	dd 1c       	adc	r13, r13
    3a74:	ee 1c       	adc	r14, r14
    3a76:	ff 1c       	adc	r15, r15
    3a78:	c1 1c       	adc	r12, r1
    3a7a:	68 96       	adiw	r28, 0x18	; 24
    3a7c:	c8 82       	st	Y, r12
    3a7e:	d9 82       	std	Y+1, r13	; 0x01
    3a80:	ea 82       	std	Y+2, r14	; 0x02
    3a82:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[132] = ROL(key->rk[126] + delta[4][22], 1);
    3a84:	87 e5       	ldi	r24, 0x57	; 87
    3a86:	c8 1a       	sub	r12, r24
    3a88:	88 ea       	ldi	r24, 0xA8	; 168
    3a8a:	d8 0a       	sbc	r13, r24
    3a8c:	83 e6       	ldi	r24, 0x63	; 99
    3a8e:	e8 0a       	sbc	r14, r24
    3a90:	88 ed       	ldi	r24, 0xD8	; 216
    3a92:	f8 0a       	sbc	r15, r24
    3a94:	cc 0c       	add	r12, r12
    3a96:	dd 1c       	adc	r13, r13
    3a98:	ee 1c       	adc	r14, r14
    3a9a:	ff 1c       	adc	r15, r15
    3a9c:	c1 1c       	adc	r12, r1
    3a9e:	68 96       	adiw	r28, 0x18	; 24
    3aa0:	c8 82       	st	Y, r12
    3aa2:	d9 82       	std	Y+1, r13	; 0x01
    3aa4:	ea 82       	std	Y+2, r14	; 0x02
    3aa6:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[138] = ROL(key->rk[132] + delta[5][23], 1);
    3aa8:	83 e1       	ldi	r24, 0x13	; 19
    3aaa:	c8 1a       	sub	r12, r24
    3aac:	8d e3       	ldi	r24, 0x3D	; 61
    3aae:	d8 0a       	sbc	r13, r24
    3ab0:	8c e9       	ldi	r24, 0x9C	; 156
    3ab2:	e8 0a       	sbc	r14, r24
    3ab4:	8a ef       	ldi	r24, 0xFA	; 250
    3ab6:	f8 0a       	sbc	r15, r24
    3ab8:	cc 0c       	add	r12, r12
    3aba:	dd 1c       	adc	r13, r13
    3abc:	ee 1c       	adc	r14, r14
    3abe:	ff 1c       	adc	r15, r15
    3ac0:	c1 1c       	adc	r12, r1
    3ac2:	68 96       	adiw	r28, 0x18	; 24
    3ac4:	c8 82       	st	Y, r12
    3ac6:	d9 82       	std	Y+1, r13	; 0x01
    3ac8:	ea 82       	std	Y+2, r14	; 0x02
    3aca:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[144] = ROL(key->rk[138] + delta[0][24], 1);
    3acc:	87 e1       	ldi	r24, 0x17	; 23
    3ace:	c8 1a       	sub	r12, r24
    3ad0:	80 e1       	ldi	r24, 0x10	; 16
    3ad2:	d8 0a       	sbc	r13, r24
    3ad4:	8c e3       	ldi	r24, 0x3C	; 60
    3ad6:	e8 0a       	sbc	r14, r24
    3ad8:	84 e2       	ldi	r24, 0x24	; 36
    3ada:	f8 0a       	sbc	r15, r24
    3adc:	cc 0c       	add	r12, r12
    3ade:	dd 1c       	adc	r13, r13
    3ae0:	ee 1c       	adc	r14, r14
    3ae2:	ff 1c       	adc	r15, r15
    3ae4:	c1 1c       	adc	r12, r1
    3ae6:	68 96       	adiw	r28, 0x18	; 24
    3ae8:	c8 82       	st	Y, r12
    3aea:	d9 82       	std	Y+1, r13	; 0x01
    3aec:	ea 82       	std	Y+2, r14	; 0x02
    3aee:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[150] = ROL(key->rk[144] + delta[1][25], 1);
    3af0:	8a e2       	ldi	r24, 0x2A	; 42
    3af2:	c8 1a       	sub	r12, r24
    3af4:	8b e3       	ldi	r24, 0x3B	; 59
    3af6:	d8 0a       	sbc	r13, r24
    3af8:	87 e7       	ldi	r24, 0x77	; 119
    3afa:	e8 0a       	sbc	r14, r24
    3afc:	8b ef       	ldi	r24, 0xFB	; 251
    3afe:	f8 0a       	sbc	r15, r24
    3b00:	cc 0c       	add	r12, r12
    3b02:	dd 1c       	adc	r13, r13
    3b04:	ee 1c       	adc	r14, r14
    3b06:	ff 1c       	adc	r15, r15
    3b08:	c1 1c       	adc	r12, r1
    3b0a:	68 96       	adiw	r28, 0x18	; 24
    3b0c:	c8 82       	st	Y, r12
    3b0e:	d9 82       	std	Y+1, r13	; 0x01
    3b10:	ea 82       	std	Y+2, r14	; 0x02
    3b12:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[156] = ROL(key->rk[150] + delta[2][26], 1);
    3b14:	8e e0       	ldi	r24, 0x0E	; 14
    3b16:	c8 1a       	sub	r12, r24
    3b18:	86 e7       	ldi	r24, 0x76	; 118
    3b1a:	d8 0a       	sbc	r13, r24
    3b1c:	88 e1       	ldi	r24, 0x18	; 24
    3b1e:	e8 0a       	sbc	r14, r24
    3b20:	86 ed       	ldi	r24, 0xD6	; 214
    3b22:	f8 0a       	sbc	r15, r24
    3b24:	cc 0c       	add	r12, r12
    3b26:	dd 1c       	adc	r13, r13
    3b28:	ee 1c       	adc	r14, r14
    3b2a:	ff 1c       	adc	r15, r15
    3b2c:	c1 1c       	adc	r12, r1
    3b2e:	68 96       	adiw	r28, 0x18	; 24
    3b30:	c8 82       	st	Y, r12
    3b32:	d9 82       	std	Y+1, r13	; 0x01
    3b34:	ea 82       	std	Y+2, r14	; 0x02
    3b36:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[162] = ROL(key->rk[156] + delta[3][27], 1);
    3b38:	89 e7       	ldi	r24, 0x79	; 121
    3b3a:	c8 1a       	sub	r12, r24
    3b3c:	86 e0       	ldi	r24, 0x06	; 6
    3b3e:	d8 0a       	sbc	r13, r24
    3b40:	89 e3       	ldi	r24, 0x39	; 57
    3b42:	e8 0a       	sbc	r14, r24
    3b44:	8c e9       	ldi	r24, 0x9C	; 156
    3b46:	f8 0a       	sbc	r15, r24
    3b48:	cc 0c       	add	r12, r12
    3b4a:	dd 1c       	adc	r13, r13
    3b4c:	ee 1c       	adc	r14, r14
    3b4e:	ff 1c       	adc	r15, r15
    3b50:	c1 1c       	adc	r12, r1
    3b52:	68 96       	adiw	r28, 0x18	; 24
    3b54:	c8 82       	st	Y, r12
    3b56:	d9 82       	std	Y+1, r13	; 0x01
    3b58:	ea 82       	std	Y+2, r14	; 0x02
    3b5a:	fb 82       	std	Y+3, r15	; 0x03

		key->rk[  1] = ROL(loadU32(_mk[1]) + delta[0][ 1], 3);
    3b5c:	14 96       	adiw	r26, 0x04	; 4
    3b5e:	8d 90       	ld	r8, X+
    3b60:	9d 90       	ld	r9, X+
    3b62:	ad 90       	ld	r10, X+
    3b64:	bc 90       	ld	r11, X
    3b66:	17 97       	sbiw	r26, 0x07	; 7
    3b68:	89 e4       	ldi	r24, 0x49	; 73
    3b6a:	88 1a       	sub	r8, r24
    3b6c:	8c e2       	ldi	r24, 0x2C	; 44
    3b6e:	98 0a       	sbc	r9, r24
    3b70:	80 e2       	ldi	r24, 0x20	; 32
    3b72:	a8 0a       	sbc	r10, r24
    3b74:	88 e7       	ldi	r24, 0x78	; 120
    3b76:	b8 0a       	sbc	r11, r24
    3b78:	75 01       	movw	r14, r10
    3b7a:	64 01       	movw	r12, r8
    3b7c:	1d e1       	ldi	r17, 0x1D	; 29
    3b7e:	f6 94       	lsr	r15
    3b80:	e7 94       	ror	r14
    3b82:	d7 94       	ror	r13
    3b84:	c7 94       	ror	r12
    3b86:	1a 95       	dec	r17
    3b88:	d1 f7       	brne	.-12     	; 0x3b7e <lea_init+0x1b98>
    3b8a:	03 e0       	ldi	r16, 0x03	; 3
    3b8c:	88 0c       	add	r8, r8
    3b8e:	99 1c       	adc	r9, r9
    3b90:	aa 1c       	adc	r10, r10
    3b92:	bb 1c       	adc	r11, r11
    3b94:	0a 95       	dec	r16
    3b96:	d1 f7       	brne	.-12     	; 0x3b8c <lea_init+0x1ba6>
    3b98:	8c 28       	or	r8, r12
    3b9a:	9d 28       	or	r9, r13
    3b9c:	ae 28       	or	r10, r14
    3b9e:	bf 28       	or	r11, r15
    3ba0:	84 82       	std	Z+4, r8	; 0x04
    3ba2:	95 82       	std	Z+5, r9	; 0x05
    3ba4:	a6 82       	std	Z+6, r10	; 0x06
    3ba6:	b7 82       	std	Z+7, r11	; 0x07
		key->rk[  7] = ROL(key->rk[  1] + delta[1][ 2], 3);
    3ba8:	87 ef       	ldi	r24, 0xF7	; 247
    3baa:	88 1a       	sub	r8, r24
    3bac:	83 e5       	ldi	r24, 0x53	; 83
    3bae:	98 0a       	sbc	r9, r24
    3bb0:	86 e7       	ldi	r24, 0x76	; 118
    3bb2:	a8 0a       	sbc	r10, r24
    3bb4:	8e ee       	ldi	r24, 0xEE	; 238
    3bb6:	b8 0a       	sbc	r11, r24
    3bb8:	75 01       	movw	r14, r10
    3bba:	64 01       	movw	r12, r8
    3bbc:	8d e1       	ldi	r24, 0x1D	; 29
    3bbe:	f6 94       	lsr	r15
    3bc0:	e7 94       	ror	r14
    3bc2:	d7 94       	ror	r13
    3bc4:	c7 94       	ror	r12
    3bc6:	8a 95       	dec	r24
    3bc8:	d1 f7       	brne	.-12     	; 0x3bbe <lea_init+0x1bd8>
    3bca:	93 e0       	ldi	r25, 0x03	; 3
    3bcc:	88 0c       	add	r8, r8
    3bce:	99 1c       	adc	r9, r9
    3bd0:	aa 1c       	adc	r10, r10
    3bd2:	bb 1c       	adc	r11, r11
    3bd4:	9a 95       	dec	r25
    3bd6:	d1 f7       	brne	.-12     	; 0x3bcc <lea_init+0x1be6>
    3bd8:	8c 28       	or	r8, r12
    3bda:	9d 28       	or	r9, r13
    3bdc:	ae 28       	or	r10, r14
    3bde:	bf 28       	or	r11, r15
    3be0:	84 8e       	std	Z+28, r8	; 0x1c
    3be2:	95 8e       	std	Z+29, r9	; 0x1d
    3be4:	a6 8e       	std	Z+30, r10	; 0x1e
    3be6:	b7 8e       	std	Z+31, r11	; 0x1f
		key->rk[ 13] = ROL(key->rk[  7] + delta[2][ 3], 3);
    3be8:	8d ea       	ldi	r24, 0xAD	; 173
    3bea:	88 1a       	sub	r8, r24
    3bec:	8b e1       	ldi	r24, 0x1B	; 27
    3bee:	98 0a       	sbc	r9, r24
    3bf0:	8c ee       	ldi	r24, 0xEC	; 236
    3bf2:	a8 0a       	sbc	r10, r24
    3bf4:	80 e3       	ldi	r24, 0x30	; 48
    3bf6:	b8 0a       	sbc	r11, r24
    3bf8:	75 01       	movw	r14, r10
    3bfa:	64 01       	movw	r12, r8
    3bfc:	6d e1       	ldi	r22, 0x1D	; 29
    3bfe:	f6 94       	lsr	r15
    3c00:	e7 94       	ror	r14
    3c02:	d7 94       	ror	r13
    3c04:	c7 94       	ror	r12
    3c06:	6a 95       	dec	r22
    3c08:	d1 f7       	brne	.-12     	; 0x3bfe <lea_init+0x1c18>
    3c0a:	73 e0       	ldi	r23, 0x03	; 3
    3c0c:	88 0c       	add	r8, r8
    3c0e:	99 1c       	adc	r9, r9
    3c10:	aa 1c       	adc	r10, r10
    3c12:	bb 1c       	adc	r11, r11
    3c14:	7a 95       	dec	r23
    3c16:	d1 f7       	brne	.-12     	; 0x3c0c <lea_init+0x1c26>
    3c18:	8c 28       	or	r8, r12
    3c1a:	9d 28       	or	r9, r13
    3c1c:	ae 28       	or	r10, r14
    3c1e:	bf 28       	or	r11, r15
    3c20:	84 aa       	std	Z+52, r8	; 0x34
    3c22:	95 aa       	std	Z+53, r9	; 0x35
    3c24:	a6 aa       	std	Z+54, r10	; 0x36
    3c26:	b7 aa       	std	Z+55, r11	; 0x37
		key->rk[ 19] = ROL(key->rk[ 13] + delta[3][ 4], 3);
    3c28:	89 e3       	ldi	r24, 0x39	; 57
    3c2a:	88 1a       	sub	r8, r24
    3c2c:	81 ef       	ldi	r24, 0xF1	; 241
    3c2e:	98 0a       	sbc	r9, r24
    3c30:	8c e0       	ldi	r24, 0x0C	; 12
    3c32:	a8 0a       	sbc	r10, r24
    3c34:	82 e7       	ldi	r24, 0x72	; 114
    3c36:	b8 0a       	sbc	r11, r24
    3c38:	75 01       	movw	r14, r10
    3c3a:	64 01       	movw	r12, r8
    3c3c:	1d e1       	ldi	r17, 0x1D	; 29
    3c3e:	f6 94       	lsr	r15
    3c40:	e7 94       	ror	r14
    3c42:	d7 94       	ror	r13
    3c44:	c7 94       	ror	r12
    3c46:	1a 95       	dec	r17
    3c48:	d1 f7       	brne	.-12     	; 0x3c3e <lea_init+0x1c58>
    3c4a:	03 e0       	ldi	r16, 0x03	; 3
    3c4c:	88 0c       	add	r8, r8
    3c4e:	99 1c       	adc	r9, r9
    3c50:	aa 1c       	adc	r10, r10
    3c52:	bb 1c       	adc	r11, r11
    3c54:	0a 95       	dec	r16
    3c56:	d1 f7       	brne	.-12     	; 0x3c4c <lea_init+0x1c66>
    3c58:	8c 28       	or	r8, r12
    3c5a:	9d 28       	or	r9, r13
    3c5c:	ae 28       	or	r10, r14
    3c5e:	bf 28       	or	r11, r15
    3c60:	cc 53       	subi	r28, 0x3C	; 60
    3c62:	d2 40       	sbci	r29, 0x02	; 2
    3c64:	88 82       	st	Y, r8
    3c66:	99 82       	std	Y+1, r9	; 0x01
    3c68:	aa 82       	std	Y+2, r10	; 0x02
    3c6a:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 25] = ROL(key->rk[ 19] + delta[4][ 5], 3);
    3c6c:	82 e3       	ldi	r24, 0x32	; 50
    3c6e:	88 1a       	sub	r8, r24
    3c70:	8c e6       	ldi	r24, 0x6C	; 108
    3c72:	98 0a       	sbc	r9, r24
    3c74:	8b e2       	ldi	r24, 0x2B	; 43
    3c76:	a8 0a       	sbc	r10, r24
    3c78:	84 ed       	ldi	r24, 0xD4	; 212
    3c7a:	b8 0a       	sbc	r11, r24
    3c7c:	75 01       	movw	r14, r10
    3c7e:	64 01       	movw	r12, r8
    3c80:	8d e1       	ldi	r24, 0x1D	; 29
    3c82:	f6 94       	lsr	r15
    3c84:	e7 94       	ror	r14
    3c86:	d7 94       	ror	r13
    3c88:	c7 94       	ror	r12
    3c8a:	8a 95       	dec	r24
    3c8c:	d1 f7       	brne	.-12     	; 0x3c82 <lea_init+0x1c9c>
    3c8e:	93 e0       	ldi	r25, 0x03	; 3
    3c90:	88 0c       	add	r8, r8
    3c92:	99 1c       	adc	r9, r9
    3c94:	aa 1c       	adc	r10, r10
    3c96:	bb 1c       	adc	r11, r11
    3c98:	9a 95       	dec	r25
    3c9a:	d1 f7       	brne	.-12     	; 0x3c90 <lea_init+0x1caa>
    3c9c:	8c 28       	or	r8, r12
    3c9e:	9d 28       	or	r9, r13
    3ca0:	ae 28       	or	r10, r14
    3ca2:	bf 28       	or	r11, r15
    3ca4:	68 96       	adiw	r28, 0x18	; 24
    3ca6:	88 82       	st	Y, r8
    3ca8:	99 82       	std	Y+1, r9	; 0x01
    3caa:	aa 82       	std	Y+2, r10	; 0x02
    3cac:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 31] = ROL(key->rk[ 25] + delta[5][ 6], 3);
    3cae:	8f e4       	ldi	r24, 0x4F	; 79
    3cb0:	88 1a       	sub	r8, r24
    3cb2:	8d e7       	ldi	r24, 0x7D	; 125
    3cb4:	98 0a       	sbc	r9, r24
    3cb6:	89 e8       	ldi	r24, 0x89	; 137
    3cb8:	a8 0a       	sbc	r10, r24
    3cba:	8e e1       	ldi	r24, 0x1E	; 30
    3cbc:	b8 0a       	sbc	r11, r24
    3cbe:	75 01       	movw	r14, r10
    3cc0:	64 01       	movw	r12, r8
    3cc2:	6d e1       	ldi	r22, 0x1D	; 29
    3cc4:	f6 94       	lsr	r15
    3cc6:	e7 94       	ror	r14
    3cc8:	d7 94       	ror	r13
    3cca:	c7 94       	ror	r12
    3ccc:	6a 95       	dec	r22
    3cce:	d1 f7       	brne	.-12     	; 0x3cc4 <lea_init+0x1cde>
    3cd0:	73 e0       	ldi	r23, 0x03	; 3
    3cd2:	88 0c       	add	r8, r8
    3cd4:	99 1c       	adc	r9, r9
    3cd6:	aa 1c       	adc	r10, r10
    3cd8:	bb 1c       	adc	r11, r11
    3cda:	7a 95       	dec	r23
    3cdc:	d1 f7       	brne	.-12     	; 0x3cd2 <lea_init+0x1cec>
    3cde:	8c 28       	or	r8, r12
    3ce0:	9d 28       	or	r9, r13
    3ce2:	ae 28       	or	r10, r14
    3ce4:	bf 28       	or	r11, r15
    3ce6:	68 96       	adiw	r28, 0x18	; 24
    3ce8:	88 82       	st	Y, r8
    3cea:	99 82       	std	Y+1, r9	; 0x01
    3cec:	aa 82       	std	Y+2, r10	; 0x02
    3cee:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 37] = ROL(key->rk[ 31] + delta[0][ 7], 3);
    3cf0:	8f e1       	ldi	r24, 0x1F	; 31
    3cf2:	88 1a       	sub	r8, r24
    3cf4:	82 e1       	ldi	r24, 0x12	; 18
    3cf6:	98 0a       	sbc	r9, r24
    3cf8:	8b e0       	ldi	r24, 0x0B	; 11
    3cfa:	a8 0a       	sbc	r10, r24
    3cfc:	88 e0       	ldi	r24, 0x08	; 8
    3cfe:	b8 0a       	sbc	r11, r24
    3d00:	75 01       	movw	r14, r10
    3d02:	64 01       	movw	r12, r8
    3d04:	1d e1       	ldi	r17, 0x1D	; 29
    3d06:	f6 94       	lsr	r15
    3d08:	e7 94       	ror	r14
    3d0a:	d7 94       	ror	r13
    3d0c:	c7 94       	ror	r12
    3d0e:	1a 95       	dec	r17
    3d10:	d1 f7       	brne	.-12     	; 0x3d06 <lea_init+0x1d20>
    3d12:	03 e0       	ldi	r16, 0x03	; 3
    3d14:	88 0c       	add	r8, r8
    3d16:	99 1c       	adc	r9, r9
    3d18:	aa 1c       	adc	r10, r10
    3d1a:	bb 1c       	adc	r11, r11
    3d1c:	0a 95       	dec	r16
    3d1e:	d1 f7       	brne	.-12     	; 0x3d14 <lea_init+0x1d2e>
    3d20:	8c 28       	or	r8, r12
    3d22:	9d 28       	or	r9, r13
    3d24:	ae 28       	or	r10, r14
    3d26:	bf 28       	or	r11, r15
    3d28:	68 96       	adiw	r28, 0x18	; 24
    3d2a:	88 82       	st	Y, r8
    3d2c:	99 82       	std	Y+1, r9	; 0x01
    3d2e:	aa 82       	std	Y+2, r10	; 0x02
    3d30:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 43] = ROL(key->rk[ 37] + delta[1][ 8], 3);
    3d32:	8c eb       	ldi	r24, 0xBC	; 188
    3d34:	88 1a       	sub	r8, r24
    3d36:	8d ef       	ldi	r24, 0xFD	; 253
    3d38:	98 0a       	sbc	r9, r24
    3d3a:	84 e9       	ldi	r24, 0x94	; 148
    3d3c:	a8 0a       	sbc	r10, r24
    3d3e:	8d e9       	ldi	r24, 0x9D	; 157
    3d40:	b8 0a       	sbc	r11, r24
    3d42:	75 01       	movw	r14, r10
    3d44:	64 01       	movw	r12, r8
    3d46:	8d e1       	ldi	r24, 0x1D	; 29
    3d48:	f6 94       	lsr	r15
    3d4a:	e7 94       	ror	r14
    3d4c:	d7 94       	ror	r13
    3d4e:	c7 94       	ror	r12
    3d50:	8a 95       	dec	r24
    3d52:	d1 f7       	brne	.-12     	; 0x3d48 <lea_init+0x1d62>
    3d54:	93 e0       	ldi	r25, 0x03	; 3
    3d56:	88 0c       	add	r8, r8
    3d58:	99 1c       	adc	r9, r9
    3d5a:	aa 1c       	adc	r10, r10
    3d5c:	bb 1c       	adc	r11, r11
    3d5e:	9a 95       	dec	r25
    3d60:	d1 f7       	brne	.-12     	; 0x3d56 <lea_init+0x1d70>
    3d62:	8c 28       	or	r8, r12
    3d64:	9d 28       	or	r9, r13
    3d66:	ae 28       	or	r10, r14
    3d68:	bf 28       	or	r11, r15
    3d6a:	68 96       	adiw	r28, 0x18	; 24
    3d6c:	88 82       	st	Y, r8
    3d6e:	99 82       	std	Y+1, r9	; 0x01
    3d70:	aa 82       	std	Y+2, r10	; 0x02
    3d72:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 49] = ROL(key->rk[ 43] + delta[2][ 9], 3);
    3d74:	8d e0       	ldi	r24, 0x0D	; 13
    3d76:	88 1a       	sub	r8, r24
    3d78:	8b ee       	ldi	r24, 0xEB	; 235
    3d7a:	98 0a       	sbc	r9, r24
    3d7c:	86 e0       	ldi	r24, 0x06	; 6
    3d7e:	a8 0a       	sbc	r10, r24
    3d80:	8b e3       	ldi	r24, 0x3B	; 59
    3d82:	b8 0a       	sbc	r11, r24
    3d84:	75 01       	movw	r14, r10
    3d86:	64 01       	movw	r12, r8
    3d88:	6d e1       	ldi	r22, 0x1D	; 29
    3d8a:	f6 94       	lsr	r15
    3d8c:	e7 94       	ror	r14
    3d8e:	d7 94       	ror	r13
    3d90:	c7 94       	ror	r12
    3d92:	6a 95       	dec	r22
    3d94:	d1 f7       	brne	.-12     	; 0x3d8a <lea_init+0x1da4>
    3d96:	73 e0       	ldi	r23, 0x03	; 3
    3d98:	88 0c       	add	r8, r8
    3d9a:	99 1c       	adc	r9, r9
    3d9c:	aa 1c       	adc	r10, r10
    3d9e:	bb 1c       	adc	r11, r11
    3da0:	7a 95       	dec	r23
    3da2:	d1 f7       	brne	.-12     	; 0x3d98 <lea_init+0x1db2>
    3da4:	8c 28       	or	r8, r12
    3da6:	9d 28       	or	r9, r13
    3da8:	ae 28       	or	r10, r14
    3daa:	bf 28       	or	r11, r15
    3dac:	68 96       	adiw	r28, 0x18	; 24
    3dae:	88 82       	st	Y, r8
    3db0:	99 82       	std	Y+1, r9	; 0x01
    3db2:	aa 82       	std	Y+2, r10	; 0x02
    3db4:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 55] = ROL(key->rk[ 49] + delta[3][10], 3);
    3db6:	8d e1       	ldi	r24, 0x1D	; 29
    3db8:	88 1a       	sub	r8, r24
    3dba:	8e e4       	ldi	r24, 0x4E	; 78
    3dbc:	98 0a       	sbc	r9, r24
    3dbe:	8c e3       	ldi	r24, 0x3C	; 60
    3dc0:	a8 0a       	sbc	r10, r24
    3dc2:	83 e8       	ldi	r24, 0x83	; 131
    3dc4:	b8 0a       	sbc	r11, r24
    3dc6:	75 01       	movw	r14, r10
    3dc8:	64 01       	movw	r12, r8
    3dca:	1d e1       	ldi	r17, 0x1D	; 29
    3dcc:	f6 94       	lsr	r15
    3dce:	e7 94       	ror	r14
    3dd0:	d7 94       	ror	r13
    3dd2:	c7 94       	ror	r12
    3dd4:	1a 95       	dec	r17
    3dd6:	d1 f7       	brne	.-12     	; 0x3dcc <lea_init+0x1de6>
    3dd8:	03 e0       	ldi	r16, 0x03	; 3
    3dda:	88 0c       	add	r8, r8
    3ddc:	99 1c       	adc	r9, r9
    3dde:	aa 1c       	adc	r10, r10
    3de0:	bb 1c       	adc	r11, r11
    3de2:	0a 95       	dec	r16
    3de4:	d1 f7       	brne	.-12     	; 0x3dda <lea_init+0x1df4>
    3de6:	8c 28       	or	r8, r12
    3de8:	9d 28       	or	r9, r13
    3dea:	ae 28       	or	r10, r14
    3dec:	bf 28       	or	r11, r15
    3dee:	68 96       	adiw	r28, 0x18	; 24
    3df0:	88 82       	st	Y, r8
    3df2:	99 82       	std	Y+1, r9	; 0x01
    3df4:	aa 82       	std	Y+2, r10	; 0x02
    3df6:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 61] = ROL(key->rk[ 55] + delta[4][11], 3);
    3df8:	86 e7       	ldi	r24, 0x76	; 118
    3dfa:	88 1a       	sub	r8, r24
    3dfc:	8c e0       	ldi	r24, 0x0C	; 12
    3dfe:	98 0a       	sbc	r9, r24
    3e00:	8b ed       	ldi	r24, 0xDB	; 219
    3e02:	a8 0a       	sbc	r10, r24
    3e04:	8a e0       	ldi	r24, 0x0A	; 10
    3e06:	b8 0a       	sbc	r11, r24
    3e08:	75 01       	movw	r14, r10
    3e0a:	64 01       	movw	r12, r8
    3e0c:	8d e1       	ldi	r24, 0x1D	; 29
    3e0e:	f6 94       	lsr	r15
    3e10:	e7 94       	ror	r14
    3e12:	d7 94       	ror	r13
    3e14:	c7 94       	ror	r12
    3e16:	8a 95       	dec	r24
    3e18:	d1 f7       	brne	.-12     	; 0x3e0e <lea_init+0x1e28>
    3e1a:	93 e0       	ldi	r25, 0x03	; 3
    3e1c:	88 0c       	add	r8, r8
    3e1e:	99 1c       	adc	r9, r9
    3e20:	aa 1c       	adc	r10, r10
    3e22:	bb 1c       	adc	r11, r11
    3e24:	9a 95       	dec	r25
    3e26:	d1 f7       	brne	.-12     	; 0x3e1c <lea_init+0x1e36>
    3e28:	8c 28       	or	r8, r12
    3e2a:	9d 28       	or	r9, r13
    3e2c:	ae 28       	or	r10, r14
    3e2e:	bf 28       	or	r11, r15
    3e30:	68 96       	adiw	r28, 0x18	; 24
    3e32:	88 82       	st	Y, r8
    3e34:	99 82       	std	Y+1, r9	; 0x01
    3e36:	aa 82       	std	Y+2, r10	; 0x02
    3e38:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 67] = ROL(key->rk[ 61] + delta[5][12], 3);
    3e3a:	88 e8       	ldi	r24, 0x88	; 136
    3e3c:	88 1a       	sub	r8, r24
    3e3e:	83 e5       	ldi	r24, 0x53	; 83
    3e40:	98 0a       	sbc	r9, r24
    3e42:	8f e5       	ldi	r24, 0x5F	; 95
    3e44:	a8 0a       	sbc	r10, r24
    3e46:	82 ea       	ldi	r24, 0xA2	; 162
    3e48:	b8 0a       	sbc	r11, r24
    3e4a:	75 01       	movw	r14, r10
    3e4c:	64 01       	movw	r12, r8
    3e4e:	6d e1       	ldi	r22, 0x1D	; 29
    3e50:	f6 94       	lsr	r15
    3e52:	e7 94       	ror	r14
    3e54:	d7 94       	ror	r13
    3e56:	c7 94       	ror	r12
    3e58:	6a 95       	dec	r22
    3e5a:	d1 f7       	brne	.-12     	; 0x3e50 <lea_init+0x1e6a>
    3e5c:	73 e0       	ldi	r23, 0x03	; 3
    3e5e:	88 0c       	add	r8, r8
    3e60:	99 1c       	adc	r9, r9
    3e62:	aa 1c       	adc	r10, r10
    3e64:	bb 1c       	adc	r11, r11
    3e66:	7a 95       	dec	r23
    3e68:	d1 f7       	brne	.-12     	; 0x3e5e <lea_init+0x1e78>
    3e6a:	8c 28       	or	r8, r12
    3e6c:	9d 28       	or	r9, r13
    3e6e:	ae 28       	or	r10, r14
    3e70:	bf 28       	or	r11, r15
    3e72:	68 96       	adiw	r28, 0x18	; 24
    3e74:	88 82       	st	Y, r8
    3e76:	99 82       	std	Y+1, r9	; 0x01
    3e78:	aa 82       	std	Y+2, r10	; 0x02
    3e7a:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 73] = ROL(key->rk[ 67] + delta[0][13], 3);
    3e7c:	83 e8       	ldi	r24, 0x83	; 131
    3e7e:	88 1a       	sub	r8, r24
    3e80:	87 e8       	ldi	r24, 0x87	; 135
    3e82:	98 0a       	sbc	r9, r24
    3e84:	84 ec       	ldi	r24, 0xC4	; 196
    3e86:	a8 0a       	sbc	r10, r24
    3e88:	82 e0       	ldi	r24, 0x02	; 2
    3e8a:	b8 0a       	sbc	r11, r24
    3e8c:	75 01       	movw	r14, r10
    3e8e:	64 01       	movw	r12, r8
    3e90:	1d e1       	ldi	r17, 0x1D	; 29
    3e92:	f6 94       	lsr	r15
    3e94:	e7 94       	ror	r14
    3e96:	d7 94       	ror	r13
    3e98:	c7 94       	ror	r12
    3e9a:	1a 95       	dec	r17
    3e9c:	d1 f7       	brne	.-12     	; 0x3e92 <lea_init+0x1eac>
    3e9e:	03 e0       	ldi	r16, 0x03	; 3
    3ea0:	88 0c       	add	r8, r8
    3ea2:	99 1c       	adc	r9, r9
    3ea4:	aa 1c       	adc	r10, r10
    3ea6:	bb 1c       	adc	r11, r11
    3ea8:	0a 95       	dec	r16
    3eaa:	d1 f7       	brne	.-12     	; 0x3ea0 <lea_init+0x1eba>
    3eac:	8c 28       	or	r8, r12
    3eae:	9d 28       	or	r9, r13
    3eb0:	ae 28       	or	r10, r14
    3eb2:	bf 28       	or	r11, r15
    3eb4:	68 96       	adiw	r28, 0x18	; 24
    3eb6:	88 82       	st	Y, r8
    3eb8:	99 82       	std	Y+1, r9	; 0x01
    3eba:	aa 82       	std	Y+2, r10	; 0x02
    3ebc:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 79] = ROL(key->rk[ 73] + delta[1][14], 3);
    3ebe:	88 ee       	ldi	r24, 0xE8	; 232
    3ec0:	88 1a       	sub	r8, r24
    3ec2:	8e e6       	ldi	r24, 0x6E	; 110
    3ec4:	98 0a       	sbc	r9, r24
    3ec6:	8f e3       	ldi	r24, 0x3F	; 63
    3ec8:	a8 0a       	sbc	r10, r24
    3eca:	85 e6       	ldi	r24, 0x65	; 101
    3ecc:	b8 0a       	sbc	r11, r24
    3ece:	75 01       	movw	r14, r10
    3ed0:	64 01       	movw	r12, r8
    3ed2:	8d e1       	ldi	r24, 0x1D	; 29
    3ed4:	f6 94       	lsr	r15
    3ed6:	e7 94       	ror	r14
    3ed8:	d7 94       	ror	r13
    3eda:	c7 94       	ror	r12
    3edc:	8a 95       	dec	r24
    3ede:	d1 f7       	brne	.-12     	; 0x3ed4 <lea_init+0x1eee>
    3ee0:	93 e0       	ldi	r25, 0x03	; 3
    3ee2:	88 0c       	add	r8, r8
    3ee4:	99 1c       	adc	r9, r9
    3ee6:	aa 1c       	adc	r10, r10
    3ee8:	bb 1c       	adc	r11, r11
    3eea:	9a 95       	dec	r25
    3eec:	d1 f7       	brne	.-12     	; 0x3ee2 <lea_init+0x1efc>
    3eee:	8c 28       	or	r8, r12
    3ef0:	9d 28       	or	r9, r13
    3ef2:	ae 28       	or	r10, r14
    3ef4:	bf 28       	or	r11, r15
    3ef6:	68 96       	adiw	r28, 0x18	; 24
    3ef8:	88 82       	st	Y, r8
    3efa:	99 82       	std	Y+1, r9	; 0x01
    3efc:	aa 82       	std	Y+2, r10	; 0x02
    3efe:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 85] = ROL(key->rk[ 79] + delta[2][15], 3);
    3f00:	8f e0       	ldi	r24, 0x0F	; 15
    3f02:	88 1a       	sub	r8, r24
    3f04:	83 ec       	ldi	r24, 0xC3	; 195
    3f06:	98 0a       	sbc	r9, r24
    3f08:	8a eb       	ldi	r24, 0xBA	; 186
    3f0a:	a8 0a       	sbc	r10, r24
    3f0c:	81 ec       	ldi	r24, 0xC1	; 193
    3f0e:	b8 0a       	sbc	r11, r24
    3f10:	75 01       	movw	r14, r10
    3f12:	64 01       	movw	r12, r8
    3f14:	6d e1       	ldi	r22, 0x1D	; 29
    3f16:	f6 94       	lsr	r15
    3f18:	e7 94       	ror	r14
    3f1a:	d7 94       	ror	r13
    3f1c:	c7 94       	ror	r12
    3f1e:	6a 95       	dec	r22
    3f20:	d1 f7       	brne	.-12     	; 0x3f16 <lea_init+0x1f30>
    3f22:	73 e0       	ldi	r23, 0x03	; 3
    3f24:	88 0c       	add	r8, r8
    3f26:	99 1c       	adc	r9, r9
    3f28:	aa 1c       	adc	r10, r10
    3f2a:	bb 1c       	adc	r11, r11
    3f2c:	7a 95       	dec	r23
    3f2e:	d1 f7       	brne	.-12     	; 0x3f24 <lea_init+0x1f3e>
    3f30:	8c 28       	or	r8, r12
    3f32:	9d 28       	or	r9, r13
    3f34:	ae 28       	or	r10, r14
    3f36:	bf 28       	or	r11, r15
    3f38:	68 96       	adiw	r28, 0x18	; 24
    3f3a:	88 82       	st	Y, r8
    3f3c:	99 82       	std	Y+1, r9	; 0x01
    3f3e:	aa 82       	std	Y+2, r10	; 0x02
    3f40:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 91] = ROL(key->rk[ 85] + delta[3][16], 3);
    3f42:	81 e2       	ldi	r24, 0x21	; 33
    3f44:	88 1a       	sub	r8, r24
    3f46:	87 e8       	ldi	r24, 0x87	; 135
    3f48:	98 0a       	sbc	r9, r24
    3f4a:	83 e1       	ldi	r24, 0x13	; 19
    3f4c:	a8 0a       	sbc	r10, r24
    3f4e:	8f ec       	ldi	r24, 0xCF	; 207
    3f50:	b8 0a       	sbc	r11, r24
    3f52:	75 01       	movw	r14, r10
    3f54:	64 01       	movw	r12, r8
    3f56:	1d e1       	ldi	r17, 0x1D	; 29
    3f58:	f6 94       	lsr	r15
    3f5a:	e7 94       	ror	r14
    3f5c:	d7 94       	ror	r13
    3f5e:	c7 94       	ror	r12
    3f60:	1a 95       	dec	r17
    3f62:	d1 f7       	brne	.-12     	; 0x3f58 <lea_init+0x1f72>
    3f64:	03 e0       	ldi	r16, 0x03	; 3
    3f66:	88 0c       	add	r8, r8
    3f68:	99 1c       	adc	r9, r9
    3f6a:	aa 1c       	adc	r10, r10
    3f6c:	bb 1c       	adc	r11, r11
    3f6e:	0a 95       	dec	r16
    3f70:	d1 f7       	brne	.-12     	; 0x3f66 <lea_init+0x1f80>
    3f72:	8c 28       	or	r8, r12
    3f74:	9d 28       	or	r9, r13
    3f76:	ae 28       	or	r10, r14
    3f78:	bf 28       	or	r11, r15
    3f7a:	68 96       	adiw	r28, 0x18	; 24
    3f7c:	88 82       	st	Y, r8
    3f7e:	99 82       	std	Y+1, r9	; 0x01
    3f80:	aa 82       	std	Y+2, r10	; 0x02
    3f82:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 97] = ROL(key->rk[ 91] + delta[4][17], 3);
    3f84:	83 e4       	ldi	r24, 0x43	; 67
    3f86:	88 1a       	sub	r8, r24
    3f88:	8d e1       	ldi	r24, 0x1D	; 29
    3f8a:	98 0a       	sbc	r9, r24
    3f8c:	83 ec       	ldi	r24, 0xC3	; 195
    3f8e:	a8 0a       	sbc	r10, r24
    3f90:	86 eb       	ldi	r24, 0xB6	; 182
    3f92:	b8 0a       	sbc	r11, r24
    3f94:	75 01       	movw	r14, r10
    3f96:	64 01       	movw	r12, r8
    3f98:	8d e1       	ldi	r24, 0x1D	; 29
    3f9a:	f6 94       	lsr	r15
    3f9c:	e7 94       	ror	r14
    3f9e:	d7 94       	ror	r13
    3fa0:	c7 94       	ror	r12
    3fa2:	8a 95       	dec	r24
    3fa4:	d1 f7       	brne	.-12     	; 0x3f9a <lea_init+0x1fb4>
    3fa6:	93 e0       	ldi	r25, 0x03	; 3
    3fa8:	88 0c       	add	r8, r8
    3faa:	99 1c       	adc	r9, r9
    3fac:	aa 1c       	adc	r10, r10
    3fae:	bb 1c       	adc	r11, r11
    3fb0:	9a 95       	dec	r25
    3fb2:	d1 f7       	brne	.-12     	; 0x3fa8 <lea_init+0x1fc2>
    3fb4:	8c 28       	or	r8, r12
    3fb6:	9d 28       	or	r9, r13
    3fb8:	ae 28       	or	r10, r14
    3fba:	bf 28       	or	r11, r15
    3fbc:	68 96       	adiw	r28, 0x18	; 24
    3fbe:	88 82       	st	Y, r8
    3fc0:	99 82       	std	Y+1, r9	; 0x01
    3fc2:	aa 82       	std	Y+2, r10	; 0x02
    3fc4:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[103] = ROL(key->rk[ 97] + delta[5][18], 3);
    3fc6:	89 ee       	ldi	r24, 0xE9	; 233
    3fc8:	88 1a       	sub	r8, r24
    3fca:	81 ee       	ldi	r24, 0xE1	; 225
    3fcc:	98 0a       	sbc	r9, r24
    3fce:	84 ed       	ldi	r24, 0xD4	; 212
    3fd0:	a8 0a       	sbc	r10, r24
    3fd2:	87 e9       	ldi	r24, 0x97	; 151
    3fd4:	b8 0a       	sbc	r11, r24
    3fd6:	75 01       	movw	r14, r10
    3fd8:	64 01       	movw	r12, r8
    3fda:	6d e1       	ldi	r22, 0x1D	; 29
    3fdc:	f6 94       	lsr	r15
    3fde:	e7 94       	ror	r14
    3fe0:	d7 94       	ror	r13
    3fe2:	c7 94       	ror	r12
    3fe4:	6a 95       	dec	r22
    3fe6:	d1 f7       	brne	.-12     	; 0x3fdc <lea_init+0x1ff6>
    3fe8:	73 e0       	ldi	r23, 0x03	; 3
    3fea:	88 0c       	add	r8, r8
    3fec:	99 1c       	adc	r9, r9
    3fee:	aa 1c       	adc	r10, r10
    3ff0:	bb 1c       	adc	r11, r11
    3ff2:	7a 95       	dec	r23
    3ff4:	d1 f7       	brne	.-12     	; 0x3fea <lea_init+0x2004>
    3ff6:	8c 28       	or	r8, r12
    3ff8:	9d 28       	or	r9, r13
    3ffa:	ae 28       	or	r10, r14
    3ffc:	bf 28       	or	r11, r15
    3ffe:	68 96       	adiw	r28, 0x18	; 24
    4000:	88 82       	st	Y, r8
    4002:	99 82       	std	Y+1, r9	; 0x01
    4004:	aa 82       	std	Y+2, r10	; 0x02
    4006:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[109] = ROL(key->rk[103] + delta[0][19], 3);
    4008:	81 e8       	ldi	r24, 0x81	; 129
    400a:	88 1a       	sub	r8, r24
    400c:	80 ee       	ldi	r24, 0xE0	; 224
    400e:	98 0a       	sbc	r9, r24
    4010:	81 e2       	ldi	r24, 0x21	; 33
    4012:	a8 0a       	sbc	r10, r24
    4014:	81 eb       	ldi	r24, 0xB1	; 177
    4016:	b8 0a       	sbc	r11, r24
    4018:	75 01       	movw	r14, r10
    401a:	64 01       	movw	r12, r8
    401c:	1d e1       	ldi	r17, 0x1D	; 29
    401e:	f6 94       	lsr	r15
    4020:	e7 94       	ror	r14
    4022:	d7 94       	ror	r13
    4024:	c7 94       	ror	r12
    4026:	1a 95       	dec	r17
    4028:	d1 f7       	brne	.-12     	; 0x401e <__stack+0x1f>
    402a:	03 e0       	ldi	r16, 0x03	; 3
    402c:	88 0c       	add	r8, r8
    402e:	99 1c       	adc	r9, r9
    4030:	aa 1c       	adc	r10, r10
    4032:	bb 1c       	adc	r11, r11
    4034:	0a 95       	dec	r16
    4036:	d1 f7       	brne	.-12     	; 0x402c <__stack+0x2d>
    4038:	8c 28       	or	r8, r12
    403a:	9d 28       	or	r9, r13
    403c:	ae 28       	or	r10, r14
    403e:	bf 28       	or	r11, r15
    4040:	68 96       	adiw	r28, 0x18	; 24
    4042:	88 82       	st	Y, r8
    4044:	99 82       	std	Y+1, r9	; 0x01
    4046:	aa 82       	std	Y+2, r10	; 0x02
    4048:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[115] = ROL(key->rk[109] + delta[1][20], 3);
    404a:	8a ed       	ldi	r24, 0xDA	; 218
    404c:	88 1a       	sub	r8, r24
    404e:	89 eb       	ldi	r24, 0xB9	; 185
    4050:	98 0a       	sbc	r9, r24
    4052:	8b ed       	ldi	r24, 0xDB	; 219
    4054:	a8 0a       	sbc	r10, r24
    4056:	8f e4       	ldi	r24, 0x4F	; 79
    4058:	b8 0a       	sbc	r11, r24
    405a:	75 01       	movw	r14, r10
    405c:	64 01       	movw	r12, r8
    405e:	8d e1       	ldi	r24, 0x1D	; 29
    4060:	f6 94       	lsr	r15
    4062:	e7 94       	ror	r14
    4064:	d7 94       	ror	r13
    4066:	c7 94       	ror	r12
    4068:	8a 95       	dec	r24
    406a:	d1 f7       	brne	.-12     	; 0x4060 <__stack+0x61>
    406c:	93 e0       	ldi	r25, 0x03	; 3
    406e:	88 0c       	add	r8, r8
    4070:	99 1c       	adc	r9, r9
    4072:	aa 1c       	adc	r10, r10
    4074:	bb 1c       	adc	r11, r11
    4076:	9a 95       	dec	r25
    4078:	d1 f7       	brne	.-12     	; 0x406e <__stack+0x6f>
    407a:	8c 28       	or	r8, r12
    407c:	9d 28       	or	r9, r13
    407e:	ae 28       	or	r10, r14
    4080:	bf 28       	or	r11, r15
    4082:	68 96       	adiw	r28, 0x18	; 24
    4084:	88 82       	st	Y, r8
    4086:	99 82       	std	Y+1, r9	; 0x01
    4088:	aa 82       	std	Y+2, r10	; 0x02
    408a:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[121] = ROL(key->rk[115] + delta[2][21], 3);
    408c:	81 eb       	ldi	r24, 0xB1	; 177
    408e:	88 1a       	sub	r8, r24
    4090:	83 ec       	ldi	r24, 0xC3	; 195
    4092:	98 0a       	sbc	r9, r24
    4094:	80 eb       	ldi	r24, 0xB0	; 176
    4096:	a8 0a       	sbc	r10, r24
    4098:	8e e6       	ldi	r24, 0x6E	; 110
    409a:	b8 0a       	sbc	r11, r24
    409c:	75 01       	movw	r14, r10
    409e:	64 01       	movw	r12, r8
    40a0:	6d e1       	ldi	r22, 0x1D	; 29
    40a2:	f6 94       	lsr	r15
    40a4:	e7 94       	ror	r14
    40a6:	d7 94       	ror	r13
    40a8:	c7 94       	ror	r12
    40aa:	6a 95       	dec	r22
    40ac:	d1 f7       	brne	.-12     	; 0x40a2 <__stack+0xa3>
    40ae:	73 e0       	ldi	r23, 0x03	; 3
    40b0:	88 0c       	add	r8, r8
    40b2:	99 1c       	adc	r9, r9
    40b4:	aa 1c       	adc	r10, r10
    40b6:	bb 1c       	adc	r11, r11
    40b8:	7a 95       	dec	r23
    40ba:	d1 f7       	brne	.-12     	; 0x40b0 <__stack+0xb1>
    40bc:	8c 28       	or	r8, r12
    40be:	9d 28       	or	r9, r13
    40c0:	ae 28       	or	r10, r14
    40c2:	bf 28       	or	r11, r15
    40c4:	68 96       	adiw	r28, 0x18	; 24
    40c6:	88 82       	st	Y, r8
    40c8:	99 82       	std	Y+1, r9	; 0x01
    40ca:	aa 82       	std	Y+2, r10	; 0x02
    40cc:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[127] = ROL(key->rk[121] + delta[3][22], 3);
    40ce:	84 e3       	ldi	r24, 0x34	; 52
    40d0:	88 1a       	sub	r8, r24
    40d2:	88 ec       	ldi	r24, 0xC8	; 200
    40d4:	98 0a       	sbc	r9, r24
    40d6:	81 ee       	ldi	r24, 0xE1	; 225
    40d8:	a8 0a       	sbc	r10, r24
    40da:	84 ec       	ldi	r24, 0xC4	; 196
    40dc:	b8 0a       	sbc	r11, r24
    40de:	75 01       	movw	r14, r10
    40e0:	64 01       	movw	r12, r8
    40e2:	1d e1       	ldi	r17, 0x1D	; 29
    40e4:	f6 94       	lsr	r15
    40e6:	e7 94       	ror	r14
    40e8:	d7 94       	ror	r13
    40ea:	c7 94       	ror	r12
    40ec:	1a 95       	dec	r17
    40ee:	d1 f7       	brne	.-12     	; 0x40e4 <__stack+0xe5>
    40f0:	03 e0       	ldi	r16, 0x03	; 3
    40f2:	88 0c       	add	r8, r8
    40f4:	99 1c       	adc	r9, r9
    40f6:	aa 1c       	adc	r10, r10
    40f8:	bb 1c       	adc	r11, r11
    40fa:	0a 95       	dec	r16
    40fc:	d1 f7       	brne	.-12     	; 0x40f2 <__stack+0xf3>
    40fe:	8c 28       	or	r8, r12
    4100:	9d 28       	or	r9, r13
    4102:	ae 28       	or	r10, r14
    4104:	bf 28       	or	r11, r15
    4106:	68 96       	adiw	r28, 0x18	; 24
    4108:	88 82       	st	Y, r8
    410a:	99 82       	std	Y+1, r9	; 0x01
    410c:	aa 82       	std	Y+2, r10	; 0x02
    410e:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[133] = ROL(key->rk[127] + delta[4][23], 3);
    4110:	8e ea       	ldi	r24, 0xAE	; 174
    4112:	88 1a       	sub	r8, r24
    4114:	80 e5       	ldi	r24, 0x50	; 80
    4116:	98 0a       	sbc	r9, r24
    4118:	87 ec       	ldi	r24, 0xC7	; 199
    411a:	a8 0a       	sbc	r10, r24
    411c:	80 eb       	ldi	r24, 0xB0	; 176
    411e:	b8 0a       	sbc	r11, r24
    4120:	75 01       	movw	r14, r10
    4122:	64 01       	movw	r12, r8
    4124:	8d e1       	ldi	r24, 0x1D	; 29
    4126:	f6 94       	lsr	r15
    4128:	e7 94       	ror	r14
    412a:	d7 94       	ror	r13
    412c:	c7 94       	ror	r12
    412e:	8a 95       	dec	r24
    4130:	d1 f7       	brne	.-12     	; 0x4126 <__stack+0x127>
    4132:	93 e0       	ldi	r25, 0x03	; 3
    4134:	88 0c       	add	r8, r8
    4136:	99 1c       	adc	r9, r9
    4138:	aa 1c       	adc	r10, r10
    413a:	bb 1c       	adc	r11, r11
    413c:	9a 95       	dec	r25
    413e:	d1 f7       	brne	.-12     	; 0x4134 <__stack+0x135>
    4140:	8c 28       	or	r8, r12
    4142:	9d 28       	or	r9, r13
    4144:	ae 28       	or	r10, r14
    4146:	bf 28       	or	r11, r15
    4148:	68 96       	adiw	r28, 0x18	; 24
    414a:	88 82       	st	Y, r8
    414c:	99 82       	std	Y+1, r9	; 0x01
    414e:	aa 82       	std	Y+2, r10	; 0x02
    4150:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[139] = ROL(key->rk[133] + delta[5][24], 3);
    4152:	86 e2       	ldi	r24, 0x26	; 38
    4154:	88 1a       	sub	r8, r24
    4156:	8a e7       	ldi	r24, 0x7A	; 122
    4158:	98 0a       	sbc	r9, r24
    415a:	88 e3       	ldi	r24, 0x38	; 56
    415c:	a8 0a       	sbc	r10, r24
    415e:	85 ef       	ldi	r24, 0xF5	; 245
    4160:	b8 0a       	sbc	r11, r24
    4162:	75 01       	movw	r14, r10
    4164:	64 01       	movw	r12, r8
    4166:	6d e1       	ldi	r22, 0x1D	; 29
    4168:	f6 94       	lsr	r15
    416a:	e7 94       	ror	r14
    416c:	d7 94       	ror	r13
    416e:	c7 94       	ror	r12
    4170:	6a 95       	dec	r22
    4172:	d1 f7       	brne	.-12     	; 0x4168 <__stack+0x169>
    4174:	73 e0       	ldi	r23, 0x03	; 3
    4176:	88 0c       	add	r8, r8
    4178:	99 1c       	adc	r9, r9
    417a:	aa 1c       	adc	r10, r10
    417c:	bb 1c       	adc	r11, r11
    417e:	7a 95       	dec	r23
    4180:	d1 f7       	brne	.-12     	; 0x4176 <__stack+0x177>
    4182:	8c 28       	or	r8, r12
    4184:	9d 28       	or	r9, r13
    4186:	ae 28       	or	r10, r14
    4188:	bf 28       	or	r11, r15
    418a:	68 96       	adiw	r28, 0x18	; 24
    418c:	88 82       	st	Y, r8
    418e:	99 82       	std	Y+1, r9	; 0x01
    4190:	aa 82       	std	Y+2, r10	; 0x02
    4192:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[145] = ROL(key->rk[139] + delta[0][25], 3);
    4194:	8d e2       	ldi	r24, 0x2D	; 45
    4196:	88 1a       	sub	r8, r24
    4198:	80 e2       	ldi	r24, 0x20	; 32
    419a:	98 0a       	sbc	r9, r24
    419c:	88 e7       	ldi	r24, 0x78	; 120
    419e:	a8 0a       	sbc	r10, r24
    41a0:	88 e4       	ldi	r24, 0x48	; 72
    41a2:	b8 0a       	sbc	r11, r24
    41a4:	75 01       	movw	r14, r10
    41a6:	64 01       	movw	r12, r8
    41a8:	1d e1       	ldi	r17, 0x1D	; 29
    41aa:	f6 94       	lsr	r15
    41ac:	e7 94       	ror	r14
    41ae:	d7 94       	ror	r13
    41b0:	c7 94       	ror	r12
    41b2:	1a 95       	dec	r17
    41b4:	d1 f7       	brne	.-12     	; 0x41aa <__stack+0x1ab>
    41b6:	03 e0       	ldi	r16, 0x03	; 3
    41b8:	88 0c       	add	r8, r8
    41ba:	99 1c       	adc	r9, r9
    41bc:	aa 1c       	adc	r10, r10
    41be:	bb 1c       	adc	r11, r11
    41c0:	0a 95       	dec	r16
    41c2:	d1 f7       	brne	.-12     	; 0x41b8 <__stack+0x1b9>
    41c4:	8c 28       	or	r8, r12
    41c6:	9d 28       	or	r9, r13
    41c8:	ae 28       	or	r10, r14
    41ca:	bf 28       	or	r11, r15
    41cc:	68 96       	adiw	r28, 0x18	; 24
    41ce:	88 82       	st	Y, r8
    41d0:	99 82       	std	Y+1, r9	; 0x01
    41d2:	aa 82       	std	Y+2, r10	; 0x02
    41d4:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[151] = ROL(key->rk[145] + delta[1][26], 3);
    41d6:	84 e5       	ldi	r24, 0x54	; 84
    41d8:	88 1a       	sub	r8, r24
    41da:	86 e7       	ldi	r24, 0x76	; 118
    41dc:	98 0a       	sbc	r9, r24
    41de:	8e ee       	ldi	r24, 0xEE	; 238
    41e0:	a8 0a       	sbc	r10, r24
    41e2:	86 ef       	ldi	r24, 0xF6	; 246
    41e4:	b8 0a       	sbc	r11, r24
    41e6:	75 01       	movw	r14, r10
    41e8:	64 01       	movw	r12, r8
    41ea:	8d e1       	ldi	r24, 0x1D	; 29
    41ec:	f6 94       	lsr	r15
    41ee:	e7 94       	ror	r14
    41f0:	d7 94       	ror	r13
    41f2:	c7 94       	ror	r12
    41f4:	8a 95       	dec	r24
    41f6:	d1 f7       	brne	.-12     	; 0x41ec <__stack+0x1ed>
    41f8:	93 e0       	ldi	r25, 0x03	; 3
    41fa:	88 0c       	add	r8, r8
    41fc:	99 1c       	adc	r9, r9
    41fe:	aa 1c       	adc	r10, r10
    4200:	bb 1c       	adc	r11, r11
    4202:	9a 95       	dec	r25
    4204:	d1 f7       	brne	.-12     	; 0x41fa <__stack+0x1fb>
    4206:	8c 28       	or	r8, r12
    4208:	9d 28       	or	r9, r13
    420a:	ae 28       	or	r10, r14
    420c:	bf 28       	or	r11, r15
    420e:	68 96       	adiw	r28, 0x18	; 24
    4210:	88 82       	st	Y, r8
    4212:	99 82       	std	Y+1, r9	; 0x01
    4214:	aa 82       	std	Y+2, r10	; 0x02
    4216:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[157] = ROL(key->rk[151] + delta[2][27], 3);
    4218:	8c e1       	ldi	r24, 0x1C	; 28
    421a:	88 1a       	sub	r8, r24
    421c:	8c ee       	ldi	r24, 0xEC	; 236
    421e:	98 0a       	sbc	r9, r24
    4220:	80 e3       	ldi	r24, 0x30	; 48
    4222:	a8 0a       	sbc	r10, r24
    4224:	8c ea       	ldi	r24, 0xAC	; 172
    4226:	b8 0a       	sbc	r11, r24
    4228:	75 01       	movw	r14, r10
    422a:	64 01       	movw	r12, r8
    422c:	6d e1       	ldi	r22, 0x1D	; 29
    422e:	f6 94       	lsr	r15
    4230:	e7 94       	ror	r14
    4232:	d7 94       	ror	r13
    4234:	c7 94       	ror	r12
    4236:	6a 95       	dec	r22
    4238:	d1 f7       	brne	.-12     	; 0x422e <__stack+0x22f>
    423a:	73 e0       	ldi	r23, 0x03	; 3
    423c:	88 0c       	add	r8, r8
    423e:	99 1c       	adc	r9, r9
    4240:	aa 1c       	adc	r10, r10
    4242:	bb 1c       	adc	r11, r11
    4244:	7a 95       	dec	r23
    4246:	d1 f7       	brne	.-12     	; 0x423c <__stack+0x23d>
    4248:	8c 28       	or	r8, r12
    424a:	9d 28       	or	r9, r13
    424c:	ae 28       	or	r10, r14
    424e:	bf 28       	or	r11, r15
    4250:	68 96       	adiw	r28, 0x18	; 24
    4252:	88 82       	st	Y, r8
    4254:	99 82       	std	Y+1, r9	; 0x01
    4256:	aa 82       	std	Y+2, r10	; 0x02
    4258:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[163] = ROL(key->rk[157] + delta[3][28], 3);
    425a:	82 ef       	ldi	r24, 0xF2	; 242
    425c:	88 1a       	sub	r8, r24
    425e:	8c e0       	ldi	r24, 0x0C	; 12
    4260:	98 0a       	sbc	r9, r24
    4262:	82 e7       	ldi	r24, 0x72	; 114
    4264:	a8 0a       	sbc	r10, r24
    4266:	88 e3       	ldi	r24, 0x38	; 56
    4268:	b8 0a       	sbc	r11, r24
    426a:	75 01       	movw	r14, r10
    426c:	64 01       	movw	r12, r8
    426e:	1d e1       	ldi	r17, 0x1D	; 29
    4270:	f6 94       	lsr	r15
    4272:	e7 94       	ror	r14
    4274:	d7 94       	ror	r13
    4276:	c7 94       	ror	r12
    4278:	1a 95       	dec	r17
    427a:	d1 f7       	brne	.-12     	; 0x4270 <__stack+0x271>
    427c:	03 e0       	ldi	r16, 0x03	; 3
    427e:	88 0c       	add	r8, r8
    4280:	99 1c       	adc	r9, r9
    4282:	aa 1c       	adc	r10, r10
    4284:	bb 1c       	adc	r11, r11
    4286:	0a 95       	dec	r16
    4288:	d1 f7       	brne	.-12     	; 0x427e <__stack+0x27f>
    428a:	c8 28       	or	r12, r8
    428c:	d9 28       	or	r13, r9
    428e:	ea 28       	or	r14, r10
    4290:	fb 28       	or	r15, r11
    4292:	68 96       	adiw	r28, 0x18	; 24
    4294:	c8 82       	st	Y, r12
    4296:	d9 82       	std	Y+1, r13	; 0x01
    4298:	ea 82       	std	Y+2, r14	; 0x02
    429a:	fb 82       	std	Y+3, r15	; 0x03

		key->rk[  2] = ROL(loadU32(_mk[2]) + delta[0][ 2], 6);
    429c:	18 96       	adiw	r26, 0x08	; 8
    429e:	8d 90       	ld	r8, X+
    42a0:	9d 90       	ld	r9, X+
    42a2:	ad 90       	ld	r10, X+
    42a4:	bc 90       	ld	r11, X
    42a6:	1b 97       	sbiw	r26, 0x0b	; 11
    42a8:	81 e9       	ldi	r24, 0x91	; 145
    42aa:	88 1a       	sub	r8, r24
    42ac:	88 e5       	ldi	r24, 0x58	; 88
    42ae:	98 0a       	sbc	r9, r24
    42b0:	80 e4       	ldi	r24, 0x40	; 64
    42b2:	a8 0a       	sbc	r10, r24
    42b4:	80 ef       	ldi	r24, 0xF0	; 240
    42b6:	b8 0a       	sbc	r11, r24
    42b8:	75 01       	movw	r14, r10
    42ba:	64 01       	movw	r12, r8
    42bc:	8a e1       	ldi	r24, 0x1A	; 26
    42be:	f6 94       	lsr	r15
    42c0:	e7 94       	ror	r14
    42c2:	d7 94       	ror	r13
    42c4:	c7 94       	ror	r12
    42c6:	8a 95       	dec	r24
    42c8:	d1 f7       	brne	.-12     	; 0x42be <__stack+0x2bf>
    42ca:	96 e0       	ldi	r25, 0x06	; 6
    42cc:	88 0c       	add	r8, r8
    42ce:	99 1c       	adc	r9, r9
    42d0:	aa 1c       	adc	r10, r10
    42d2:	bb 1c       	adc	r11, r11
    42d4:	9a 95       	dec	r25
    42d6:	d1 f7       	brne	.-12     	; 0x42cc <__stack+0x2cd>
    42d8:	8c 28       	or	r8, r12
    42da:	9d 28       	or	r9, r13
    42dc:	ae 28       	or	r10, r14
    42de:	bf 28       	or	r11, r15
    42e0:	80 86       	std	Z+8, r8	; 0x08
    42e2:	91 86       	std	Z+9, r9	; 0x09
    42e4:	a2 86       	std	Z+10, r10	; 0x0a
    42e6:	b3 86       	std	Z+11, r11	; 0x0b
		key->rk[  8] = ROL(key->rk[  2] + delta[1][ 3], 6);
    42e8:	8e ee       	ldi	r24, 0xEE	; 238
    42ea:	88 1a       	sub	r8, r24
    42ec:	87 ea       	ldi	r24, 0xA7	; 167
    42ee:	98 0a       	sbc	r9, r24
    42f0:	8c ee       	ldi	r24, 0xEC	; 236
    42f2:	a8 0a       	sbc	r10, r24
    42f4:	8c ed       	ldi	r24, 0xDC	; 220
    42f6:	b8 0a       	sbc	r11, r24
    42f8:	75 01       	movw	r14, r10
    42fa:	64 01       	movw	r12, r8
    42fc:	6a e1       	ldi	r22, 0x1A	; 26
    42fe:	f6 94       	lsr	r15
    4300:	e7 94       	ror	r14
    4302:	d7 94       	ror	r13
    4304:	c7 94       	ror	r12
    4306:	6a 95       	dec	r22
    4308:	d1 f7       	brne	.-12     	; 0x42fe <__stack+0x2ff>
    430a:	76 e0       	ldi	r23, 0x06	; 6
    430c:	88 0c       	add	r8, r8
    430e:	99 1c       	adc	r9, r9
    4310:	aa 1c       	adc	r10, r10
    4312:	bb 1c       	adc	r11, r11
    4314:	7a 95       	dec	r23
    4316:	d1 f7       	brne	.-12     	; 0x430c <__stack+0x30d>
    4318:	8c 28       	or	r8, r12
    431a:	9d 28       	or	r9, r13
    431c:	ae 28       	or	r10, r14
    431e:	bf 28       	or	r11, r15
    4320:	80 a2       	std	Z+32, r8	; 0x20
    4322:	91 a2       	std	Z+33, r9	; 0x21
    4324:	a2 a2       	std	Z+34, r10	; 0x22
    4326:	b3 a2       	std	Z+35, r11	; 0x23
		key->rk[ 14] = ROL(key->rk[  8] + delta[2][ 4], 6);
    4328:	89 e5       	ldi	r24, 0x59	; 89
    432a:	88 1a       	sub	r8, r24
    432c:	87 e3       	ldi	r24, 0x37	; 55
    432e:	98 0a       	sbc	r9, r24
    4330:	88 ed       	ldi	r24, 0xD8	; 216
    4332:	a8 0a       	sbc	r10, r24
    4334:	81 e6       	ldi	r24, 0x61	; 97
    4336:	b8 0a       	sbc	r11, r24
    4338:	75 01       	movw	r14, r10
    433a:	64 01       	movw	r12, r8
    433c:	1a e1       	ldi	r17, 0x1A	; 26
    433e:	f6 94       	lsr	r15
    4340:	e7 94       	ror	r14
    4342:	d7 94       	ror	r13
    4344:	c7 94       	ror	r12
    4346:	1a 95       	dec	r17
    4348:	d1 f7       	brne	.-12     	; 0x433e <__stack+0x33f>
    434a:	06 e0       	ldi	r16, 0x06	; 6
    434c:	88 0c       	add	r8, r8
    434e:	99 1c       	adc	r9, r9
    4350:	aa 1c       	adc	r10, r10
    4352:	bb 1c       	adc	r11, r11
    4354:	0a 95       	dec	r16
    4356:	d1 f7       	brne	.-12     	; 0x434c <__stack+0x34d>
    4358:	8c 28       	or	r8, r12
    435a:	9d 28       	or	r9, r13
    435c:	ae 28       	or	r10, r14
    435e:	bf 28       	or	r11, r15
    4360:	80 ae       	std	Z+56, r8	; 0x38
    4362:	91 ae       	std	Z+57, r9	; 0x39
    4364:	a2 ae       	std	Z+58, r10	; 0x3a
    4366:	b3 ae       	std	Z+59, r11	; 0x3b
		key->rk[ 20] = ROL(key->rk[ 14] + delta[3][ 5], 6);
    4368:	81 e7       	ldi	r24, 0x71	; 113
    436a:	88 1a       	sub	r8, r24
    436c:	82 ee       	ldi	r24, 0xE2	; 226
    436e:	98 0a       	sbc	r9, r24
    4370:	89 e1       	ldi	r24, 0x19	; 25
    4372:	a8 0a       	sbc	r10, r24
    4374:	84 ee       	ldi	r24, 0xE4	; 228
    4376:	b8 0a       	sbc	r11, r24
    4378:	75 01       	movw	r14, r10
    437a:	64 01       	movw	r12, r8
    437c:	8a e1       	ldi	r24, 0x1A	; 26
    437e:	f6 94       	lsr	r15
    4380:	e7 94       	ror	r14
    4382:	d7 94       	ror	r13
    4384:	c7 94       	ror	r12
    4386:	8a 95       	dec	r24
    4388:	d1 f7       	brne	.-12     	; 0x437e <__stack+0x37f>
    438a:	96 e0       	ldi	r25, 0x06	; 6
    438c:	88 0c       	add	r8, r8
    438e:	99 1c       	adc	r9, r9
    4390:	aa 1c       	adc	r10, r10
    4392:	bb 1c       	adc	r11, r11
    4394:	9a 95       	dec	r25
    4396:	d1 f7       	brne	.-12     	; 0x438c <__stack+0x38d>
    4398:	8c 28       	or	r8, r12
    439a:	9d 28       	or	r9, r13
    439c:	ae 28       	or	r10, r14
    439e:	bf 28       	or	r11, r15
    43a0:	cc 53       	subi	r28, 0x3C	; 60
    43a2:	d2 40       	sbci	r29, 0x02	; 2
    43a4:	88 82       	st	Y, r8
    43a6:	99 82       	std	Y+1, r9	; 0x01
    43a8:	aa 82       	std	Y+2, r10	; 0x02
    43aa:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 26] = ROL(key->rk[ 20] + delta[4][ 6], 6);
    43ac:	84 e6       	ldi	r24, 0x64	; 100
    43ae:	88 1a       	sub	r8, r24
    43b0:	88 ed       	ldi	r24, 0xD8	; 216
    43b2:	98 0a       	sbc	r9, r24
    43b4:	86 e5       	ldi	r24, 0x56	; 86
    43b6:	a8 0a       	sbc	r10, r24
    43b8:	88 ea       	ldi	r24, 0xA8	; 168
    43ba:	b8 0a       	sbc	r11, r24
    43bc:	75 01       	movw	r14, r10
    43be:	64 01       	movw	r12, r8
    43c0:	6a e1       	ldi	r22, 0x1A	; 26
    43c2:	f6 94       	lsr	r15
    43c4:	e7 94       	ror	r14
    43c6:	d7 94       	ror	r13
    43c8:	c7 94       	ror	r12
    43ca:	6a 95       	dec	r22
    43cc:	d1 f7       	brne	.-12     	; 0x43c2 <__stack+0x3c3>
    43ce:	76 e0       	ldi	r23, 0x06	; 6
    43d0:	88 0c       	add	r8, r8
    43d2:	99 1c       	adc	r9, r9
    43d4:	aa 1c       	adc	r10, r10
    43d6:	bb 1c       	adc	r11, r11
    43d8:	7a 95       	dec	r23
    43da:	d1 f7       	brne	.-12     	; 0x43d0 <__stack+0x3d1>
    43dc:	8c 28       	or	r8, r12
    43de:	9d 28       	or	r9, r13
    43e0:	ae 28       	or	r10, r14
    43e2:	bf 28       	or	r11, r15
    43e4:	68 96       	adiw	r28, 0x18	; 24
    43e6:	88 82       	st	Y, r8
    43e8:	99 82       	std	Y+1, r9	; 0x01
    43ea:	aa 82       	std	Y+2, r10	; 0x02
    43ec:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 32] = ROL(key->rk[ 26] + delta[5][ 7], 6);
    43ee:	8d e9       	ldi	r24, 0x9D	; 157
    43f0:	88 1a       	sub	r8, r24
    43f2:	8a ef       	ldi	r24, 0xFA	; 250
    43f4:	98 0a       	sbc	r9, r24
    43f6:	82 e1       	ldi	r24, 0x12	; 18
    43f8:	a8 0a       	sbc	r10, r24
    43fa:	8d e3       	ldi	r24, 0x3D	; 61
    43fc:	b8 0a       	sbc	r11, r24
    43fe:	75 01       	movw	r14, r10
    4400:	64 01       	movw	r12, r8
    4402:	1a e1       	ldi	r17, 0x1A	; 26
    4404:	f6 94       	lsr	r15
    4406:	e7 94       	ror	r14
    4408:	d7 94       	ror	r13
    440a:	c7 94       	ror	r12
    440c:	1a 95       	dec	r17
    440e:	d1 f7       	brne	.-12     	; 0x4404 <__stack+0x405>
    4410:	06 e0       	ldi	r16, 0x06	; 6
    4412:	88 0c       	add	r8, r8
    4414:	99 1c       	adc	r9, r9
    4416:	aa 1c       	adc	r10, r10
    4418:	bb 1c       	adc	r11, r11
    441a:	0a 95       	dec	r16
    441c:	d1 f7       	brne	.-12     	; 0x4412 <__stack+0x413>
    441e:	8c 28       	or	r8, r12
    4420:	9d 28       	or	r9, r13
    4422:	ae 28       	or	r10, r14
    4424:	bf 28       	or	r11, r15
    4426:	68 96       	adiw	r28, 0x18	; 24
    4428:	88 82       	st	Y, r8
    442a:	99 82       	std	Y+1, r9	; 0x01
    442c:	aa 82       	std	Y+2, r10	; 0x02
    442e:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 38] = ROL(key->rk[ 32] + delta[0][ 8], 6);
    4430:	8d e3       	ldi	r24, 0x3D	; 61
    4432:	88 1a       	sub	r8, r24
    4434:	84 e2       	ldi	r24, 0x24	; 36
    4436:	98 0a       	sbc	r9, r24
    4438:	86 e1       	ldi	r24, 0x16	; 22
    443a:	a8 0a       	sbc	r10, r24
    443c:	80 e1       	ldi	r24, 0x10	; 16
    443e:	b8 0a       	sbc	r11, r24
    4440:	75 01       	movw	r14, r10
    4442:	64 01       	movw	r12, r8
    4444:	8a e1       	ldi	r24, 0x1A	; 26
    4446:	f6 94       	lsr	r15
    4448:	e7 94       	ror	r14
    444a:	d7 94       	ror	r13
    444c:	c7 94       	ror	r12
    444e:	8a 95       	dec	r24
    4450:	d1 f7       	brne	.-12     	; 0x4446 <__stack+0x447>
    4452:	96 e0       	ldi	r25, 0x06	; 6
    4454:	88 0c       	add	r8, r8
    4456:	99 1c       	adc	r9, r9
    4458:	aa 1c       	adc	r10, r10
    445a:	bb 1c       	adc	r11, r11
    445c:	9a 95       	dec	r25
    445e:	d1 f7       	brne	.-12     	; 0x4454 <__stack+0x455>
    4460:	8c 28       	or	r8, r12
    4462:	9d 28       	or	r9, r13
    4464:	ae 28       	or	r10, r14
    4466:	bf 28       	or	r11, r15
    4468:	68 96       	adiw	r28, 0x18	; 24
    446a:	88 82       	st	Y, r8
    446c:	99 82       	std	Y+1, r9	; 0x01
    446e:	aa 82       	std	Y+2, r10	; 0x02
    4470:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 44] = ROL(key->rk[ 38] + delta[1][ 9], 6);
    4472:	88 e7       	ldi	r24, 0x78	; 120
    4474:	88 1a       	sub	r8, r24
    4476:	8b ef       	ldi	r24, 0xFB	; 251
    4478:	98 0a       	sbc	r9, r24
    447a:	89 e2       	ldi	r24, 0x29	; 41
    447c:	a8 0a       	sbc	r10, r24
    447e:	8b e3       	ldi	r24, 0x3B	; 59
    4480:	b8 0a       	sbc	r11, r24
    4482:	75 01       	movw	r14, r10
    4484:	64 01       	movw	r12, r8
    4486:	6a e1       	ldi	r22, 0x1A	; 26
    4488:	f6 94       	lsr	r15
    448a:	e7 94       	ror	r14
    448c:	d7 94       	ror	r13
    448e:	c7 94       	ror	r12
    4490:	6a 95       	dec	r22
    4492:	d1 f7       	brne	.-12     	; 0x4488 <__stack+0x489>
    4494:	76 e0       	ldi	r23, 0x06	; 6
    4496:	88 0c       	add	r8, r8
    4498:	99 1c       	adc	r9, r9
    449a:	aa 1c       	adc	r10, r10
    449c:	bb 1c       	adc	r11, r11
    449e:	7a 95       	dec	r23
    44a0:	d1 f7       	brne	.-12     	; 0x4496 <__stack+0x497>
    44a2:	8c 28       	or	r8, r12
    44a4:	9d 28       	or	r9, r13
    44a6:	ae 28       	or	r10, r14
    44a8:	bf 28       	or	r11, r15
    44aa:	68 96       	adiw	r28, 0x18	; 24
    44ac:	88 82       	st	Y, r8
    44ae:	99 82       	std	Y+1, r9	; 0x01
    44b0:	aa 82       	std	Y+2, r10	; 0x02
    44b2:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 50] = ROL(key->rk[ 44] + delta[2][10], 6);
    44b4:	89 e1       	ldi	r24, 0x19	; 25
    44b6:	88 1a       	sub	r8, r24
    44b8:	86 ed       	ldi	r24, 0xD6	; 214
    44ba:	98 0a       	sbc	r9, r24
    44bc:	8d e0       	ldi	r24, 0x0D	; 13
    44be:	a8 0a       	sbc	r10, r24
    44c0:	86 e7       	ldi	r24, 0x76	; 118
    44c2:	b8 0a       	sbc	r11, r24
    44c4:	75 01       	movw	r14, r10
    44c6:	64 01       	movw	r12, r8
    44c8:	1a e1       	ldi	r17, 0x1A	; 26
    44ca:	f6 94       	lsr	r15
    44cc:	e7 94       	ror	r14
    44ce:	d7 94       	ror	r13
    44d0:	c7 94       	ror	r12
    44d2:	1a 95       	dec	r17
    44d4:	d1 f7       	brne	.-12     	; 0x44ca <__stack+0x4cb>
    44d6:	06 e0       	ldi	r16, 0x06	; 6
    44d8:	88 0c       	add	r8, r8
    44da:	99 1c       	adc	r9, r9
    44dc:	aa 1c       	adc	r10, r10
    44de:	bb 1c       	adc	r11, r11
    44e0:	0a 95       	dec	r16
    44e2:	d1 f7       	brne	.-12     	; 0x44d8 <__stack+0x4d9>
    44e4:	8c 28       	or	r8, r12
    44e6:	9d 28       	or	r9, r13
    44e8:	ae 28       	or	r10, r14
    44ea:	bf 28       	or	r11, r15
    44ec:	68 96       	adiw	r28, 0x18	; 24
    44ee:	88 82       	st	Y, r8
    44f0:	99 82       	std	Y+1, r9	; 0x01
    44f2:	aa 82       	std	Y+2, r10	; 0x02
    44f4:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 56] = ROL(key->rk[ 50] + delta[3][11], 6);
    44f6:	8a e3       	ldi	r24, 0x3A	; 58
    44f8:	88 1a       	sub	r8, r24
    44fa:	8c e9       	ldi	r24, 0x9C	; 156
    44fc:	98 0a       	sbc	r9, r24
    44fe:	88 e7       	ldi	r24, 0x78	; 120
    4500:	a8 0a       	sbc	r10, r24
    4502:	86 e0       	ldi	r24, 0x06	; 6
    4504:	b8 0a       	sbc	r11, r24
    4506:	75 01       	movw	r14, r10
    4508:	64 01       	movw	r12, r8
    450a:	8a e1       	ldi	r24, 0x1A	; 26
    450c:	f6 94       	lsr	r15
    450e:	e7 94       	ror	r14
    4510:	d7 94       	ror	r13
    4512:	c7 94       	ror	r12
    4514:	8a 95       	dec	r24
    4516:	d1 f7       	brne	.-12     	; 0x450c <__stack+0x50d>
    4518:	96 e0       	ldi	r25, 0x06	; 6
    451a:	88 0c       	add	r8, r8
    451c:	99 1c       	adc	r9, r9
    451e:	aa 1c       	adc	r10, r10
    4520:	bb 1c       	adc	r11, r11
    4522:	9a 95       	dec	r25
    4524:	d1 f7       	brne	.-12     	; 0x451a <__stack+0x51b>
    4526:	8c 28       	or	r8, r12
    4528:	9d 28       	or	r9, r13
    452a:	ae 28       	or	r10, r14
    452c:	bf 28       	or	r11, r15
    452e:	68 96       	adiw	r28, 0x18	; 24
    4530:	88 82       	st	Y, r8
    4532:	99 82       	std	Y+1, r9	; 0x01
    4534:	aa 82       	std	Y+2, r10	; 0x02
    4536:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 62] = ROL(key->rk[ 56] + delta[4][12], 6);
    4538:	8b ee       	ldi	r24, 0xEB	; 235
    453a:	88 1a       	sub	r8, r24
    453c:	88 e1       	ldi	r24, 0x18	; 24
    453e:	98 0a       	sbc	r9, r24
    4540:	86 eb       	ldi	r24, 0xB6	; 182
    4542:	a8 0a       	sbc	r10, r24
    4544:	85 e1       	ldi	r24, 0x15	; 21
    4546:	b8 0a       	sbc	r11, r24
    4548:	75 01       	movw	r14, r10
    454a:	64 01       	movw	r12, r8
    454c:	6a e1       	ldi	r22, 0x1A	; 26
    454e:	f6 94       	lsr	r15
    4550:	e7 94       	ror	r14
    4552:	d7 94       	ror	r13
    4554:	c7 94       	ror	r12
    4556:	6a 95       	dec	r22
    4558:	d1 f7       	brne	.-12     	; 0x454e <__stack+0x54f>
    455a:	76 e0       	ldi	r23, 0x06	; 6
    455c:	88 0c       	add	r8, r8
    455e:	99 1c       	adc	r9, r9
    4560:	aa 1c       	adc	r10, r10
    4562:	bb 1c       	adc	r11, r11
    4564:	7a 95       	dec	r23
    4566:	d1 f7       	brne	.-12     	; 0x455c <__stack+0x55d>
    4568:	8c 28       	or	r8, r12
    456a:	9d 28       	or	r9, r13
    456c:	ae 28       	or	r10, r14
    456e:	bf 28       	or	r11, r15
    4570:	68 96       	adiw	r28, 0x18	; 24
    4572:	88 82       	st	Y, r8
    4574:	99 82       	std	Y+1, r9	; 0x01
    4576:	aa 82       	std	Y+2, r10	; 0x02
    4578:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 68] = ROL(key->rk[ 62] + delta[5][13], 6);
    457a:	80 e1       	ldi	r24, 0x10	; 16
    457c:	88 1a       	sub	r8, r24
    457e:	87 ea       	ldi	r24, 0xA7	; 167
    4580:	98 0a       	sbc	r9, r24
    4582:	8e eb       	ldi	r24, 0xBE	; 190
    4584:	a8 0a       	sbc	r10, r24
    4586:	84 e4       	ldi	r24, 0x44	; 68
    4588:	b8 0a       	sbc	r11, r24
    458a:	75 01       	movw	r14, r10
    458c:	64 01       	movw	r12, r8
    458e:	1a e1       	ldi	r17, 0x1A	; 26
    4590:	f6 94       	lsr	r15
    4592:	e7 94       	ror	r14
    4594:	d7 94       	ror	r13
    4596:	c7 94       	ror	r12
    4598:	1a 95       	dec	r17
    459a:	d1 f7       	brne	.-12     	; 0x4590 <__stack+0x591>
    459c:	06 e0       	ldi	r16, 0x06	; 6
    459e:	88 0c       	add	r8, r8
    45a0:	99 1c       	adc	r9, r9
    45a2:	aa 1c       	adc	r10, r10
    45a4:	bb 1c       	adc	r11, r11
    45a6:	0a 95       	dec	r16
    45a8:	d1 f7       	brne	.-12     	; 0x459e <__stack+0x59f>
    45aa:	8c 28       	or	r8, r12
    45ac:	9d 28       	or	r9, r13
    45ae:	ae 28       	or	r10, r14
    45b0:	bf 28       	or	r11, r15
    45b2:	68 96       	adiw	r28, 0x18	; 24
    45b4:	88 82       	st	Y, r8
    45b6:	99 82       	std	Y+1, r9	; 0x01
    45b8:	aa 82       	std	Y+2, r10	; 0x02
    45ba:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 74] = ROL(key->rk[ 68] + delta[0][14], 6);
    45bc:	85 e0       	ldi	r24, 0x05	; 5
    45be:	88 1a       	sub	r8, r24
    45c0:	8f e0       	ldi	r24, 0x0F	; 15
    45c2:	98 0a       	sbc	r9, r24
    45c4:	89 e8       	ldi	r24, 0x89	; 137
    45c6:	a8 0a       	sbc	r10, r24
    45c8:	85 e0       	ldi	r24, 0x05	; 5
    45ca:	b8 0a       	sbc	r11, r24
    45cc:	75 01       	movw	r14, r10
    45ce:	64 01       	movw	r12, r8
    45d0:	8a e1       	ldi	r24, 0x1A	; 26
    45d2:	f6 94       	lsr	r15
    45d4:	e7 94       	ror	r14
    45d6:	d7 94       	ror	r13
    45d8:	c7 94       	ror	r12
    45da:	8a 95       	dec	r24
    45dc:	d1 f7       	brne	.-12     	; 0x45d2 <__stack+0x5d3>
    45de:	96 e0       	ldi	r25, 0x06	; 6
    45e0:	88 0c       	add	r8, r8
    45e2:	99 1c       	adc	r9, r9
    45e4:	aa 1c       	adc	r10, r10
    45e6:	bb 1c       	adc	r11, r11
    45e8:	9a 95       	dec	r25
    45ea:	d1 f7       	brne	.-12     	; 0x45e0 <__stack+0x5e1>
    45ec:	8c 28       	or	r8, r12
    45ee:	9d 28       	or	r9, r13
    45f0:	ae 28       	or	r10, r14
    45f2:	bf 28       	or	r11, r15
    45f4:	68 96       	adiw	r28, 0x18	; 24
    45f6:	88 82       	st	Y, r8
    45f8:	99 82       	std	Y+1, r9	; 0x01
    45fa:	aa 82       	std	Y+2, r10	; 0x02
    45fc:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 80] = ROL(key->rk[ 74] + delta[1][15], 6);
    45fe:	8f ec       	ldi	r24, 0xCF	; 207
    4600:	88 1a       	sub	r8, r24
    4602:	8d ed       	ldi	r24, 0xDD	; 221
    4604:	98 0a       	sbc	r9, r24
    4606:	8e e7       	ldi	r24, 0x7E	; 126
    4608:	a8 0a       	sbc	r10, r24
    460a:	8a ec       	ldi	r24, 0xCA	; 202
    460c:	b8 0a       	sbc	r11, r24
    460e:	75 01       	movw	r14, r10
    4610:	64 01       	movw	r12, r8
    4612:	6a e1       	ldi	r22, 0x1A	; 26
    4614:	f6 94       	lsr	r15
    4616:	e7 94       	ror	r14
    4618:	d7 94       	ror	r13
    461a:	c7 94       	ror	r12
    461c:	6a 95       	dec	r22
    461e:	d1 f7       	brne	.-12     	; 0x4614 <__stack+0x615>
    4620:	76 e0       	ldi	r23, 0x06	; 6
    4622:	88 0c       	add	r8, r8
    4624:	99 1c       	adc	r9, r9
    4626:	aa 1c       	adc	r10, r10
    4628:	bb 1c       	adc	r11, r11
    462a:	7a 95       	dec	r23
    462c:	d1 f7       	brne	.-12     	; 0x4622 <__stack+0x623>
    462e:	8c 28       	or	r8, r12
    4630:	9d 28       	or	r9, r13
    4632:	ae 28       	or	r10, r14
    4634:	bf 28       	or	r11, r15
    4636:	68 96       	adiw	r28, 0x18	; 24
    4638:	88 82       	st	Y, r8
    463a:	99 82       	std	Y+1, r9	; 0x01
    463c:	aa 82       	std	Y+2, r10	; 0x02
    463e:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 86] = ROL(key->rk[ 80] + delta[2][16], 6);
    4640:	8e e1       	ldi	r24, 0x1E	; 30
    4642:	88 1a       	sub	r8, r24
    4644:	86 e8       	ldi	r24, 0x86	; 134
    4646:	98 0a       	sbc	r9, r24
    4648:	85 e7       	ldi	r24, 0x75	; 117
    464a:	a8 0a       	sbc	r10, r24
    464c:	83 e8       	ldi	r24, 0x83	; 131
    464e:	b8 0a       	sbc	r11, r24
    4650:	75 01       	movw	r14, r10
    4652:	64 01       	movw	r12, r8
    4654:	1a e1       	ldi	r17, 0x1A	; 26
    4656:	f6 94       	lsr	r15
    4658:	e7 94       	ror	r14
    465a:	d7 94       	ror	r13
    465c:	c7 94       	ror	r12
    465e:	1a 95       	dec	r17
    4660:	d1 f7       	brne	.-12     	; 0x4656 <__stack+0x657>
    4662:	06 e0       	ldi	r16, 0x06	; 6
    4664:	88 0c       	add	r8, r8
    4666:	99 1c       	adc	r9, r9
    4668:	aa 1c       	adc	r10, r10
    466a:	bb 1c       	adc	r11, r11
    466c:	0a 95       	dec	r16
    466e:	d1 f7       	brne	.-12     	; 0x4664 <__stack+0x665>
    4670:	8c 28       	or	r8, r12
    4672:	9d 28       	or	r9, r13
    4674:	ae 28       	or	r10, r14
    4676:	bf 28       	or	r11, r15
    4678:	68 96       	adiw	r28, 0x18	; 24
    467a:	88 82       	st	Y, r8
    467c:	99 82       	std	Y+1, r9	; 0x01
    467e:	aa 82       	std	Y+2, r10	; 0x02
    4680:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 92] = ROL(key->rk[ 86] + delta[3][17], 6);
    4682:	82 e4       	ldi	r24, 0x42	; 66
    4684:	88 1a       	sub	r8, r24
    4686:	8e e0       	ldi	r24, 0x0E	; 14
    4688:	98 0a       	sbc	r9, r24
    468a:	87 e2       	ldi	r24, 0x27	; 39
    468c:	a8 0a       	sbc	r10, r24
    468e:	8e e9       	ldi	r24, 0x9E	; 158
    4690:	b8 0a       	sbc	r11, r24
    4692:	75 01       	movw	r14, r10
    4694:	64 01       	movw	r12, r8
    4696:	8a e1       	ldi	r24, 0x1A	; 26
    4698:	f6 94       	lsr	r15
    469a:	e7 94       	ror	r14
    469c:	d7 94       	ror	r13
    469e:	c7 94       	ror	r12
    46a0:	8a 95       	dec	r24
    46a2:	d1 f7       	brne	.-12     	; 0x4698 <__stack+0x699>
    46a4:	96 e0       	ldi	r25, 0x06	; 6
    46a6:	88 0c       	add	r8, r8
    46a8:	99 1c       	adc	r9, r9
    46aa:	aa 1c       	adc	r10, r10
    46ac:	bb 1c       	adc	r11, r11
    46ae:	9a 95       	dec	r25
    46b0:	d1 f7       	brne	.-12     	; 0x46a6 <__stack+0x6a7>
    46b2:	8c 28       	or	r8, r12
    46b4:	9d 28       	or	r9, r13
    46b6:	ae 28       	or	r10, r14
    46b8:	bf 28       	or	r11, r15
    46ba:	68 96       	adiw	r28, 0x18	; 24
    46bc:	88 82       	st	Y, r8
    46be:	99 82       	std	Y+1, r9	; 0x01
    46c0:	aa 82       	std	Y+2, r10	; 0x02
    46c2:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 98] = ROL(key->rk[ 92] + delta[4][18], 6);
    46c4:	86 e8       	ldi	r24, 0x86	; 134
    46c6:	88 1a       	sub	r8, r24
    46c8:	8a e3       	ldi	r24, 0x3A	; 58
    46ca:	98 0a       	sbc	r9, r24
    46cc:	86 e8       	ldi	r24, 0x86	; 134
    46ce:	a8 0a       	sbc	r10, r24
    46d0:	8d e6       	ldi	r24, 0x6D	; 109
    46d2:	b8 0a       	sbc	r11, r24
    46d4:	75 01       	movw	r14, r10
    46d6:	64 01       	movw	r12, r8
    46d8:	6a e1       	ldi	r22, 0x1A	; 26
    46da:	f6 94       	lsr	r15
    46dc:	e7 94       	ror	r14
    46de:	d7 94       	ror	r13
    46e0:	c7 94       	ror	r12
    46e2:	6a 95       	dec	r22
    46e4:	d1 f7       	brne	.-12     	; 0x46da <__stack+0x6db>
    46e6:	76 e0       	ldi	r23, 0x06	; 6
    46e8:	88 0c       	add	r8, r8
    46ea:	99 1c       	adc	r9, r9
    46ec:	aa 1c       	adc	r10, r10
    46ee:	bb 1c       	adc	r11, r11
    46f0:	7a 95       	dec	r23
    46f2:	d1 f7       	brne	.-12     	; 0x46e8 <__stack+0x6e9>
    46f4:	8c 28       	or	r8, r12
    46f6:	9d 28       	or	r9, r13
    46f8:	ae 28       	or	r10, r14
    46fa:	bf 28       	or	r11, r15
    46fc:	68 96       	adiw	r28, 0x18	; 24
    46fe:	88 82       	st	Y, r8
    4700:	99 82       	std	Y+1, r9	; 0x01
    4702:	aa 82       	std	Y+2, r10	; 0x02
    4704:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[104] = ROL(key->rk[ 98] + delta[5][19], 6);
    4706:	82 ed       	ldi	r24, 0xD2	; 210
    4708:	88 1a       	sub	r8, r24
    470a:	83 ec       	ldi	r24, 0xC3	; 195
    470c:	98 0a       	sbc	r9, r24
    470e:	89 ea       	ldi	r24, 0xA9	; 169
    4710:	a8 0a       	sbc	r10, r24
    4712:	8f e2       	ldi	r24, 0x2F	; 47
    4714:	b8 0a       	sbc	r11, r24
    4716:	75 01       	movw	r14, r10
    4718:	64 01       	movw	r12, r8
    471a:	1a e1       	ldi	r17, 0x1A	; 26
    471c:	f6 94       	lsr	r15
    471e:	e7 94       	ror	r14
    4720:	d7 94       	ror	r13
    4722:	c7 94       	ror	r12
    4724:	1a 95       	dec	r17
    4726:	d1 f7       	brne	.-12     	; 0x471c <__stack+0x71d>
    4728:	06 e0       	ldi	r16, 0x06	; 6
    472a:	88 0c       	add	r8, r8
    472c:	99 1c       	adc	r9, r9
    472e:	aa 1c       	adc	r10, r10
    4730:	bb 1c       	adc	r11, r11
    4732:	0a 95       	dec	r16
    4734:	d1 f7       	brne	.-12     	; 0x472a <__stack+0x72b>
    4736:	8c 28       	or	r8, r12
    4738:	9d 28       	or	r9, r13
    473a:	ae 28       	or	r10, r14
    473c:	bf 28       	or	r11, r15
    473e:	68 96       	adiw	r28, 0x18	; 24
    4740:	88 82       	st	Y, r8
    4742:	99 82       	std	Y+1, r9	; 0x01
    4744:	aa 82       	std	Y+2, r10	; 0x02
    4746:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[110] = ROL(key->rk[104] + delta[0][20], 6);
    4748:	82 e0       	ldi	r24, 0x02	; 2
    474a:	88 1a       	sub	r8, r24
    474c:	81 ec       	ldi	r24, 0xC1	; 193
    474e:	98 0a       	sbc	r9, r24
    4750:	83 e4       	ldi	r24, 0x43	; 67
    4752:	a8 0a       	sbc	r10, r24
    4754:	82 e6       	ldi	r24, 0x62	; 98
    4756:	b8 0a       	sbc	r11, r24
    4758:	75 01       	movw	r14, r10
    475a:	64 01       	movw	r12, r8
    475c:	8a e1       	ldi	r24, 0x1A	; 26
    475e:	f6 94       	lsr	r15
    4760:	e7 94       	ror	r14
    4762:	d7 94       	ror	r13
    4764:	c7 94       	ror	r12
    4766:	8a 95       	dec	r24
    4768:	d1 f7       	brne	.-12     	; 0x475e <__stack+0x75f>
    476a:	96 e0       	ldi	r25, 0x06	; 6
    476c:	88 0c       	add	r8, r8
    476e:	99 1c       	adc	r9, r9
    4770:	aa 1c       	adc	r10, r10
    4772:	bb 1c       	adc	r11, r11
    4774:	9a 95       	dec	r25
    4776:	d1 f7       	brne	.-12     	; 0x476c <__stack+0x76d>
    4778:	8c 28       	or	r8, r12
    477a:	9d 28       	or	r9, r13
    477c:	ae 28       	or	r10, r14
    477e:	bf 28       	or	r11, r15
    4780:	68 96       	adiw	r28, 0x18	; 24
    4782:	88 82       	st	Y, r8
    4784:	99 82       	std	Y+1, r9	; 0x01
    4786:	aa 82       	std	Y+2, r10	; 0x02
    4788:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[116] = ROL(key->rk[110] + delta[1][21], 6);
    478a:	83 eb       	ldi	r24, 0xB3	; 179
    478c:	88 1a       	sub	r8, r24
    478e:	83 e7       	ldi	r24, 0x73	; 115
    4790:	98 0a       	sbc	r9, r24
    4792:	87 eb       	ldi	r24, 0xB7	; 183
    4794:	a8 0a       	sbc	r10, r24
    4796:	8f e9       	ldi	r24, 0x9F	; 159
    4798:	b8 0a       	sbc	r11, r24
    479a:	75 01       	movw	r14, r10
    479c:	64 01       	movw	r12, r8
    479e:	6a e1       	ldi	r22, 0x1A	; 26
    47a0:	f6 94       	lsr	r15
    47a2:	e7 94       	ror	r14
    47a4:	d7 94       	ror	r13
    47a6:	c7 94       	ror	r12
    47a8:	6a 95       	dec	r22
    47aa:	d1 f7       	brne	.-12     	; 0x47a0 <__stack+0x7a1>
    47ac:	76 e0       	ldi	r23, 0x06	; 6
    47ae:	88 0c       	add	r8, r8
    47b0:	99 1c       	adc	r9, r9
    47b2:	aa 1c       	adc	r10, r10
    47b4:	bb 1c       	adc	r11, r11
    47b6:	7a 95       	dec	r23
    47b8:	d1 f7       	brne	.-12     	; 0x47ae <__stack+0x7af>
    47ba:	8c 28       	or	r8, r12
    47bc:	9d 28       	or	r9, r13
    47be:	ae 28       	or	r10, r14
    47c0:	bf 28       	or	r11, r15
    47c2:	68 96       	adiw	r28, 0x18	; 24
    47c4:	88 82       	st	Y, r8
    47c6:	99 82       	std	Y+1, r9	; 0x01
    47c8:	aa 82       	std	Y+2, r10	; 0x02
    47ca:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[122] = ROL(key->rk[116] + delta[2][22], 6);
    47cc:	81 e6       	ldi	r24, 0x61	; 97
    47ce:	88 1a       	sub	r8, r24
    47d0:	87 e8       	ldi	r24, 0x87	; 135
    47d2:	98 0a       	sbc	r9, r24
    47d4:	81 e6       	ldi	r24, 0x61	; 97
    47d6:	a8 0a       	sbc	r10, r24
    47d8:	8d ed       	ldi	r24, 0xDD	; 221
    47da:	b8 0a       	sbc	r11, r24
    47dc:	75 01       	movw	r14, r10
    47de:	64 01       	movw	r12, r8
    47e0:	1a e1       	ldi	r17, 0x1A	; 26
    47e2:	f6 94       	lsr	r15
    47e4:	e7 94       	ror	r14
    47e6:	d7 94       	ror	r13
    47e8:	c7 94       	ror	r12
    47ea:	1a 95       	dec	r17
    47ec:	d1 f7       	brne	.-12     	; 0x47e2 <__stack+0x7e3>
    47ee:	06 e0       	ldi	r16, 0x06	; 6
    47f0:	88 0c       	add	r8, r8
    47f2:	99 1c       	adc	r9, r9
    47f4:	aa 1c       	adc	r10, r10
    47f6:	bb 1c       	adc	r11, r11
    47f8:	0a 95       	dec	r16
    47fa:	d1 f7       	brne	.-12     	; 0x47f0 <__stack+0x7f1>
    47fc:	8c 28       	or	r8, r12
    47fe:	9d 28       	or	r9, r13
    4800:	ae 28       	or	r10, r14
    4802:	bf 28       	or	r11, r15
    4804:	68 96       	adiw	r28, 0x18	; 24
    4806:	88 82       	st	Y, r8
    4808:	99 82       	std	Y+1, r9	; 0x01
    480a:	aa 82       	std	Y+2, r10	; 0x02
    480c:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[128] = ROL(key->rk[122] + delta[3][23], 6);
    480e:	88 e6       	ldi	r24, 0x68	; 104
    4810:	88 1a       	sub	r8, r24
    4812:	80 e9       	ldi	r24, 0x90	; 144
    4814:	98 0a       	sbc	r9, r24
    4816:	83 ec       	ldi	r24, 0xC3	; 195
    4818:	a8 0a       	sbc	r10, r24
    481a:	89 e8       	ldi	r24, 0x89	; 137
    481c:	b8 0a       	sbc	r11, r24
    481e:	75 01       	movw	r14, r10
    4820:	64 01       	movw	r12, r8
    4822:	8a e1       	ldi	r24, 0x1A	; 26
    4824:	f6 94       	lsr	r15
    4826:	e7 94       	ror	r14
    4828:	d7 94       	ror	r13
    482a:	c7 94       	ror	r12
    482c:	8a 95       	dec	r24
    482e:	d1 f7       	brne	.-12     	; 0x4824 <__stack+0x825>
    4830:	96 e0       	ldi	r25, 0x06	; 6
    4832:	88 0c       	add	r8, r8
    4834:	99 1c       	adc	r9, r9
    4836:	aa 1c       	adc	r10, r10
    4838:	bb 1c       	adc	r11, r11
    483a:	9a 95       	dec	r25
    483c:	d1 f7       	brne	.-12     	; 0x4832 <__stack+0x833>
    483e:	8c 28       	or	r8, r12
    4840:	9d 28       	or	r9, r13
    4842:	ae 28       	or	r10, r14
    4844:	bf 28       	or	r11, r15
    4846:	68 96       	adiw	r28, 0x18	; 24
    4848:	88 82       	st	Y, r8
    484a:	99 82       	std	Y+1, r9	; 0x01
    484c:	aa 82       	std	Y+2, r10	; 0x02
    484e:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[134] = ROL(key->rk[128] + delta[4][24], 6);
    4850:	8c e5       	ldi	r24, 0x5C	; 92
    4852:	88 1a       	sub	r8, r24
    4854:	81 ea       	ldi	r24, 0xA1	; 161
    4856:	98 0a       	sbc	r9, r24
    4858:	8e e8       	ldi	r24, 0x8E	; 142
    485a:	a8 0a       	sbc	r10, r24
    485c:	81 e6       	ldi	r24, 0x61	; 97
    485e:	b8 0a       	sbc	r11, r24
    4860:	75 01       	movw	r14, r10
    4862:	64 01       	movw	r12, r8
    4864:	6a e1       	ldi	r22, 0x1A	; 26
    4866:	f6 94       	lsr	r15
    4868:	e7 94       	ror	r14
    486a:	d7 94       	ror	r13
    486c:	c7 94       	ror	r12
    486e:	6a 95       	dec	r22
    4870:	d1 f7       	brne	.-12     	; 0x4866 <__stack+0x867>
    4872:	76 e0       	ldi	r23, 0x06	; 6
    4874:	88 0c       	add	r8, r8
    4876:	99 1c       	adc	r9, r9
    4878:	aa 1c       	adc	r10, r10
    487a:	bb 1c       	adc	r11, r11
    487c:	7a 95       	dec	r23
    487e:	d1 f7       	brne	.-12     	; 0x4874 <__stack+0x875>
    4880:	8c 28       	or	r8, r12
    4882:	9d 28       	or	r9, r13
    4884:	ae 28       	or	r10, r14
    4886:	bf 28       	or	r11, r15
    4888:	68 96       	adiw	r28, 0x18	; 24
    488a:	88 82       	st	Y, r8
    488c:	99 82       	std	Y+1, r9	; 0x01
    488e:	aa 82       	std	Y+2, r10	; 0x02
    4890:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[140] = ROL(key->rk[134] + delta[5][25], 6);
    4892:	8c e4       	ldi	r24, 0x4C	; 76
    4894:	88 1a       	sub	r8, r24
    4896:	84 ef       	ldi	r24, 0xF4	; 244
    4898:	98 0a       	sbc	r9, r24
    489a:	80 e7       	ldi	r24, 0x70	; 112
    489c:	a8 0a       	sbc	r10, r24
    489e:	8a ee       	ldi	r24, 0xEA	; 234
    48a0:	b8 0a       	sbc	r11, r24
    48a2:	75 01       	movw	r14, r10
    48a4:	64 01       	movw	r12, r8
    48a6:	1a e1       	ldi	r17, 0x1A	; 26
    48a8:	f6 94       	lsr	r15
    48aa:	e7 94       	ror	r14
    48ac:	d7 94       	ror	r13
    48ae:	c7 94       	ror	r12
    48b0:	1a 95       	dec	r17
    48b2:	d1 f7       	brne	.-12     	; 0x48a8 <__stack+0x8a9>
    48b4:	06 e0       	ldi	r16, 0x06	; 6
    48b6:	88 0c       	add	r8, r8
    48b8:	99 1c       	adc	r9, r9
    48ba:	aa 1c       	adc	r10, r10
    48bc:	bb 1c       	adc	r11, r11
    48be:	0a 95       	dec	r16
    48c0:	d1 f7       	brne	.-12     	; 0x48b6 <__stack+0x8b7>
    48c2:	8c 28       	or	r8, r12
    48c4:	9d 28       	or	r9, r13
    48c6:	ae 28       	or	r10, r14
    48c8:	bf 28       	or	r11, r15
    48ca:	68 96       	adiw	r28, 0x18	; 24
    48cc:	88 82       	st	Y, r8
    48ce:	99 82       	std	Y+1, r9	; 0x01
    48d0:	aa 82       	std	Y+2, r10	; 0x02
    48d2:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[146] = ROL(key->rk[140] + delta[0][26], 6);
    48d4:	89 e5       	ldi	r24, 0x59	; 89
    48d6:	88 1a       	sub	r8, r24
    48d8:	80 e4       	ldi	r24, 0x40	; 64
    48da:	98 0a       	sbc	r9, r24
    48dc:	80 ef       	ldi	r24, 0xF0	; 240
    48de:	a8 0a       	sbc	r10, r24
    48e0:	80 e9       	ldi	r24, 0x90	; 144
    48e2:	b8 0a       	sbc	r11, r24
    48e4:	75 01       	movw	r14, r10
    48e6:	64 01       	movw	r12, r8
    48e8:	8a e1       	ldi	r24, 0x1A	; 26
    48ea:	f6 94       	lsr	r15
    48ec:	e7 94       	ror	r14
    48ee:	d7 94       	ror	r13
    48f0:	c7 94       	ror	r12
    48f2:	8a 95       	dec	r24
    48f4:	d1 f7       	brne	.-12     	; 0x48ea <__stack+0x8eb>
    48f6:	96 e0       	ldi	r25, 0x06	; 6
    48f8:	88 0c       	add	r8, r8
    48fa:	99 1c       	adc	r9, r9
    48fc:	aa 1c       	adc	r10, r10
    48fe:	bb 1c       	adc	r11, r11
    4900:	9a 95       	dec	r25
    4902:	d1 f7       	brne	.-12     	; 0x48f8 <__stack+0x8f9>
    4904:	8c 28       	or	r8, r12
    4906:	9d 28       	or	r9, r13
    4908:	ae 28       	or	r10, r14
    490a:	bf 28       	or	r11, r15
    490c:	68 96       	adiw	r28, 0x18	; 24
    490e:	88 82       	st	Y, r8
    4910:	99 82       	std	Y+1, r9	; 0x01
    4912:	aa 82       	std	Y+2, r10	; 0x02
    4914:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[152] = ROL(key->rk[146] + delta[1][27], 6);
    4916:	88 ea       	ldi	r24, 0xA8	; 168
    4918:	88 1a       	sub	r8, r24
    491a:	8c ee       	ldi	r24, 0xEC	; 236
    491c:	98 0a       	sbc	r9, r24
    491e:	8c ed       	ldi	r24, 0xDC	; 220
    4920:	a8 0a       	sbc	r10, r24
    4922:	8d ee       	ldi	r24, 0xED	; 237
    4924:	b8 0a       	sbc	r11, r24
    4926:	75 01       	movw	r14, r10
    4928:	64 01       	movw	r12, r8
    492a:	6a e1       	ldi	r22, 0x1A	; 26
    492c:	f6 94       	lsr	r15
    492e:	e7 94       	ror	r14
    4930:	d7 94       	ror	r13
    4932:	c7 94       	ror	r12
    4934:	6a 95       	dec	r22
    4936:	d1 f7       	brne	.-12     	; 0x492c <__stack+0x92d>
    4938:	76 e0       	ldi	r23, 0x06	; 6
    493a:	88 0c       	add	r8, r8
    493c:	99 1c       	adc	r9, r9
    493e:	aa 1c       	adc	r10, r10
    4940:	bb 1c       	adc	r11, r11
    4942:	7a 95       	dec	r23
    4944:	d1 f7       	brne	.-12     	; 0x493a <__stack+0x93b>
    4946:	8c 28       	or	r8, r12
    4948:	9d 28       	or	r9, r13
    494a:	ae 28       	or	r10, r14
    494c:	bf 28       	or	r11, r15
    494e:	68 96       	adiw	r28, 0x18	; 24
    4950:	88 82       	st	Y, r8
    4952:	99 82       	std	Y+1, r9	; 0x01
    4954:	aa 82       	std	Y+2, r10	; 0x02
    4956:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[158] = ROL(key->rk[152] + delta[2][28], 6);
    4958:	88 e3       	ldi	r24, 0x38	; 56
    495a:	88 1a       	sub	r8, r24
    495c:	88 ed       	ldi	r24, 0xD8	; 216
    495e:	98 0a       	sbc	r9, r24
    4960:	81 e6       	ldi	r24, 0x61	; 97
    4962:	a8 0a       	sbc	r10, r24
    4964:	88 e5       	ldi	r24, 0x58	; 88
    4966:	b8 0a       	sbc	r11, r24
    4968:	75 01       	movw	r14, r10
    496a:	64 01       	movw	r12, r8
    496c:	1a e1       	ldi	r17, 0x1A	; 26
    496e:	f6 94       	lsr	r15
    4970:	e7 94       	ror	r14
    4972:	d7 94       	ror	r13
    4974:	c7 94       	ror	r12
    4976:	1a 95       	dec	r17
    4978:	d1 f7       	brne	.-12     	; 0x496e <__stack+0x96f>
    497a:	06 e0       	ldi	r16, 0x06	; 6
    497c:	88 0c       	add	r8, r8
    497e:	99 1c       	adc	r9, r9
    4980:	aa 1c       	adc	r10, r10
    4982:	bb 1c       	adc	r11, r11
    4984:	0a 95       	dec	r16
    4986:	d1 f7       	brne	.-12     	; 0x497c <__stack+0x97d>
    4988:	8c 28       	or	r8, r12
    498a:	9d 28       	or	r9, r13
    498c:	ae 28       	or	r10, r14
    498e:	bf 28       	or	r11, r15
    4990:	68 96       	adiw	r28, 0x18	; 24
    4992:	88 82       	st	Y, r8
    4994:	99 82       	std	Y+1, r9	; 0x01
    4996:	aa 82       	std	Y+2, r10	; 0x02
    4998:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[164] = ROL(key->rk[158] + delta[3][29], 6);
    499a:	83 ee       	ldi	r24, 0xE3	; 227
    499c:	88 1a       	sub	r8, r24
    499e:	89 e1       	ldi	r24, 0x19	; 25
    49a0:	98 0a       	sbc	r9, r24
    49a2:	84 ee       	ldi	r24, 0xE4	; 228
    49a4:	a8 0a       	sbc	r10, r24
    49a6:	80 e7       	ldi	r24, 0x70	; 112
    49a8:	b8 0a       	sbc	r11, r24
    49aa:	75 01       	movw	r14, r10
    49ac:	64 01       	movw	r12, r8
    49ae:	8a e1       	ldi	r24, 0x1A	; 26
    49b0:	f6 94       	lsr	r15
    49b2:	e7 94       	ror	r14
    49b4:	d7 94       	ror	r13
    49b6:	c7 94       	ror	r12
    49b8:	8a 95       	dec	r24
    49ba:	d1 f7       	brne	.-12     	; 0x49b0 <__stack+0x9b1>
    49bc:	96 e0       	ldi	r25, 0x06	; 6
    49be:	88 0c       	add	r8, r8
    49c0:	99 1c       	adc	r9, r9
    49c2:	aa 1c       	adc	r10, r10
    49c4:	bb 1c       	adc	r11, r11
    49c6:	9a 95       	dec	r25
    49c8:	d1 f7       	brne	.-12     	; 0x49be <__stack+0x9bf>
    49ca:	c8 28       	or	r12, r8
    49cc:	d9 28       	or	r13, r9
    49ce:	ea 28       	or	r14, r10
    49d0:	fb 28       	or	r15, r11
    49d2:	68 96       	adiw	r28, 0x18	; 24
    49d4:	c8 82       	st	Y, r12
    49d6:	d9 82       	std	Y+1, r13	; 0x01
    49d8:	ea 82       	std	Y+2, r14	; 0x02
    49da:	fb 82       	std	Y+3, r15	; 0x03

		key->rk[  3] = ROL(loadU32(_mk[3]) + delta[0][ 3], 11);
    49dc:	1c 96       	adiw	r26, 0x0c	; 12
    49de:	8d 90       	ld	r8, X+
    49e0:	9d 90       	ld	r9, X+
    49e2:	ad 90       	ld	r10, X+
    49e4:	bc 90       	ld	r11, X
    49e6:	1f 97       	sbiw	r26, 0x0f	; 15
    49e8:	82 e2       	ldi	r24, 0x22	; 34
    49ea:	88 1a       	sub	r8, r24
    49ec:	81 eb       	ldi	r24, 0xB1	; 177
    49ee:	98 0a       	sbc	r9, r24
    49f0:	80 e8       	ldi	r24, 0x80	; 128
    49f2:	a8 0a       	sbc	r10, r24
    49f4:	80 ee       	ldi	r24, 0xE0	; 224
    49f6:	b8 0a       	sbc	r11, r24
    49f8:	75 01       	movw	r14, r10
    49fa:	64 01       	movw	r12, r8
    49fc:	65 e1       	ldi	r22, 0x15	; 21
    49fe:	f6 94       	lsr	r15
    4a00:	e7 94       	ror	r14
    4a02:	d7 94       	ror	r13
    4a04:	c7 94       	ror	r12
    4a06:	6a 95       	dec	r22
    4a08:	d1 f7       	brne	.-12     	; 0x49fe <__stack+0x9ff>
    4a0a:	7b e0       	ldi	r23, 0x0B	; 11
    4a0c:	88 0c       	add	r8, r8
    4a0e:	99 1c       	adc	r9, r9
    4a10:	aa 1c       	adc	r10, r10
    4a12:	bb 1c       	adc	r11, r11
    4a14:	7a 95       	dec	r23
    4a16:	d1 f7       	brne	.-12     	; 0x4a0c <__stack+0xa0d>
    4a18:	8c 28       	or	r8, r12
    4a1a:	9d 28       	or	r9, r13
    4a1c:	ae 28       	or	r10, r14
    4a1e:	bf 28       	or	r11, r15
    4a20:	84 86       	std	Z+12, r8	; 0x0c
    4a22:	95 86       	std	Z+13, r9	; 0x0d
    4a24:	a6 86       	std	Z+14, r10	; 0x0e
    4a26:	b7 86       	std	Z+15, r11	; 0x0f
		key->rk[  9] = ROL(key->rk[  3] + delta[1][ 4], 11);
    4a28:	8c ed       	ldi	r24, 0xDC	; 220
    4a2a:	88 1a       	sub	r8, r24
    4a2c:	8f e4       	ldi	r24, 0x4F	; 79
    4a2e:	98 0a       	sbc	r9, r24
    4a30:	89 ed       	ldi	r24, 0xD9	; 217
    4a32:	a8 0a       	sbc	r10, r24
    4a34:	89 eb       	ldi	r24, 0xB9	; 185
    4a36:	b8 0a       	sbc	r11, r24
    4a38:	75 01       	movw	r14, r10
    4a3a:	64 01       	movw	r12, r8
    4a3c:	15 e1       	ldi	r17, 0x15	; 21
    4a3e:	f6 94       	lsr	r15
    4a40:	e7 94       	ror	r14
    4a42:	d7 94       	ror	r13
    4a44:	c7 94       	ror	r12
    4a46:	1a 95       	dec	r17
    4a48:	d1 f7       	brne	.-12     	; 0x4a3e <__stack+0xa3f>
    4a4a:	0b e0       	ldi	r16, 0x0B	; 11
    4a4c:	88 0c       	add	r8, r8
    4a4e:	99 1c       	adc	r9, r9
    4a50:	aa 1c       	adc	r10, r10
    4a52:	bb 1c       	adc	r11, r11
    4a54:	0a 95       	dec	r16
    4a56:	d1 f7       	brne	.-12     	; 0x4a4c <__stack+0xa4d>
    4a58:	8c 28       	or	r8, r12
    4a5a:	9d 28       	or	r9, r13
    4a5c:	ae 28       	or	r10, r14
    4a5e:	bf 28       	or	r11, r15
    4a60:	84 a2       	std	Z+36, r8	; 0x24
    4a62:	95 a2       	std	Z+37, r9	; 0x25
    4a64:	a6 a2       	std	Z+38, r10	; 0x26
    4a66:	b7 a2       	std	Z+39, r11	; 0x27
		key->rk[ 15] = ROL(key->rk[  9] + delta[2][ 5], 11);
    4a68:	81 eb       	ldi	r24, 0xB1	; 177
    4a6a:	88 1a       	sub	r8, r24
    4a6c:	8e e6       	ldi	r24, 0x6E	; 110
    4a6e:	98 0a       	sbc	r9, r24
    4a70:	80 eb       	ldi	r24, 0xB0	; 176
    4a72:	a8 0a       	sbc	r10, r24
    4a74:	83 ec       	ldi	r24, 0xC3	; 195
    4a76:	b8 0a       	sbc	r11, r24
    4a78:	75 01       	movw	r14, r10
    4a7a:	64 01       	movw	r12, r8
    4a7c:	85 e1       	ldi	r24, 0x15	; 21
    4a7e:	f6 94       	lsr	r15
    4a80:	e7 94       	ror	r14
    4a82:	d7 94       	ror	r13
    4a84:	c7 94       	ror	r12
    4a86:	8a 95       	dec	r24
    4a88:	d1 f7       	brne	.-12     	; 0x4a7e <__stack+0xa7f>
    4a8a:	9b e0       	ldi	r25, 0x0B	; 11
    4a8c:	88 0c       	add	r8, r8
    4a8e:	99 1c       	adc	r9, r9
    4a90:	aa 1c       	adc	r10, r10
    4a92:	bb 1c       	adc	r11, r11
    4a94:	9a 95       	dec	r25
    4a96:	d1 f7       	brne	.-12     	; 0x4a8c <__stack+0xa8d>
    4a98:	8c 28       	or	r8, r12
    4a9a:	9d 28       	or	r9, r13
    4a9c:	ae 28       	or	r10, r14
    4a9e:	bf 28       	or	r11, r15
    4aa0:	84 ae       	std	Z+60, r8	; 0x3c
    4aa2:	95 ae       	std	Z+61, r9	; 0x3d
    4aa4:	a6 ae       	std	Z+62, r10	; 0x3e
    4aa6:	b7 ae       	std	Z+63, r11	; 0x3f
		key->rk[ 21] = ROL(key->rk[ 15] + delta[3][ 6], 11);
    4aa8:	82 ee       	ldi	r24, 0xE2	; 226
    4aaa:	88 1a       	sub	r8, r24
    4aac:	84 ec       	ldi	r24, 0xC4	; 196
    4aae:	98 0a       	sbc	r9, r24
    4ab0:	83 e3       	ldi	r24, 0x33	; 51
    4ab2:	a8 0a       	sbc	r10, r24
    4ab4:	88 ec       	ldi	r24, 0xC8	; 200
    4ab6:	b8 0a       	sbc	r11, r24
    4ab8:	75 01       	movw	r14, r10
    4aba:	64 01       	movw	r12, r8
    4abc:	65 e1       	ldi	r22, 0x15	; 21
    4abe:	f6 94       	lsr	r15
    4ac0:	e7 94       	ror	r14
    4ac2:	d7 94       	ror	r13
    4ac4:	c7 94       	ror	r12
    4ac6:	6a 95       	dec	r22
    4ac8:	d1 f7       	brne	.-12     	; 0x4abe <__stack+0xabf>
    4aca:	7b e0       	ldi	r23, 0x0B	; 11
    4acc:	88 0c       	add	r8, r8
    4ace:	99 1c       	adc	r9, r9
    4ad0:	aa 1c       	adc	r10, r10
    4ad2:	bb 1c       	adc	r11, r11
    4ad4:	7a 95       	dec	r23
    4ad6:	d1 f7       	brne	.-12     	; 0x4acc <__stack+0xacd>
    4ad8:	8c 28       	or	r8, r12
    4ada:	9d 28       	or	r9, r13
    4adc:	ae 28       	or	r10, r14
    4ade:	bf 28       	or	r11, r15
    4ae0:	cc 53       	subi	r28, 0x3C	; 60
    4ae2:	d2 40       	sbci	r29, 0x02	; 2
    4ae4:	88 82       	st	Y, r8
    4ae6:	99 82       	std	Y+1, r9	; 0x01
    4ae8:	aa 82       	std	Y+2, r10	; 0x02
    4aea:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 27] = ROL(key->rk[ 21] + delta[4][ 7], 11);
    4aec:	88 ec       	ldi	r24, 0xC8	; 200
    4aee:	88 1a       	sub	r8, r24
    4af0:	80 eb       	ldi	r24, 0xB0	; 176
    4af2:	98 0a       	sbc	r9, r24
    4af4:	8d ea       	ldi	r24, 0xAD	; 173
    4af6:	a8 0a       	sbc	r10, r24
    4af8:	80 e5       	ldi	r24, 0x50	; 80
    4afa:	b8 0a       	sbc	r11, r24
    4afc:	75 01       	movw	r14, r10
    4afe:	64 01       	movw	r12, r8
    4b00:	15 e1       	ldi	r17, 0x15	; 21
    4b02:	f6 94       	lsr	r15
    4b04:	e7 94       	ror	r14
    4b06:	d7 94       	ror	r13
    4b08:	c7 94       	ror	r12
    4b0a:	1a 95       	dec	r17
    4b0c:	d1 f7       	brne	.-12     	; 0x4b02 <__stack+0xb03>
    4b0e:	0b e0       	ldi	r16, 0x0B	; 11
    4b10:	88 0c       	add	r8, r8
    4b12:	99 1c       	adc	r9, r9
    4b14:	aa 1c       	adc	r10, r10
    4b16:	bb 1c       	adc	r11, r11
    4b18:	0a 95       	dec	r16
    4b1a:	d1 f7       	brne	.-12     	; 0x4b10 <__stack+0xb11>
    4b1c:	8c 28       	or	r8, r12
    4b1e:	9d 28       	or	r9, r13
    4b20:	ae 28       	or	r10, r14
    4b22:	bf 28       	or	r11, r15
    4b24:	68 96       	adiw	r28, 0x18	; 24
    4b26:	88 82       	st	Y, r8
    4b28:	99 82       	std	Y+1, r9	; 0x01
    4b2a:	aa 82       	std	Y+2, r10	; 0x02
    4b2c:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 33] = ROL(key->rk[ 27] + delta[5][ 8], 11);
    4b2e:	89 e3       	ldi	r24, 0x39	; 57
    4b30:	88 1a       	sub	r8, r24
    4b32:	85 ef       	ldi	r24, 0xF5	; 245
    4b34:	98 0a       	sbc	r9, r24
    4b36:	85 e2       	ldi	r24, 0x25	; 37
    4b38:	a8 0a       	sbc	r10, r24
    4b3a:	8a e7       	ldi	r24, 0x7A	; 122
    4b3c:	b8 0a       	sbc	r11, r24
    4b3e:	75 01       	movw	r14, r10
    4b40:	64 01       	movw	r12, r8
    4b42:	85 e1       	ldi	r24, 0x15	; 21
    4b44:	f6 94       	lsr	r15
    4b46:	e7 94       	ror	r14
    4b48:	d7 94       	ror	r13
    4b4a:	c7 94       	ror	r12
    4b4c:	8a 95       	dec	r24
    4b4e:	d1 f7       	brne	.-12     	; 0x4b44 <__stack+0xb45>
    4b50:	9b e0       	ldi	r25, 0x0B	; 11
    4b52:	88 0c       	add	r8, r8
    4b54:	99 1c       	adc	r9, r9
    4b56:	aa 1c       	adc	r10, r10
    4b58:	bb 1c       	adc	r11, r11
    4b5a:	9a 95       	dec	r25
    4b5c:	d1 f7       	brne	.-12     	; 0x4b52 <__stack+0xb53>
    4b5e:	8c 28       	or	r8, r12
    4b60:	9d 28       	or	r9, r13
    4b62:	ae 28       	or	r10, r14
    4b64:	bf 28       	or	r11, r15
    4b66:	68 96       	adiw	r28, 0x18	; 24
    4b68:	88 82       	st	Y, r8
    4b6a:	99 82       	std	Y+1, r9	; 0x01
    4b6c:	aa 82       	std	Y+2, r10	; 0x02
    4b6e:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 39] = ROL(key->rk[ 33] + delta[0][ 9], 11);
    4b70:	89 e7       	ldi	r24, 0x79	; 121
    4b72:	88 1a       	sub	r8, r24
    4b74:	88 e4       	ldi	r24, 0x48	; 72
    4b76:	98 0a       	sbc	r9, r24
    4b78:	8c e2       	ldi	r24, 0x2C	; 44
    4b7a:	a8 0a       	sbc	r10, r24
    4b7c:	80 e2       	ldi	r24, 0x20	; 32
    4b7e:	b8 0a       	sbc	r11, r24
    4b80:	75 01       	movw	r14, r10
    4b82:	64 01       	movw	r12, r8
    4b84:	65 e1       	ldi	r22, 0x15	; 21
    4b86:	f6 94       	lsr	r15
    4b88:	e7 94       	ror	r14
    4b8a:	d7 94       	ror	r13
    4b8c:	c7 94       	ror	r12
    4b8e:	6a 95       	dec	r22
    4b90:	d1 f7       	brne	.-12     	; 0x4b86 <__stack+0xb87>
    4b92:	7b e0       	ldi	r23, 0x0B	; 11
    4b94:	88 0c       	add	r8, r8
    4b96:	99 1c       	adc	r9, r9
    4b98:	aa 1c       	adc	r10, r10
    4b9a:	bb 1c       	adc	r11, r11
    4b9c:	7a 95       	dec	r23
    4b9e:	d1 f7       	brne	.-12     	; 0x4b94 <__stack+0xb95>
    4ba0:	8c 28       	or	r8, r12
    4ba2:	9d 28       	or	r9, r13
    4ba4:	ae 28       	or	r10, r14
    4ba6:	bf 28       	or	r11, r15
    4ba8:	68 96       	adiw	r28, 0x18	; 24
    4baa:	88 82       	st	Y, r8
    4bac:	99 82       	std	Y+1, r9	; 0x01
    4bae:	aa 82       	std	Y+2, r10	; 0x02
    4bb0:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 45] = ROL(key->rk[ 39] + delta[1][10], 11);
    4bb2:	8f ee       	ldi	r24, 0xEF	; 239
    4bb4:	88 1a       	sub	r8, r24
    4bb6:	86 ef       	ldi	r24, 0xF6	; 246
    4bb8:	98 0a       	sbc	r9, r24
    4bba:	83 e5       	ldi	r24, 0x53	; 83
    4bbc:	a8 0a       	sbc	r10, r24
    4bbe:	86 e7       	ldi	r24, 0x76	; 118
    4bc0:	b8 0a       	sbc	r11, r24
    4bc2:	75 01       	movw	r14, r10
    4bc4:	64 01       	movw	r12, r8
    4bc6:	15 e1       	ldi	r17, 0x15	; 21
    4bc8:	f6 94       	lsr	r15
    4bca:	e7 94       	ror	r14
    4bcc:	d7 94       	ror	r13
    4bce:	c7 94       	ror	r12
    4bd0:	1a 95       	dec	r17
    4bd2:	d1 f7       	brne	.-12     	; 0x4bc8 <__stack+0xbc9>
    4bd4:	0b e0       	ldi	r16, 0x0B	; 11
    4bd6:	88 0c       	add	r8, r8
    4bd8:	99 1c       	adc	r9, r9
    4bda:	aa 1c       	adc	r10, r10
    4bdc:	bb 1c       	adc	r11, r11
    4bde:	0a 95       	dec	r16
    4be0:	d1 f7       	brne	.-12     	; 0x4bd6 <__stack+0xbd7>
    4be2:	8c 28       	or	r8, r12
    4be4:	9d 28       	or	r9, r13
    4be6:	ae 28       	or	r10, r14
    4be8:	bf 28       	or	r11, r15
    4bea:	68 96       	adiw	r28, 0x18	; 24
    4bec:	88 82       	st	Y, r8
    4bee:	99 82       	std	Y+1, r9	; 0x01
    4bf0:	aa 82       	std	Y+2, r10	; 0x02
    4bf2:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 51] = ROL(key->rk[ 45] + delta[2][11], 11);
    4bf4:	81 e3       	ldi	r24, 0x31	; 49
    4bf6:	88 1a       	sub	r8, r24
    4bf8:	8c ea       	ldi	r24, 0xAC	; 172
    4bfa:	98 0a       	sbc	r9, r24
    4bfc:	8b e1       	ldi	r24, 0x1B	; 27
    4bfe:	a8 0a       	sbc	r10, r24
    4c00:	8c ee       	ldi	r24, 0xEC	; 236
    4c02:	b8 0a       	sbc	r11, r24
    4c04:	75 01       	movw	r14, r10
    4c06:	64 01       	movw	r12, r8
    4c08:	85 e1       	ldi	r24, 0x15	; 21
    4c0a:	f6 94       	lsr	r15
    4c0c:	e7 94       	ror	r14
    4c0e:	d7 94       	ror	r13
    4c10:	c7 94       	ror	r12
    4c12:	8a 95       	dec	r24
    4c14:	d1 f7       	brne	.-12     	; 0x4c0a <__stack+0xc0b>
    4c16:	9b e0       	ldi	r25, 0x0B	; 11
    4c18:	88 0c       	add	r8, r8
    4c1a:	99 1c       	adc	r9, r9
    4c1c:	aa 1c       	adc	r10, r10
    4c1e:	bb 1c       	adc	r11, r11
    4c20:	9a 95       	dec	r25
    4c22:	d1 f7       	brne	.-12     	; 0x4c18 <__stack+0xc19>
    4c24:	8c 28       	or	r8, r12
    4c26:	9d 28       	or	r9, r13
    4c28:	ae 28       	or	r10, r14
    4c2a:	bf 28       	or	r11, r15
    4c2c:	68 96       	adiw	r28, 0x18	; 24
    4c2e:	88 82       	st	Y, r8
    4c30:	99 82       	std	Y+1, r9	; 0x01
    4c32:	aa 82       	std	Y+2, r10	; 0x02
    4c34:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 57] = ROL(key->rk[ 51] + delta[3][12], 11);
    4c36:	83 e7       	ldi	r24, 0x73	; 115
    4c38:	88 1a       	sub	r8, r24
    4c3a:	88 e3       	ldi	r24, 0x38	; 56
    4c3c:	98 0a       	sbc	r9, r24
    4c3e:	81 ef       	ldi	r24, 0xF1	; 241
    4c40:	a8 0a       	sbc	r10, r24
    4c42:	8c e0       	ldi	r24, 0x0C	; 12
    4c44:	b8 0a       	sbc	r11, r24
    4c46:	75 01       	movw	r14, r10
    4c48:	64 01       	movw	r12, r8
    4c4a:	65 e1       	ldi	r22, 0x15	; 21
    4c4c:	f6 94       	lsr	r15
    4c4e:	e7 94       	ror	r14
    4c50:	d7 94       	ror	r13
    4c52:	c7 94       	ror	r12
    4c54:	6a 95       	dec	r22
    4c56:	d1 f7       	brne	.-12     	; 0x4c4c <__stack+0xc4d>
    4c58:	7b e0       	ldi	r23, 0x0B	; 11
    4c5a:	88 0c       	add	r8, r8
    4c5c:	99 1c       	adc	r9, r9
    4c5e:	aa 1c       	adc	r10, r10
    4c60:	bb 1c       	adc	r11, r11
    4c62:	7a 95       	dec	r23
    4c64:	d1 f7       	brne	.-12     	; 0x4c5a <__stack+0xc5b>
    4c66:	8c 28       	or	r8, r12
    4c68:	9d 28       	or	r9, r13
    4c6a:	ae 28       	or	r10, r14
    4c6c:	bf 28       	or	r11, r15
    4c6e:	68 96       	adiw	r28, 0x18	; 24
    4c70:	88 82       	st	Y, r8
    4c72:	99 82       	std	Y+1, r9	; 0x01
    4c74:	aa 82       	std	Y+2, r10	; 0x02
    4c76:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 63] = ROL(key->rk[ 57] + delta[4][13], 11);
    4c78:	85 ed       	ldi	r24, 0xD5	; 213
    4c7a:	88 1a       	sub	r8, r24
    4c7c:	81 e3       	ldi	r24, 0x31	; 49
    4c7e:	98 0a       	sbc	r9, r24
    4c80:	8c e6       	ldi	r24, 0x6C	; 108
    4c82:	a8 0a       	sbc	r10, r24
    4c84:	8b e2       	ldi	r24, 0x2B	; 43
    4c86:	b8 0a       	sbc	r11, r24
    4c88:	75 01       	movw	r14, r10
    4c8a:	64 01       	movw	r12, r8
    4c8c:	15 e1       	ldi	r17, 0x15	; 21
    4c8e:	f6 94       	lsr	r15
    4c90:	e7 94       	ror	r14
    4c92:	d7 94       	ror	r13
    4c94:	c7 94       	ror	r12
    4c96:	1a 95       	dec	r17
    4c98:	d1 f7       	brne	.-12     	; 0x4c8e <__stack+0xc8f>
    4c9a:	0b e0       	ldi	r16, 0x0B	; 11
    4c9c:	88 0c       	add	r8, r8
    4c9e:	99 1c       	adc	r9, r9
    4ca0:	aa 1c       	adc	r10, r10
    4ca2:	bb 1c       	adc	r11, r11
    4ca4:	0a 95       	dec	r16
    4ca6:	d1 f7       	brne	.-12     	; 0x4c9c <__stack+0xc9d>
    4ca8:	8c 28       	or	r8, r12
    4caa:	9d 28       	or	r9, r13
    4cac:	ae 28       	or	r10, r14
    4cae:	bf 28       	or	r11, r15
    4cb0:	68 96       	adiw	r28, 0x18	; 24
    4cb2:	88 82       	st	Y, r8
    4cb4:	99 82       	std	Y+1, r9	; 0x01
    4cb6:	aa 82       	std	Y+2, r10	; 0x02
    4cb8:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 69] = ROL(key->rk[ 63] + delta[5][14], 11);
    4cba:	8f e1       	ldi	r24, 0x1F	; 31
    4cbc:	88 1a       	sub	r8, r24
    4cbe:	8e e4       	ldi	r24, 0x4E	; 78
    4cc0:	98 0a       	sbc	r9, r24
    4cc2:	8d e7       	ldi	r24, 0x7D	; 125
    4cc4:	a8 0a       	sbc	r10, r24
    4cc6:	89 e8       	ldi	r24, 0x89	; 137
    4cc8:	b8 0a       	sbc	r11, r24
    4cca:	75 01       	movw	r14, r10
    4ccc:	64 01       	movw	r12, r8
    4cce:	85 e1       	ldi	r24, 0x15	; 21
    4cd0:	f6 94       	lsr	r15
    4cd2:	e7 94       	ror	r14
    4cd4:	d7 94       	ror	r13
    4cd6:	c7 94       	ror	r12
    4cd8:	8a 95       	dec	r24
    4cda:	d1 f7       	brne	.-12     	; 0x4cd0 <__stack+0xcd1>
    4cdc:	9b e0       	ldi	r25, 0x0B	; 11
    4cde:	88 0c       	add	r8, r8
    4ce0:	99 1c       	adc	r9, r9
    4ce2:	aa 1c       	adc	r10, r10
    4ce4:	bb 1c       	adc	r11, r11
    4ce6:	9a 95       	dec	r25
    4ce8:	d1 f7       	brne	.-12     	; 0x4cde <__stack+0xcdf>
    4cea:	8c 28       	or	r8, r12
    4cec:	9d 28       	or	r9, r13
    4cee:	ae 28       	or	r10, r14
    4cf0:	bf 28       	or	r11, r15
    4cf2:	68 96       	adiw	r28, 0x18	; 24
    4cf4:	88 82       	st	Y, r8
    4cf6:	99 82       	std	Y+1, r9	; 0x01
    4cf8:	aa 82       	std	Y+2, r10	; 0x02
    4cfa:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 75] = ROL(key->rk[ 69] + delta[0][15], 11);
    4cfc:	89 e0       	ldi	r24, 0x09	; 9
    4cfe:	88 1a       	sub	r8, r24
    4d00:	8e e1       	ldi	r24, 0x1E	; 30
    4d02:	98 0a       	sbc	r9, r24
    4d04:	82 e1       	ldi	r24, 0x12	; 18
    4d06:	a8 0a       	sbc	r10, r24
    4d08:	8b e0       	ldi	r24, 0x0B	; 11
    4d0a:	b8 0a       	sbc	r11, r24
    4d0c:	75 01       	movw	r14, r10
    4d0e:	64 01       	movw	r12, r8
    4d10:	65 e1       	ldi	r22, 0x15	; 21
    4d12:	f6 94       	lsr	r15
    4d14:	e7 94       	ror	r14
    4d16:	d7 94       	ror	r13
    4d18:	c7 94       	ror	r12
    4d1a:	6a 95       	dec	r22
    4d1c:	d1 f7       	brne	.-12     	; 0x4d12 <__stack+0xd13>
    4d1e:	7b e0       	ldi	r23, 0x0B	; 11
    4d20:	88 0c       	add	r8, r8
    4d22:	99 1c       	adc	r9, r9
    4d24:	aa 1c       	adc	r10, r10
    4d26:	bb 1c       	adc	r11, r11
    4d28:	7a 95       	dec	r23
    4d2a:	d1 f7       	brne	.-12     	; 0x4d20 <__stack+0xd21>
    4d2c:	8c 28       	or	r8, r12
    4d2e:	9d 28       	or	r9, r13
    4d30:	ae 28       	or	r10, r14
    4d32:	bf 28       	or	r11, r15
    4d34:	68 96       	adiw	r28, 0x18	; 24
    4d36:	88 82       	st	Y, r8
    4d38:	99 82       	std	Y+1, r9	; 0x01
    4d3a:	aa 82       	std	Y+2, r10	; 0x02
    4d3c:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 81] = ROL(key->rk[ 75] + delta[1][16], 11);
    4d3e:	8e e9       	ldi	r24, 0x9E	; 158
    4d40:	88 1a       	sub	r8, r24
    4d42:	8b eb       	ldi	r24, 0xBB	; 187
    4d44:	98 0a       	sbc	r9, r24
    4d46:	8d ef       	ldi	r24, 0xFD	; 253
    4d48:	a8 0a       	sbc	r10, r24
    4d4a:	84 e9       	ldi	r24, 0x94	; 148
    4d4c:	b8 0a       	sbc	r11, r24
    4d4e:	75 01       	movw	r14, r10
    4d50:	64 01       	movw	r12, r8
    4d52:	15 e1       	ldi	r17, 0x15	; 21
    4d54:	f6 94       	lsr	r15
    4d56:	e7 94       	ror	r14
    4d58:	d7 94       	ror	r13
    4d5a:	c7 94       	ror	r12
    4d5c:	1a 95       	dec	r17
    4d5e:	d1 f7       	brne	.-12     	; 0x4d54 <__stack+0xd55>
    4d60:	0b e0       	ldi	r16, 0x0B	; 11
    4d62:	88 0c       	add	r8, r8
    4d64:	99 1c       	adc	r9, r9
    4d66:	aa 1c       	adc	r10, r10
    4d68:	bb 1c       	adc	r11, r11
    4d6a:	0a 95       	dec	r16
    4d6c:	d1 f7       	brne	.-12     	; 0x4d62 <__stack+0xd63>
    4d6e:	8c 28       	or	r8, r12
    4d70:	9d 28       	or	r9, r13
    4d72:	ae 28       	or	r10, r14
    4d74:	bf 28       	or	r11, r15
    4d76:	68 96       	adiw	r28, 0x18	; 24
    4d78:	88 82       	st	Y, r8
    4d7a:	99 82       	std	Y+1, r9	; 0x01
    4d7c:	aa 82       	std	Y+2, r10	; 0x02
    4d7e:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 87] = ROL(key->rk[ 81] + delta[2][17], 11);
    4d80:	8c e3       	ldi	r24, 0x3C	; 60
    4d82:	88 1a       	sub	r8, r24
    4d84:	8c e0       	ldi	r24, 0x0C	; 12
    4d86:	98 0a       	sbc	r9, r24
    4d88:	8b ee       	ldi	r24, 0xEB	; 235
    4d8a:	a8 0a       	sbc	r10, r24
    4d8c:	86 e0       	ldi	r24, 0x06	; 6
    4d8e:	b8 0a       	sbc	r11, r24
    4d90:	75 01       	movw	r14, r10
    4d92:	64 01       	movw	r12, r8
    4d94:	85 e1       	ldi	r24, 0x15	; 21
    4d96:	f6 94       	lsr	r15
    4d98:	e7 94       	ror	r14
    4d9a:	d7 94       	ror	r13
    4d9c:	c7 94       	ror	r12
    4d9e:	8a 95       	dec	r24
    4da0:	d1 f7       	brne	.-12     	; 0x4d96 <__stack+0xd97>
    4da2:	9b e0       	ldi	r25, 0x0B	; 11
    4da4:	88 0c       	add	r8, r8
    4da6:	99 1c       	adc	r9, r9
    4da8:	aa 1c       	adc	r10, r10
    4daa:	bb 1c       	adc	r11, r11
    4dac:	9a 95       	dec	r25
    4dae:	d1 f7       	brne	.-12     	; 0x4da4 <__stack+0xda5>
    4db0:	8c 28       	or	r8, r12
    4db2:	9d 28       	or	r9, r13
    4db4:	ae 28       	or	r10, r14
    4db6:	bf 28       	or	r11, r15
    4db8:	68 96       	adiw	r28, 0x18	; 24
    4dba:	88 82       	st	Y, r8
    4dbc:	99 82       	std	Y+1, r9	; 0x01
    4dbe:	aa 82       	std	Y+2, r10	; 0x02
    4dc0:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 93] = ROL(key->rk[ 87] + delta[3][18], 11);
    4dc2:	84 e8       	ldi	r24, 0x84	; 132
    4dc4:	88 1a       	sub	r8, r24
    4dc6:	8c e1       	ldi	r24, 0x1C	; 28
    4dc8:	98 0a       	sbc	r9, r24
    4dca:	8e e4       	ldi	r24, 0x4E	; 78
    4dcc:	a8 0a       	sbc	r10, r24
    4dce:	8c e3       	ldi	r24, 0x3C	; 60
    4dd0:	b8 0a       	sbc	r11, r24
    4dd2:	75 01       	movw	r14, r10
    4dd4:	64 01       	movw	r12, r8
    4dd6:	65 e1       	ldi	r22, 0x15	; 21
    4dd8:	f6 94       	lsr	r15
    4dda:	e7 94       	ror	r14
    4ddc:	d7 94       	ror	r13
    4dde:	c7 94       	ror	r12
    4de0:	6a 95       	dec	r22
    4de2:	d1 f7       	brne	.-12     	; 0x4dd8 <__stack+0xdd9>
    4de4:	7b e0       	ldi	r23, 0x0B	; 11
    4de6:	88 0c       	add	r8, r8
    4de8:	99 1c       	adc	r9, r9
    4dea:	aa 1c       	adc	r10, r10
    4dec:	bb 1c       	adc	r11, r11
    4dee:	7a 95       	dec	r23
    4df0:	d1 f7       	brne	.-12     	; 0x4de6 <__stack+0xde7>
    4df2:	8c 28       	or	r8, r12
    4df4:	9d 28       	or	r9, r13
    4df6:	ae 28       	or	r10, r14
    4df8:	bf 28       	or	r11, r15
    4dfa:	68 96       	adiw	r28, 0x18	; 24
    4dfc:	88 82       	st	Y, r8
    4dfe:	99 82       	std	Y+1, r9	; 0x01
    4e00:	aa 82       	std	Y+2, r10	; 0x02
    4e02:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 99] = ROL(key->rk[ 93] + delta[4][19], 11);
    4e04:	8b e0       	ldi	r24, 0x0B	; 11
    4e06:	88 1a       	sub	r8, r24
    4e08:	85 e7       	ldi	r24, 0x75	; 117
    4e0a:	98 0a       	sbc	r9, r24
    4e0c:	8c e0       	ldi	r24, 0x0C	; 12
    4e0e:	a8 0a       	sbc	r10, r24
    4e10:	8b ed       	ldi	r24, 0xDB	; 219
    4e12:	b8 0a       	sbc	r11, r24
    4e14:	75 01       	movw	r14, r10
    4e16:	64 01       	movw	r12, r8
    4e18:	15 e1       	ldi	r17, 0x15	; 21
    4e1a:	f6 94       	lsr	r15
    4e1c:	e7 94       	ror	r14
    4e1e:	d7 94       	ror	r13
    4e20:	c7 94       	ror	r12
    4e22:	1a 95       	dec	r17
    4e24:	d1 f7       	brne	.-12     	; 0x4e1a <__stack+0xe1b>
    4e26:	0b e0       	ldi	r16, 0x0B	; 11
    4e28:	88 0c       	add	r8, r8
    4e2a:	99 1c       	adc	r9, r9
    4e2c:	aa 1c       	adc	r10, r10
    4e2e:	bb 1c       	adc	r11, r11
    4e30:	0a 95       	dec	r16
    4e32:	d1 f7       	brne	.-12     	; 0x4e28 <__stack+0xe29>
    4e34:	8c 28       	or	r8, r12
    4e36:	9d 28       	or	r9, r13
    4e38:	ae 28       	or	r10, r14
    4e3a:	bf 28       	or	r11, r15
    4e3c:	68 96       	adiw	r28, 0x18	; 24
    4e3e:	88 82       	st	Y, r8
    4e40:	99 82       	std	Y+1, r9	; 0x01
    4e42:	aa 82       	std	Y+2, r10	; 0x02
    4e44:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[105] = ROL(key->rk[ 99] + delta[5][20], 11);
    4e46:	83 ea       	ldi	r24, 0xA3	; 163
    4e48:	88 1a       	sub	r8, r24
    4e4a:	87 e8       	ldi	r24, 0x87	; 135
    4e4c:	98 0a       	sbc	r9, r24
    4e4e:	83 e5       	ldi	r24, 0x53	; 83
    4e50:	a8 0a       	sbc	r10, r24
    4e52:	8f e5       	ldi	r24, 0x5F	; 95
    4e54:	b8 0a       	sbc	r11, r24
    4e56:	75 01       	movw	r14, r10
    4e58:	64 01       	movw	r12, r8
    4e5a:	85 e1       	ldi	r24, 0x15	; 21
    4e5c:	f6 94       	lsr	r15
    4e5e:	e7 94       	ror	r14
    4e60:	d7 94       	ror	r13
    4e62:	c7 94       	ror	r12
    4e64:	8a 95       	dec	r24
    4e66:	d1 f7       	brne	.-12     	; 0x4e5c <__stack+0xe5d>
    4e68:	9b e0       	ldi	r25, 0x0B	; 11
    4e6a:	88 0c       	add	r8, r8
    4e6c:	99 1c       	adc	r9, r9
    4e6e:	aa 1c       	adc	r10, r10
    4e70:	bb 1c       	adc	r11, r11
    4e72:	9a 95       	dec	r25
    4e74:	d1 f7       	brne	.-12     	; 0x4e6a <__stack+0xe6b>
    4e76:	8c 28       	or	r8, r12
    4e78:	9d 28       	or	r9, r13
    4e7a:	ae 28       	or	r10, r14
    4e7c:	bf 28       	or	r11, r15
    4e7e:	68 96       	adiw	r28, 0x18	; 24
    4e80:	88 82       	st	Y, r8
    4e82:	99 82       	std	Y+1, r9	; 0x01
    4e84:	aa 82       	std	Y+2, r10	; 0x02
    4e86:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[111] = ROL(key->rk[105] + delta[0][21], 11);
    4e88:	83 e0       	ldi	r24, 0x03	; 3
    4e8a:	88 1a       	sub	r8, r24
    4e8c:	82 e8       	ldi	r24, 0x82	; 130
    4e8e:	98 0a       	sbc	r9, r24
    4e90:	87 e8       	ldi	r24, 0x87	; 135
    4e92:	a8 0a       	sbc	r10, r24
    4e94:	84 ec       	ldi	r24, 0xC4	; 196
    4e96:	b8 0a       	sbc	r11, r24
    4e98:	75 01       	movw	r14, r10
    4e9a:	64 01       	movw	r12, r8
    4e9c:	65 e1       	ldi	r22, 0x15	; 21
    4e9e:	f6 94       	lsr	r15
    4ea0:	e7 94       	ror	r14
    4ea2:	d7 94       	ror	r13
    4ea4:	c7 94       	ror	r12
    4ea6:	6a 95       	dec	r22
    4ea8:	d1 f7       	brne	.-12     	; 0x4e9e <__stack+0xe9f>
    4eaa:	7b e0       	ldi	r23, 0x0B	; 11
    4eac:	88 0c       	add	r8, r8
    4eae:	99 1c       	adc	r9, r9
    4eb0:	aa 1c       	adc	r10, r10
    4eb2:	bb 1c       	adc	r11, r11
    4eb4:	7a 95       	dec	r23
    4eb6:	d1 f7       	brne	.-12     	; 0x4eac <__stack+0xead>
    4eb8:	8c 28       	or	r8, r12
    4eba:	9d 28       	or	r9, r13
    4ebc:	ae 28       	or	r10, r14
    4ebe:	bf 28       	or	r11, r15
    4ec0:	68 96       	adiw	r28, 0x18	; 24
    4ec2:	88 82       	st	Y, r8
    4ec4:	99 82       	std	Y+1, r9	; 0x01
    4ec6:	aa 82       	std	Y+2, r10	; 0x02
    4ec8:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[117] = ROL(key->rk[111] + delta[1][22], 11);
    4eca:	86 e6       	ldi	r24, 0x66	; 102
    4ecc:	88 1a       	sub	r8, r24
    4ece:	87 ee       	ldi	r24, 0xE7	; 231
    4ed0:	98 0a       	sbc	r9, r24
    4ed2:	8e e6       	ldi	r24, 0x6E	; 110
    4ed4:	a8 0a       	sbc	r10, r24
    4ed6:	8f e3       	ldi	r24, 0x3F	; 63
    4ed8:	b8 0a       	sbc	r11, r24
    4eda:	75 01       	movw	r14, r10
    4edc:	64 01       	movw	r12, r8
    4ede:	15 e1       	ldi	r17, 0x15	; 21
    4ee0:	f6 94       	lsr	r15
    4ee2:	e7 94       	ror	r14
    4ee4:	d7 94       	ror	r13
    4ee6:	c7 94       	ror	r12
    4ee8:	1a 95       	dec	r17
    4eea:	d1 f7       	brne	.-12     	; 0x4ee0 <__stack+0xee1>
    4eec:	0b e0       	ldi	r16, 0x0B	; 11
    4eee:	88 0c       	add	r8, r8
    4ef0:	99 1c       	adc	r9, r9
    4ef2:	aa 1c       	adc	r10, r10
    4ef4:	bb 1c       	adc	r11, r11
    4ef6:	0a 95       	dec	r16
    4ef8:	d1 f7       	brne	.-12     	; 0x4eee <__stack+0xeef>
    4efa:	8c 28       	or	r8, r12
    4efc:	9d 28       	or	r9, r13
    4efe:	ae 28       	or	r10, r14
    4f00:	bf 28       	or	r11, r15
    4f02:	68 96       	adiw	r28, 0x18	; 24
    4f04:	88 82       	st	Y, r8
    4f06:	99 82       	std	Y+1, r9	; 0x01
    4f08:	aa 82       	std	Y+2, r10	; 0x02
    4f0a:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[123] = ROL(key->rk[117] + delta[2][23], 11);
    4f0c:	82 ec       	ldi	r24, 0xC2	; 194
    4f0e:	88 1a       	sub	r8, r24
    4f10:	8e e0       	ldi	r24, 0x0E	; 14
    4f12:	98 0a       	sbc	r9, r24
    4f14:	83 ec       	ldi	r24, 0xC3	; 195
    4f16:	a8 0a       	sbc	r10, r24
    4f18:	8a eb       	ldi	r24, 0xBA	; 186
    4f1a:	b8 0a       	sbc	r11, r24
    4f1c:	75 01       	movw	r14, r10
    4f1e:	64 01       	movw	r12, r8
    4f20:	85 e1       	ldi	r24, 0x15	; 21
    4f22:	f6 94       	lsr	r15
    4f24:	e7 94       	ror	r14
    4f26:	d7 94       	ror	r13
    4f28:	c7 94       	ror	r12
    4f2a:	8a 95       	dec	r24
    4f2c:	d1 f7       	brne	.-12     	; 0x4f22 <__stack+0xf23>
    4f2e:	9b e0       	ldi	r25, 0x0B	; 11
    4f30:	88 0c       	add	r8, r8
    4f32:	99 1c       	adc	r9, r9
    4f34:	aa 1c       	adc	r10, r10
    4f36:	bb 1c       	adc	r11, r11
    4f38:	9a 95       	dec	r25
    4f3a:	d1 f7       	brne	.-12     	; 0x4f30 <__stack+0xf31>
    4f3c:	8c 28       	or	r8, r12
    4f3e:	9d 28       	or	r9, r13
    4f40:	ae 28       	or	r10, r14
    4f42:	bf 28       	or	r11, r15
    4f44:	68 96       	adiw	r28, 0x18	; 24
    4f46:	88 82       	st	Y, r8
    4f48:	99 82       	std	Y+1, r9	; 0x01
    4f4a:	aa 82       	std	Y+2, r10	; 0x02
    4f4c:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[129] = ROL(key->rk[123] + delta[3][24], 11);
    4f4e:	80 ed       	ldi	r24, 0xD0	; 208
    4f50:	88 1a       	sub	r8, r24
    4f52:	80 e2       	ldi	r24, 0x20	; 32
    4f54:	98 0a       	sbc	r9, r24
    4f56:	87 e8       	ldi	r24, 0x87	; 135
    4f58:	a8 0a       	sbc	r10, r24
    4f5a:	83 e1       	ldi	r24, 0x13	; 19
    4f5c:	b8 0a       	sbc	r11, r24
    4f5e:	75 01       	movw	r14, r10
    4f60:	64 01       	movw	r12, r8
    4f62:	65 e1       	ldi	r22, 0x15	; 21
    4f64:	f6 94       	lsr	r15
    4f66:	e7 94       	ror	r14
    4f68:	d7 94       	ror	r13
    4f6a:	c7 94       	ror	r12
    4f6c:	6a 95       	dec	r22
    4f6e:	d1 f7       	brne	.-12     	; 0x4f64 <__stack+0xf65>
    4f70:	7b e0       	ldi	r23, 0x0B	; 11
    4f72:	88 0c       	add	r8, r8
    4f74:	99 1c       	adc	r9, r9
    4f76:	aa 1c       	adc	r10, r10
    4f78:	bb 1c       	adc	r11, r11
    4f7a:	7a 95       	dec	r23
    4f7c:	d1 f7       	brne	.-12     	; 0x4f72 <__stack+0xf73>
    4f7e:	8c 28       	or	r8, r12
    4f80:	9d 28       	or	r9, r13
    4f82:	ae 28       	or	r10, r14
    4f84:	bf 28       	or	r11, r15
    4f86:	68 96       	adiw	r28, 0x18	; 24
    4f88:	88 82       	st	Y, r8
    4f8a:	99 82       	std	Y+1, r9	; 0x01
    4f8c:	aa 82       	std	Y+2, r10	; 0x02
    4f8e:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[135] = ROL(key->rk[129] + delta[4][25], 11);
    4f90:	87 eb       	ldi	r24, 0xB7	; 183
    4f92:	88 1a       	sub	r8, r24
    4f94:	82 e4       	ldi	r24, 0x42	; 66
    4f96:	98 0a       	sbc	r9, r24
    4f98:	8d e1       	ldi	r24, 0x1D	; 29
    4f9a:	a8 0a       	sbc	r10, r24
    4f9c:	83 ec       	ldi	r24, 0xC3	; 195
    4f9e:	b8 0a       	sbc	r11, r24
    4fa0:	75 01       	movw	r14, r10
    4fa2:	64 01       	movw	r12, r8
    4fa4:	15 e1       	ldi	r17, 0x15	; 21
    4fa6:	f6 94       	lsr	r15
    4fa8:	e7 94       	ror	r14
    4faa:	d7 94       	ror	r13
    4fac:	c7 94       	ror	r12
    4fae:	1a 95       	dec	r17
    4fb0:	d1 f7       	brne	.-12     	; 0x4fa6 <__stack+0xfa7>
    4fb2:	0b e0       	ldi	r16, 0x0B	; 11
    4fb4:	88 0c       	add	r8, r8
    4fb6:	99 1c       	adc	r9, r9
    4fb8:	aa 1c       	adc	r10, r10
    4fba:	bb 1c       	adc	r11, r11
    4fbc:	0a 95       	dec	r16
    4fbe:	d1 f7       	brne	.-12     	; 0x4fb4 <__stack+0xfb5>
    4fc0:	8c 28       	or	r8, r12
    4fc2:	9d 28       	or	r9, r13
    4fc4:	ae 28       	or	r10, r14
    4fc6:	bf 28       	or	r11, r15
    4fc8:	68 96       	adiw	r28, 0x18	; 24
    4fca:	88 82       	st	Y, r8
    4fcc:	99 82       	std	Y+1, r9	; 0x01
    4fce:	aa 82       	std	Y+2, r10	; 0x02
    4fd0:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[141] = ROL(key->rk[135] + delta[5][26], 11);
    4fd2:	88 e9       	ldi	r24, 0x98	; 152
    4fd4:	88 1a       	sub	r8, r24
    4fd6:	88 ee       	ldi	r24, 0xE8	; 232
    4fd8:	98 0a       	sbc	r9, r24
    4fda:	81 ee       	ldi	r24, 0xE1	; 225
    4fdc:	a8 0a       	sbc	r10, r24
    4fde:	84 ed       	ldi	r24, 0xD4	; 212
    4fe0:	b8 0a       	sbc	r11, r24
    4fe2:	75 01       	movw	r14, r10
    4fe4:	64 01       	movw	r12, r8
    4fe6:	85 e1       	ldi	r24, 0x15	; 21
    4fe8:	f6 94       	lsr	r15
    4fea:	e7 94       	ror	r14
    4fec:	d7 94       	ror	r13
    4fee:	c7 94       	ror	r12
    4ff0:	8a 95       	dec	r24
    4ff2:	d1 f7       	brne	.-12     	; 0x4fe8 <__stack+0xfe9>
    4ff4:	9b e0       	ldi	r25, 0x0B	; 11
    4ff6:	88 0c       	add	r8, r8
    4ff8:	99 1c       	adc	r9, r9
    4ffa:	aa 1c       	adc	r10, r10
    4ffc:	bb 1c       	adc	r11, r11
    4ffe:	9a 95       	dec	r25
    5000:	d1 f7       	brne	.-12     	; 0x4ff6 <__stack+0xff7>
    5002:	8c 28       	or	r8, r12
    5004:	9d 28       	or	r9, r13
    5006:	ae 28       	or	r10, r14
    5008:	bf 28       	or	r11, r15
    500a:	68 96       	adiw	r28, 0x18	; 24
    500c:	88 82       	st	Y, r8
    500e:	99 82       	std	Y+1, r9	; 0x01
    5010:	aa 82       	std	Y+2, r10	; 0x02
    5012:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[147] = ROL(key->rk[141] + delta[0][27], 11);
    5014:	82 eb       	ldi	r24, 0xB2	; 178
    5016:	88 1a       	sub	r8, r24
    5018:	80 e8       	ldi	r24, 0x80	; 128
    501a:	98 0a       	sbc	r9, r24
    501c:	80 ee       	ldi	r24, 0xE0	; 224
    501e:	a8 0a       	sbc	r10, r24
    5020:	81 e2       	ldi	r24, 0x21	; 33
    5022:	b8 0a       	sbc	r11, r24
    5024:	75 01       	movw	r14, r10
    5026:	64 01       	movw	r12, r8
    5028:	65 e1       	ldi	r22, 0x15	; 21
    502a:	f6 94       	lsr	r15
    502c:	e7 94       	ror	r14
    502e:	d7 94       	ror	r13
    5030:	c7 94       	ror	r12
    5032:	6a 95       	dec	r22
    5034:	d1 f7       	brne	.-12     	; 0x502a <__stack+0x102b>
    5036:	7b e0       	ldi	r23, 0x0B	; 11
    5038:	88 0c       	add	r8, r8
    503a:	99 1c       	adc	r9, r9
    503c:	aa 1c       	adc	r10, r10
    503e:	bb 1c       	adc	r11, r11
    5040:	7a 95       	dec	r23
    5042:	d1 f7       	brne	.-12     	; 0x5038 <__stack+0x1039>
    5044:	8c 28       	or	r8, r12
    5046:	9d 28       	or	r9, r13
    5048:	ae 28       	or	r10, r14
    504a:	bf 28       	or	r11, r15
    504c:	68 96       	adiw	r28, 0x18	; 24
    504e:	88 82       	st	Y, r8
    5050:	99 82       	std	Y+1, r9	; 0x01
    5052:	aa 82       	std	Y+2, r10	; 0x02
    5054:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[153] = ROL(key->rk[147] + delta[1][28], 11);
    5056:	80 e5       	ldi	r24, 0x50	; 80
    5058:	88 1a       	sub	r8, r24
    505a:	89 ed       	ldi	r24, 0xD9	; 217
    505c:	98 0a       	sbc	r9, r24
    505e:	89 eb       	ldi	r24, 0xB9	; 185
    5060:	a8 0a       	sbc	r10, r24
    5062:	8b ed       	ldi	r24, 0xDB	; 219
    5064:	b8 0a       	sbc	r11, r24
    5066:	75 01       	movw	r14, r10
    5068:	64 01       	movw	r12, r8
    506a:	15 e1       	ldi	r17, 0x15	; 21
    506c:	f6 94       	lsr	r15
    506e:	e7 94       	ror	r14
    5070:	d7 94       	ror	r13
    5072:	c7 94       	ror	r12
    5074:	1a 95       	dec	r17
    5076:	d1 f7       	brne	.-12     	; 0x506c <__stack+0x106d>
    5078:	0b e0       	ldi	r16, 0x0B	; 11
    507a:	88 0c       	add	r8, r8
    507c:	99 1c       	adc	r9, r9
    507e:	aa 1c       	adc	r10, r10
    5080:	bb 1c       	adc	r11, r11
    5082:	0a 95       	dec	r16
    5084:	d1 f7       	brne	.-12     	; 0x507a <__stack+0x107b>
    5086:	8c 28       	or	r8, r12
    5088:	9d 28       	or	r9, r13
    508a:	ae 28       	or	r10, r14
    508c:	bf 28       	or	r11, r15
    508e:	68 96       	adiw	r28, 0x18	; 24
    5090:	88 82       	st	Y, r8
    5092:	99 82       	std	Y+1, r9	; 0x01
    5094:	aa 82       	std	Y+2, r10	; 0x02
    5096:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[159] = ROL(key->rk[153] + delta[2][29], 11);
    5098:	8f e6       	ldi	r24, 0x6F	; 111
    509a:	88 1a       	sub	r8, r24
    509c:	80 eb       	ldi	r24, 0xB0	; 176
    509e:	98 0a       	sbc	r9, r24
    50a0:	83 ec       	ldi	r24, 0xC3	; 195
    50a2:	a8 0a       	sbc	r10, r24
    50a4:	80 eb       	ldi	r24, 0xB0	; 176
    50a6:	b8 0a       	sbc	r11, r24
    50a8:	75 01       	movw	r14, r10
    50aa:	64 01       	movw	r12, r8
    50ac:	85 e1       	ldi	r24, 0x15	; 21
    50ae:	f6 94       	lsr	r15
    50b0:	e7 94       	ror	r14
    50b2:	d7 94       	ror	r13
    50b4:	c7 94       	ror	r12
    50b6:	8a 95       	dec	r24
    50b8:	d1 f7       	brne	.-12     	; 0x50ae <__stack+0x10af>
    50ba:	9b e0       	ldi	r25, 0x0B	; 11
    50bc:	88 0c       	add	r8, r8
    50be:	99 1c       	adc	r9, r9
    50c0:	aa 1c       	adc	r10, r10
    50c2:	bb 1c       	adc	r11, r11
    50c4:	9a 95       	dec	r25
    50c6:	d1 f7       	brne	.-12     	; 0x50bc <__stack+0x10bd>
    50c8:	8c 28       	or	r8, r12
    50ca:	9d 28       	or	r9, r13
    50cc:	ae 28       	or	r10, r14
    50ce:	bf 28       	or	r11, r15
    50d0:	68 96       	adiw	r28, 0x18	; 24
    50d2:	88 82       	st	Y, r8
    50d4:	99 82       	std	Y+1, r9	; 0x01
    50d6:	aa 82       	std	Y+2, r10	; 0x02
    50d8:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[165] = ROL(key->rk[159] + delta[3][30], 11);
    50da:	85 ec       	ldi	r24, 0xC5	; 197
    50dc:	88 1a       	sub	r8, r24
    50de:	83 e3       	ldi	r24, 0x33	; 51
    50e0:	98 0a       	sbc	r9, r24
    50e2:	88 ec       	ldi	r24, 0xC8	; 200
    50e4:	a8 0a       	sbc	r10, r24
    50e6:	81 ee       	ldi	r24, 0xE1	; 225
    50e8:	b8 0a       	sbc	r11, r24
    50ea:	75 01       	movw	r14, r10
    50ec:	64 01       	movw	r12, r8
    50ee:	65 e1       	ldi	r22, 0x15	; 21
    50f0:	f6 94       	lsr	r15
    50f2:	e7 94       	ror	r14
    50f4:	d7 94       	ror	r13
    50f6:	c7 94       	ror	r12
    50f8:	6a 95       	dec	r22
    50fa:	d1 f7       	brne	.-12     	; 0x50f0 <__stack+0x10f1>
    50fc:	7b e0       	ldi	r23, 0x0B	; 11
    50fe:	88 0c       	add	r8, r8
    5100:	99 1c       	adc	r9, r9
    5102:	aa 1c       	adc	r10, r10
    5104:	bb 1c       	adc	r11, r11
    5106:	7a 95       	dec	r23
    5108:	d1 f7       	brne	.-12     	; 0x50fe <__stack+0x10ff>
    510a:	c8 28       	or	r12, r8
    510c:	d9 28       	or	r13, r9
    510e:	ea 28       	or	r14, r10
    5110:	fb 28       	or	r15, r11
    5112:	68 96       	adiw	r28, 0x18	; 24
    5114:	c8 82       	st	Y, r12
    5116:	d9 82       	std	Y+1, r13	; 0x01
    5118:	ea 82       	std	Y+2, r14	; 0x02
    511a:	fb 82       	std	Y+3, r15	; 0x03

		key->rk[  4] = ROL(loadU32(_mk[4]) + delta[0][ 4], 13);
    511c:	50 96       	adiw	r26, 0x10	; 16
    511e:	8d 90       	ld	r8, X+
    5120:	9d 90       	ld	r9, X+
    5122:	ad 90       	ld	r10, X+
    5124:	bc 90       	ld	r11, X
    5126:	53 97       	sbiw	r26, 0x13	; 19
    5128:	84 e4       	ldi	r24, 0x44	; 68
    512a:	88 1a       	sub	r8, r24
    512c:	82 e6       	ldi	r24, 0x62	; 98
    512e:	98 0a       	sbc	r9, r24
    5130:	81 e0       	ldi	r24, 0x01	; 1
    5132:	a8 0a       	sbc	r10, r24
    5134:	81 ec       	ldi	r24, 0xC1	; 193
    5136:	b8 0a       	sbc	r11, r24
    5138:	75 01       	movw	r14, r10
    513a:	64 01       	movw	r12, r8
    513c:	13 e1       	ldi	r17, 0x13	; 19
    513e:	f6 94       	lsr	r15
    5140:	e7 94       	ror	r14
    5142:	d7 94       	ror	r13
    5144:	c7 94       	ror	r12
    5146:	1a 95       	dec	r17
    5148:	d1 f7       	brne	.-12     	; 0x513e <__stack+0x113f>
    514a:	0d e0       	ldi	r16, 0x0D	; 13
    514c:	88 0c       	add	r8, r8
    514e:	99 1c       	adc	r9, r9
    5150:	aa 1c       	adc	r10, r10
    5152:	bb 1c       	adc	r11, r11
    5154:	0a 95       	dec	r16
    5156:	d1 f7       	brne	.-12     	; 0x514c <__stack+0x114d>
    5158:	8c 28       	or	r8, r12
    515a:	9d 28       	or	r9, r13
    515c:	ae 28       	or	r10, r14
    515e:	bf 28       	or	r11, r15
    5160:	80 8a       	std	Z+16, r8	; 0x10
    5162:	91 8a       	std	Z+17, r9	; 0x11
    5164:	a2 8a       	std	Z+18, r10	; 0x12
    5166:	b3 8a       	std	Z+19, r11	; 0x13
		key->rk[ 10] = ROL(key->rk[  4] + delta[1][ 5], 13);
    5168:	88 eb       	ldi	r24, 0xB8	; 184
    516a:	88 1a       	sub	r8, r24
    516c:	8f e9       	ldi	r24, 0x9F	; 159
    516e:	98 0a       	sbc	r9, r24
    5170:	82 eb       	ldi	r24, 0xB2	; 178
    5172:	a8 0a       	sbc	r10, r24
    5174:	83 e7       	ldi	r24, 0x73	; 115
    5176:	b8 0a       	sbc	r11, r24
    5178:	75 01       	movw	r14, r10
    517a:	64 01       	movw	r12, r8
    517c:	83 e1       	ldi	r24, 0x13	; 19
    517e:	f6 94       	lsr	r15
    5180:	e7 94       	ror	r14
    5182:	d7 94       	ror	r13
    5184:	c7 94       	ror	r12
    5186:	8a 95       	dec	r24
    5188:	d1 f7       	brne	.-12     	; 0x517e <__stack+0x117f>
    518a:	9d e0       	ldi	r25, 0x0D	; 13
    518c:	88 0c       	add	r8, r8
    518e:	99 1c       	adc	r9, r9
    5190:	aa 1c       	adc	r10, r10
    5192:	bb 1c       	adc	r11, r11
    5194:	9a 95       	dec	r25
    5196:	d1 f7       	brne	.-12     	; 0x518c <__stack+0x118d>
    5198:	8c 28       	or	r8, r12
    519a:	9d 28       	or	r9, r13
    519c:	ae 28       	or	r10, r14
    519e:	bf 28       	or	r11, r15
    51a0:	80 a6       	std	Z+40, r8	; 0x28
    51a2:	91 a6       	std	Z+41, r9	; 0x29
    51a4:	a2 a6       	std	Z+42, r10	; 0x2a
    51a6:	b3 a6       	std	Z+43, r11	; 0x2b
		key->rk[ 16] = ROL(key->rk[ 10] + delta[2][ 6], 13);
    51a8:	82 e6       	ldi	r24, 0x62	; 98
    51aa:	88 1a       	sub	r8, r24
    51ac:	8d ed       	ldi	r24, 0xDD	; 221
    51ae:	98 0a       	sbc	r9, r24
    51b0:	80 e6       	ldi	r24, 0x60	; 96
    51b2:	a8 0a       	sbc	r10, r24
    51b4:	87 e8       	ldi	r24, 0x87	; 135
    51b6:	b8 0a       	sbc	r11, r24
    51b8:	75 01       	movw	r14, r10
    51ba:	64 01       	movw	r12, r8
    51bc:	63 e1       	ldi	r22, 0x13	; 19
    51be:	f6 94       	lsr	r15
    51c0:	e7 94       	ror	r14
    51c2:	d7 94       	ror	r13
    51c4:	c7 94       	ror	r12
    51c6:	6a 95       	dec	r22
    51c8:	d1 f7       	brne	.-12     	; 0x51be <__stack+0x11bf>
    51ca:	7d e0       	ldi	r23, 0x0D	; 13
    51cc:	88 0c       	add	r8, r8
    51ce:	99 1c       	adc	r9, r9
    51d0:	aa 1c       	adc	r10, r10
    51d2:	bb 1c       	adc	r11, r11
    51d4:	7a 95       	dec	r23
    51d6:	d1 f7       	brne	.-12     	; 0x51cc <__stack+0x11cd>
    51d8:	8c 28       	or	r8, r12
    51da:	9d 28       	or	r9, r13
    51dc:	ae 28       	or	r10, r14
    51de:	bf 28       	or	r11, r15
    51e0:	c4 55       	subi	r28, 0x54	; 84
    51e2:	d2 40       	sbci	r29, 0x02	; 2
    51e4:	88 82       	st	Y, r8
    51e6:	99 82       	std	Y+1, r9	; 0x01
    51e8:	aa 82       	std	Y+2, r10	; 0x02
    51ea:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 22] = ROL(key->rk[ 16] + delta[3][ 7], 13);
    51ec:	84 ec       	ldi	r24, 0xC4	; 196
    51ee:	88 1a       	sub	r8, r24
    51f0:	89 e8       	ldi	r24, 0x89	; 137
    51f2:	98 0a       	sbc	r9, r24
    51f4:	87 e6       	ldi	r24, 0x67	; 103
    51f6:	a8 0a       	sbc	r10, r24
    51f8:	80 e9       	ldi	r24, 0x90	; 144
    51fa:	b8 0a       	sbc	r11, r24
    51fc:	75 01       	movw	r14, r10
    51fe:	64 01       	movw	r12, r8
    5200:	13 e1       	ldi	r17, 0x13	; 19
    5202:	f6 94       	lsr	r15
    5204:	e7 94       	ror	r14
    5206:	d7 94       	ror	r13
    5208:	c7 94       	ror	r12
    520a:	1a 95       	dec	r17
    520c:	d1 f7       	brne	.-12     	; 0x5202 <__stack+0x1203>
    520e:	0d e0       	ldi	r16, 0x0D	; 13
    5210:	88 0c       	add	r8, r8
    5212:	99 1c       	adc	r9, r9
    5214:	aa 1c       	adc	r10, r10
    5216:	bb 1c       	adc	r11, r11
    5218:	0a 95       	dec	r16
    521a:	d1 f7       	brne	.-12     	; 0x5210 <__stack+0x1211>
    521c:	8c 28       	or	r8, r12
    521e:	9d 28       	or	r9, r13
    5220:	ae 28       	or	r10, r14
    5222:	bf 28       	or	r11, r15
    5224:	68 96       	adiw	r28, 0x18	; 24
    5226:	88 82       	st	Y, r8
    5228:	99 82       	std	Y+1, r9	; 0x01
    522a:	aa 82       	std	Y+2, r10	; 0x02
    522c:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 28] = ROL(key->rk[ 22] + delta[4][ 8], 13);
    522e:	8f e8       	ldi	r24, 0x8F	; 143
    5230:	88 1a       	sub	r8, r24
    5232:	81 e6       	ldi	r24, 0x61	; 97
    5234:	98 0a       	sbc	r9, r24
    5236:	8b e5       	ldi	r24, 0x5B	; 91
    5238:	a8 0a       	sbc	r10, r24
    523a:	81 ea       	ldi	r24, 0xA1	; 161
    523c:	b8 0a       	sbc	r11, r24
    523e:	75 01       	movw	r14, r10
    5240:	64 01       	movw	r12, r8
    5242:	83 e1       	ldi	r24, 0x13	; 19
    5244:	f6 94       	lsr	r15
    5246:	e7 94       	ror	r14
    5248:	d7 94       	ror	r13
    524a:	c7 94       	ror	r12
    524c:	8a 95       	dec	r24
    524e:	d1 f7       	brne	.-12     	; 0x5244 <__stack+0x1245>
    5250:	9d e0       	ldi	r25, 0x0D	; 13
    5252:	88 0c       	add	r8, r8
    5254:	99 1c       	adc	r9, r9
    5256:	aa 1c       	adc	r10, r10
    5258:	bb 1c       	adc	r11, r11
    525a:	9a 95       	dec	r25
    525c:	d1 f7       	brne	.-12     	; 0x5252 <__stack+0x1253>
    525e:	8c 28       	or	r8, r12
    5260:	9d 28       	or	r9, r13
    5262:	ae 28       	or	r10, r14
    5264:	bf 28       	or	r11, r15
    5266:	68 96       	adiw	r28, 0x18	; 24
    5268:	88 82       	st	Y, r8
    526a:	99 82       	std	Y+1, r9	; 0x01
    526c:	aa 82       	std	Y+2, r10	; 0x02
    526e:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 34] = ROL(key->rk[ 28] + delta[5][ 9], 13);
    5270:	81 e7       	ldi	r24, 0x71	; 113
    5272:	88 1a       	sub	r8, r24
    5274:	8a ee       	ldi	r24, 0xEA	; 234
    5276:	98 0a       	sbc	r9, r24
    5278:	8b e4       	ldi	r24, 0x4B	; 75
    527a:	a8 0a       	sbc	r10, r24
    527c:	84 ef       	ldi	r24, 0xF4	; 244
    527e:	b8 0a       	sbc	r11, r24
    5280:	75 01       	movw	r14, r10
    5282:	64 01       	movw	r12, r8
    5284:	63 e1       	ldi	r22, 0x13	; 19
    5286:	f6 94       	lsr	r15
    5288:	e7 94       	ror	r14
    528a:	d7 94       	ror	r13
    528c:	c7 94       	ror	r12
    528e:	6a 95       	dec	r22
    5290:	d1 f7       	brne	.-12     	; 0x5286 <__stack+0x1287>
    5292:	7d e0       	ldi	r23, 0x0D	; 13
    5294:	88 0c       	add	r8, r8
    5296:	99 1c       	adc	r9, r9
    5298:	aa 1c       	adc	r10, r10
    529a:	bb 1c       	adc	r11, r11
    529c:	7a 95       	dec	r23
    529e:	d1 f7       	brne	.-12     	; 0x5294 <__stack+0x1295>
    52a0:	8c 28       	or	r8, r12
    52a2:	9d 28       	or	r9, r13
    52a4:	ae 28       	or	r10, r14
    52a6:	bf 28       	or	r11, r15
    52a8:	68 96       	adiw	r28, 0x18	; 24
    52aa:	88 82       	st	Y, r8
    52ac:	99 82       	std	Y+1, r9	; 0x01
    52ae:	aa 82       	std	Y+2, r10	; 0x02
    52b0:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 40] = ROL(key->rk[ 34] + delta[0][10], 13);
    52b2:	81 ef       	ldi	r24, 0xF1	; 241
    52b4:	88 1a       	sub	r8, r24
    52b6:	80 e9       	ldi	r24, 0x90	; 144
    52b8:	98 0a       	sbc	r9, r24
    52ba:	88 e5       	ldi	r24, 0x58	; 88
    52bc:	a8 0a       	sbc	r10, r24
    52be:	80 e4       	ldi	r24, 0x40	; 64
    52c0:	b8 0a       	sbc	r11, r24
    52c2:	75 01       	movw	r14, r10
    52c4:	64 01       	movw	r12, r8
    52c6:	13 e1       	ldi	r17, 0x13	; 19
    52c8:	f6 94       	lsr	r15
    52ca:	e7 94       	ror	r14
    52cc:	d7 94       	ror	r13
    52ce:	c7 94       	ror	r12
    52d0:	1a 95       	dec	r17
    52d2:	d1 f7       	brne	.-12     	; 0x52c8 <__stack+0x12c9>
    52d4:	0d e0       	ldi	r16, 0x0D	; 13
    52d6:	88 0c       	add	r8, r8
    52d8:	99 1c       	adc	r9, r9
    52da:	aa 1c       	adc	r10, r10
    52dc:	bb 1c       	adc	r11, r11
    52de:	0a 95       	dec	r16
    52e0:	d1 f7       	brne	.-12     	; 0x52d6 <__stack+0x12d7>
    52e2:	8c 28       	or	r8, r12
    52e4:	9d 28       	or	r9, r13
    52e6:	ae 28       	or	r10, r14
    52e8:	bf 28       	or	r11, r15
    52ea:	68 96       	adiw	r28, 0x18	; 24
    52ec:	88 82       	st	Y, r8
    52ee:	99 82       	std	Y+1, r9	; 0x01
    52f0:	aa 82       	std	Y+2, r10	; 0x02
    52f2:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 46] = ROL(key->rk[ 40] + delta[1][11], 13);
    52f4:	8d ed       	ldi	r24, 0xDD	; 221
    52f6:	88 1a       	sub	r8, r24
    52f8:	8d ee       	ldi	r24, 0xED	; 237
    52fa:	98 0a       	sbc	r9, r24
    52fc:	87 ea       	ldi	r24, 0xA7	; 167
    52fe:	a8 0a       	sbc	r10, r24
    5300:	8c ee       	ldi	r24, 0xEC	; 236
    5302:	b8 0a       	sbc	r11, r24
    5304:	75 01       	movw	r14, r10
    5306:	64 01       	movw	r12, r8
    5308:	83 e1       	ldi	r24, 0x13	; 19
    530a:	f6 94       	lsr	r15
    530c:	e7 94       	ror	r14
    530e:	d7 94       	ror	r13
    5310:	c7 94       	ror	r12
    5312:	8a 95       	dec	r24
    5314:	d1 f7       	brne	.-12     	; 0x530a <__stack+0x130b>
    5316:	9d e0       	ldi	r25, 0x0D	; 13
    5318:	88 0c       	add	r8, r8
    531a:	99 1c       	adc	r9, r9
    531c:	aa 1c       	adc	r10, r10
    531e:	bb 1c       	adc	r11, r11
    5320:	9a 95       	dec	r25
    5322:	d1 f7       	brne	.-12     	; 0x5318 <__stack+0x1319>
    5324:	8c 28       	or	r8, r12
    5326:	9d 28       	or	r9, r13
    5328:	ae 28       	or	r10, r14
    532a:	bf 28       	or	r11, r15
    532c:	68 96       	adiw	r28, 0x18	; 24
    532e:	88 82       	st	Y, r8
    5330:	99 82       	std	Y+1, r9	; 0x01
    5332:	aa 82       	std	Y+2, r10	; 0x02
    5334:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 52] = ROL(key->rk[ 46] + delta[2][12], 13);
    5336:	82 e6       	ldi	r24, 0x62	; 98
    5338:	88 1a       	sub	r8, r24
    533a:	88 e5       	ldi	r24, 0x58	; 88
    533c:	98 0a       	sbc	r9, r24
    533e:	87 e3       	ldi	r24, 0x37	; 55
    5340:	a8 0a       	sbc	r10, r24
    5342:	88 ed       	ldi	r24, 0xD8	; 216
    5344:	b8 0a       	sbc	r11, r24
    5346:	75 01       	movw	r14, r10
    5348:	64 01       	movw	r12, r8
    534a:	63 e1       	ldi	r22, 0x13	; 19
    534c:	f6 94       	lsr	r15
    534e:	e7 94       	ror	r14
    5350:	d7 94       	ror	r13
    5352:	c7 94       	ror	r12
    5354:	6a 95       	dec	r22
    5356:	d1 f7       	brne	.-12     	; 0x534c <__stack+0x134d>
    5358:	7d e0       	ldi	r23, 0x0D	; 13
    535a:	88 0c       	add	r8, r8
    535c:	99 1c       	adc	r9, r9
    535e:	aa 1c       	adc	r10, r10
    5360:	bb 1c       	adc	r11, r11
    5362:	7a 95       	dec	r23
    5364:	d1 f7       	brne	.-12     	; 0x535a <__stack+0x135b>
    5366:	8c 28       	or	r8, r12
    5368:	9d 28       	or	r9, r13
    536a:	ae 28       	or	r10, r14
    536c:	bf 28       	or	r11, r15
    536e:	68 96       	adiw	r28, 0x18	; 24
    5370:	88 82       	st	Y, r8
    5372:	99 82       	std	Y+1, r9	; 0x01
    5374:	aa 82       	std	Y+2, r10	; 0x02
    5376:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 58] = ROL(key->rk[ 52] + delta[3][13], 13);
    5378:	85 ee       	ldi	r24, 0xE5	; 229
    537a:	88 1a       	sub	r8, r24
    537c:	80 e7       	ldi	r24, 0x70	; 112
    537e:	98 0a       	sbc	r9, r24
    5380:	82 ee       	ldi	r24, 0xE2	; 226
    5382:	a8 0a       	sbc	r10, r24
    5384:	89 e1       	ldi	r24, 0x19	; 25
    5386:	b8 0a       	sbc	r11, r24
    5388:	75 01       	movw	r14, r10
    538a:	64 01       	movw	r12, r8
    538c:	13 e1       	ldi	r17, 0x13	; 19
    538e:	f6 94       	lsr	r15
    5390:	e7 94       	ror	r14
    5392:	d7 94       	ror	r13
    5394:	c7 94       	ror	r12
    5396:	1a 95       	dec	r17
    5398:	d1 f7       	brne	.-12     	; 0x538e <__stack+0x138f>
    539a:	0d e0       	ldi	r16, 0x0D	; 13
    539c:	88 0c       	add	r8, r8
    539e:	99 1c       	adc	r9, r9
    53a0:	aa 1c       	adc	r10, r10
    53a2:	bb 1c       	adc	r11, r11
    53a4:	0a 95       	dec	r16
    53a6:	d1 f7       	brne	.-12     	; 0x539c <__stack+0x139d>
    53a8:	8c 28       	or	r8, r12
    53aa:	9d 28       	or	r9, r13
    53ac:	ae 28       	or	r10, r14
    53ae:	bf 28       	or	r11, r15
    53b0:	68 96       	adiw	r28, 0x18	; 24
    53b2:	88 82       	st	Y, r8
    53b4:	99 82       	std	Y+1, r9	; 0x01
    53b6:	aa 82       	std	Y+2, r10	; 0x02
    53b8:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 64] = ROL(key->rk[ 58] + delta[4][14], 13);
    53ba:	89 ea       	ldi	r24, 0xA9	; 169
    53bc:	88 1a       	sub	r8, r24
    53be:	83 e6       	ldi	r24, 0x63	; 99
    53c0:	98 0a       	sbc	r9, r24
    53c2:	88 ed       	ldi	r24, 0xD8	; 216
    53c4:	a8 0a       	sbc	r10, r24
    53c6:	86 e5       	ldi	r24, 0x56	; 86
    53c8:	b8 0a       	sbc	r11, r24
    53ca:	75 01       	movw	r14, r10
    53cc:	64 01       	movw	r12, r8
    53ce:	83 e1       	ldi	r24, 0x13	; 19
    53d0:	f6 94       	lsr	r15
    53d2:	e7 94       	ror	r14
    53d4:	d7 94       	ror	r13
    53d6:	c7 94       	ror	r12
    53d8:	8a 95       	dec	r24
    53da:	d1 f7       	brne	.-12     	; 0x53d0 <__stack+0x13d1>
    53dc:	9d e0       	ldi	r25, 0x0D	; 13
    53de:	88 0c       	add	r8, r8
    53e0:	99 1c       	adc	r9, r9
    53e2:	aa 1c       	adc	r10, r10
    53e4:	bb 1c       	adc	r11, r11
    53e6:	9a 95       	dec	r25
    53e8:	d1 f7       	brne	.-12     	; 0x53de <__stack+0x13df>
    53ea:	8c 28       	or	r8, r12
    53ec:	9d 28       	or	r9, r13
    53ee:	ae 28       	or	r10, r14
    53f0:	bf 28       	or	r11, r15
    53f2:	68 96       	adiw	r28, 0x18	; 24
    53f4:	88 82       	st	Y, r8
    53f6:	99 82       	std	Y+1, r9	; 0x01
    53f8:	aa 82       	std	Y+2, r10	; 0x02
    53fa:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 70] = ROL(key->rk[ 64] + delta[5][15], 13);
    53fc:	8e e3       	ldi	r24, 0x3E	; 62
    53fe:	88 1a       	sub	r8, r24
    5400:	8c e9       	ldi	r24, 0x9C	; 156
    5402:	98 0a       	sbc	r9, r24
    5404:	8a ef       	ldi	r24, 0xFA	; 250
    5406:	a8 0a       	sbc	r10, r24
    5408:	82 e1       	ldi	r24, 0x12	; 18
    540a:	b8 0a       	sbc	r11, r24
    540c:	75 01       	movw	r14, r10
    540e:	64 01       	movw	r12, r8
    5410:	63 e1       	ldi	r22, 0x13	; 19
    5412:	f6 94       	lsr	r15
    5414:	e7 94       	ror	r14
    5416:	d7 94       	ror	r13
    5418:	c7 94       	ror	r12
    541a:	6a 95       	dec	r22
    541c:	d1 f7       	brne	.-12     	; 0x5412 <__stack+0x1413>
    541e:	7d e0       	ldi	r23, 0x0D	; 13
    5420:	88 0c       	add	r8, r8
    5422:	99 1c       	adc	r9, r9
    5424:	aa 1c       	adc	r10, r10
    5426:	bb 1c       	adc	r11, r11
    5428:	7a 95       	dec	r23
    542a:	d1 f7       	brne	.-12     	; 0x5420 <__stack+0x1421>
    542c:	8c 28       	or	r8, r12
    542e:	9d 28       	or	r9, r13
    5430:	ae 28       	or	r10, r14
    5432:	bf 28       	or	r11, r15
    5434:	68 96       	adiw	r28, 0x18	; 24
    5436:	88 82       	st	Y, r8
    5438:	99 82       	std	Y+1, r9	; 0x01
    543a:	aa 82       	std	Y+2, r10	; 0x02
    543c:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 76] = ROL(key->rk[ 70] + delta[0][16], 13);
    543e:	81 e1       	ldi	r24, 0x11	; 17
    5440:	88 1a       	sub	r8, r24
    5442:	8c e3       	ldi	r24, 0x3C	; 60
    5444:	98 0a       	sbc	r9, r24
    5446:	84 e2       	ldi	r24, 0x24	; 36
    5448:	a8 0a       	sbc	r10, r24
    544a:	86 e1       	ldi	r24, 0x16	; 22
    544c:	b8 0a       	sbc	r11, r24
    544e:	75 01       	movw	r14, r10
    5450:	64 01       	movw	r12, r8
    5452:	13 e1       	ldi	r17, 0x13	; 19
    5454:	f6 94       	lsr	r15
    5456:	e7 94       	ror	r14
    5458:	d7 94       	ror	r13
    545a:	c7 94       	ror	r12
    545c:	1a 95       	dec	r17
    545e:	d1 f7       	brne	.-12     	; 0x5454 <__stack+0x1455>
    5460:	0d e0       	ldi	r16, 0x0D	; 13
    5462:	88 0c       	add	r8, r8
    5464:	99 1c       	adc	r9, r9
    5466:	aa 1c       	adc	r10, r10
    5468:	bb 1c       	adc	r11, r11
    546a:	0a 95       	dec	r16
    546c:	d1 f7       	brne	.-12     	; 0x5462 <__stack+0x1463>
    546e:	8c 28       	or	r8, r12
    5470:	9d 28       	or	r9, r13
    5472:	ae 28       	or	r10, r14
    5474:	bf 28       	or	r11, r15
    5476:	68 96       	adiw	r28, 0x18	; 24
    5478:	88 82       	st	Y, r8
    547a:	99 82       	std	Y+1, r9	; 0x01
    547c:	aa 82       	std	Y+2, r10	; 0x02
    547e:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 82] = ROL(key->rk[ 76] + delta[1][17], 13);
    5480:	8c e3       	ldi	r24, 0x3C	; 60
    5482:	88 1a       	sub	r8, r24
    5484:	87 e7       	ldi	r24, 0x77	; 119
    5486:	98 0a       	sbc	r9, r24
    5488:	8b ef       	ldi	r24, 0xFB	; 251
    548a:	a8 0a       	sbc	r10, r24
    548c:	89 e2       	ldi	r24, 0x29	; 41
    548e:	b8 0a       	sbc	r11, r24
    5490:	75 01       	movw	r14, r10
    5492:	64 01       	movw	r12, r8
    5494:	83 e1       	ldi	r24, 0x13	; 19
    5496:	f6 94       	lsr	r15
    5498:	e7 94       	ror	r14
    549a:	d7 94       	ror	r13
    549c:	c7 94       	ror	r12
    549e:	8a 95       	dec	r24
    54a0:	d1 f7       	brne	.-12     	; 0x5496 <__stack+0x1497>
    54a2:	9d e0       	ldi	r25, 0x0D	; 13
    54a4:	88 0c       	add	r8, r8
    54a6:	99 1c       	adc	r9, r9
    54a8:	aa 1c       	adc	r10, r10
    54aa:	bb 1c       	adc	r11, r11
    54ac:	9a 95       	dec	r25
    54ae:	d1 f7       	brne	.-12     	; 0x54a4 <__stack+0x14a5>
    54b0:	8c 28       	or	r8, r12
    54b2:	9d 28       	or	r9, r13
    54b4:	ae 28       	or	r10, r14
    54b6:	bf 28       	or	r11, r15
    54b8:	68 96       	adiw	r28, 0x18	; 24
    54ba:	88 82       	st	Y, r8
    54bc:	99 82       	std	Y+1, r9	; 0x01
    54be:	aa 82       	std	Y+2, r10	; 0x02
    54c0:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 88] = ROL(key->rk[ 82] + delta[2][18], 13);
    54c2:	87 e7       	ldi	r24, 0x77	; 119
    54c4:	88 1a       	sub	r8, r24
    54c6:	88 e1       	ldi	r24, 0x18	; 24
    54c8:	98 0a       	sbc	r9, r24
    54ca:	86 ed       	ldi	r24, 0xD6	; 214
    54cc:	a8 0a       	sbc	r10, r24
    54ce:	8d e0       	ldi	r24, 0x0D	; 13
    54d0:	b8 0a       	sbc	r11, r24
    54d2:	75 01       	movw	r14, r10
    54d4:	64 01       	movw	r12, r8
    54d6:	63 e1       	ldi	r22, 0x13	; 19
    54d8:	f6 94       	lsr	r15
    54da:	e7 94       	ror	r14
    54dc:	d7 94       	ror	r13
    54de:	c7 94       	ror	r12
    54e0:	6a 95       	dec	r22
    54e2:	d1 f7       	brne	.-12     	; 0x54d8 <__stack+0x14d9>
    54e4:	7d e0       	ldi	r23, 0x0D	; 13
    54e6:	88 0c       	add	r8, r8
    54e8:	99 1c       	adc	r9, r9
    54ea:	aa 1c       	adc	r10, r10
    54ec:	bb 1c       	adc	r11, r11
    54ee:	7a 95       	dec	r23
    54f0:	d1 f7       	brne	.-12     	; 0x54e6 <__stack+0x14e7>
    54f2:	8c 28       	or	r8, r12
    54f4:	9d 28       	or	r9, r13
    54f6:	ae 28       	or	r10, r14
    54f8:	bf 28       	or	r11, r15
    54fa:	68 96       	adiw	r28, 0x18	; 24
    54fc:	88 82       	st	Y, r8
    54fe:	99 82       	std	Y+1, r9	; 0x01
    5500:	aa 82       	std	Y+2, r10	; 0x02
    5502:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 94] = ROL(key->rk[ 88] + delta[3][19], 13);
    5504:	87 e0       	ldi	r24, 0x07	; 7
    5506:	88 1a       	sub	r8, r24
    5508:	89 e3       	ldi	r24, 0x39	; 57
    550a:	98 0a       	sbc	r9, r24
    550c:	8c e9       	ldi	r24, 0x9C	; 156
    550e:	a8 0a       	sbc	r10, r24
    5510:	88 e7       	ldi	r24, 0x78	; 120
    5512:	b8 0a       	sbc	r11, r24
    5514:	75 01       	movw	r14, r10
    5516:	64 01       	movw	r12, r8
    5518:	13 e1       	ldi	r17, 0x13	; 19
    551a:	f6 94       	lsr	r15
    551c:	e7 94       	ror	r14
    551e:	d7 94       	ror	r13
    5520:	c7 94       	ror	r12
    5522:	1a 95       	dec	r17
    5524:	d1 f7       	brne	.-12     	; 0x551a <__stack+0x151b>
    5526:	0d e0       	ldi	r16, 0x0D	; 13
    5528:	88 0c       	add	r8, r8
    552a:	99 1c       	adc	r9, r9
    552c:	aa 1c       	adc	r10, r10
    552e:	bb 1c       	adc	r11, r11
    5530:	0a 95       	dec	r16
    5532:	d1 f7       	brne	.-12     	; 0x5528 <__stack+0x1529>
    5534:	8c 28       	or	r8, r12
    5536:	9d 28       	or	r9, r13
    5538:	ae 28       	or	r10, r14
    553a:	bf 28       	or	r11, r15
    553c:	68 96       	adiw	r28, 0x18	; 24
    553e:	88 82       	st	Y, r8
    5540:	99 82       	std	Y+1, r9	; 0x01
    5542:	aa 82       	std	Y+2, r10	; 0x02
    5544:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[100] = ROL(key->rk[ 94] + delta[4][20], 13);
    5546:	86 e1       	ldi	r24, 0x16	; 22
    5548:	88 1a       	sub	r8, r24
    554a:	8a ee       	ldi	r24, 0xEA	; 234
    554c:	98 0a       	sbc	r9, r24
    554e:	88 e1       	ldi	r24, 0x18	; 24
    5550:	a8 0a       	sbc	r10, r24
    5552:	86 eb       	ldi	r24, 0xB6	; 182
    5554:	b8 0a       	sbc	r11, r24
    5556:	75 01       	movw	r14, r10
    5558:	64 01       	movw	r12, r8
    555a:	83 e1       	ldi	r24, 0x13	; 19
    555c:	f6 94       	lsr	r15
    555e:	e7 94       	ror	r14
    5560:	d7 94       	ror	r13
    5562:	c7 94       	ror	r12
    5564:	8a 95       	dec	r24
    5566:	d1 f7       	brne	.-12     	; 0x555c <__stack+0x155d>
    5568:	9d e0       	ldi	r25, 0x0D	; 13
    556a:	88 0c       	add	r8, r8
    556c:	99 1c       	adc	r9, r9
    556e:	aa 1c       	adc	r10, r10
    5570:	bb 1c       	adc	r11, r11
    5572:	9a 95       	dec	r25
    5574:	d1 f7       	brne	.-12     	; 0x556a <__stack+0x156b>
    5576:	8c 28       	or	r8, r12
    5578:	9d 28       	or	r9, r13
    557a:	ae 28       	or	r10, r14
    557c:	bf 28       	or	r11, r15
    557e:	68 96       	adiw	r28, 0x18	; 24
    5580:	88 82       	st	Y, r8
    5582:	99 82       	std	Y+1, r9	; 0x01
    5584:	aa 82       	std	Y+2, r10	; 0x02
    5586:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[106] = ROL(key->rk[100] + delta[5][21], 13);
    5588:	85 e4       	ldi	r24, 0x45	; 69
    558a:	88 1a       	sub	r8, r24
    558c:	8f e0       	ldi	r24, 0x0F	; 15
    558e:	98 0a       	sbc	r9, r24
    5590:	87 ea       	ldi	r24, 0xA7	; 167
    5592:	a8 0a       	sbc	r10, r24
    5594:	8e eb       	ldi	r24, 0xBE	; 190
    5596:	b8 0a       	sbc	r11, r24
    5598:	75 01       	movw	r14, r10
    559a:	64 01       	movw	r12, r8
    559c:	63 e1       	ldi	r22, 0x13	; 19
    559e:	f6 94       	lsr	r15
    55a0:	e7 94       	ror	r14
    55a2:	d7 94       	ror	r13
    55a4:	c7 94       	ror	r12
    55a6:	6a 95       	dec	r22
    55a8:	d1 f7       	brne	.-12     	; 0x559e <__stack+0x159f>
    55aa:	7d e0       	ldi	r23, 0x0D	; 13
    55ac:	88 0c       	add	r8, r8
    55ae:	99 1c       	adc	r9, r9
    55b0:	aa 1c       	adc	r10, r10
    55b2:	bb 1c       	adc	r11, r11
    55b4:	7a 95       	dec	r23
    55b6:	d1 f7       	brne	.-12     	; 0x55ac <__stack+0x15ad>
    55b8:	8c 28       	or	r8, r12
    55ba:	9d 28       	or	r9, r13
    55bc:	ae 28       	or	r10, r14
    55be:	bf 28       	or	r11, r15
    55c0:	68 96       	adiw	r28, 0x18	; 24
    55c2:	88 82       	st	Y, r8
    55c4:	99 82       	std	Y+1, r9	; 0x01
    55c6:	aa 82       	std	Y+2, r10	; 0x02
    55c8:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[112] = ROL(key->rk[106] + delta[0][22], 13);
    55ca:	86 e0       	ldi	r24, 0x06	; 6
    55cc:	88 1a       	sub	r8, r24
    55ce:	84 e0       	ldi	r24, 0x04	; 4
    55d0:	98 0a       	sbc	r9, r24
    55d2:	8f e0       	ldi	r24, 0x0F	; 15
    55d4:	a8 0a       	sbc	r10, r24
    55d6:	89 e8       	ldi	r24, 0x89	; 137
    55d8:	b8 0a       	sbc	r11, r24
    55da:	75 01       	movw	r14, r10
    55dc:	64 01       	movw	r12, r8
    55de:	13 e1       	ldi	r17, 0x13	; 19
    55e0:	f6 94       	lsr	r15
    55e2:	e7 94       	ror	r14
    55e4:	d7 94       	ror	r13
    55e6:	c7 94       	ror	r12
    55e8:	1a 95       	dec	r17
    55ea:	d1 f7       	brne	.-12     	; 0x55e0 <__stack+0x15e1>
    55ec:	0d e0       	ldi	r16, 0x0D	; 13
    55ee:	88 0c       	add	r8, r8
    55f0:	99 1c       	adc	r9, r9
    55f2:	aa 1c       	adc	r10, r10
    55f4:	bb 1c       	adc	r11, r11
    55f6:	0a 95       	dec	r16
    55f8:	d1 f7       	brne	.-12     	; 0x55ee <__stack+0x15ef>
    55fa:	8c 28       	or	r8, r12
    55fc:	9d 28       	or	r9, r13
    55fe:	ae 28       	or	r10, r14
    5600:	bf 28       	or	r11, r15
    5602:	68 96       	adiw	r28, 0x18	; 24
    5604:	88 82       	st	Y, r8
    5606:	99 82       	std	Y+1, r9	; 0x01
    5608:	aa 82       	std	Y+2, r10	; 0x02
    560a:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[118] = ROL(key->rk[112] + delta[1][23], 13);
    560c:	8b ec       	ldi	r24, 0xCB	; 203
    560e:	88 1a       	sub	r8, r24
    5610:	8e ec       	ldi	r24, 0xCE	; 206
    5612:	98 0a       	sbc	r9, r24
    5614:	8d ed       	ldi	r24, 0xDD	; 221
    5616:	a8 0a       	sbc	r10, r24
    5618:	8e e7       	ldi	r24, 0x7E	; 126
    561a:	b8 0a       	sbc	r11, r24
    561c:	75 01       	movw	r14, r10
    561e:	64 01       	movw	r12, r8
    5620:	83 e1       	ldi	r24, 0x13	; 19
    5622:	f6 94       	lsr	r15
    5624:	e7 94       	ror	r14
    5626:	d7 94       	ror	r13
    5628:	c7 94       	ror	r12
    562a:	8a 95       	dec	r24
    562c:	d1 f7       	brne	.-12     	; 0x5622 <__stack+0x1623>
    562e:	9d e0       	ldi	r25, 0x0D	; 13
    5630:	88 0c       	add	r8, r8
    5632:	99 1c       	adc	r9, r9
    5634:	aa 1c       	adc	r10, r10
    5636:	bb 1c       	adc	r11, r11
    5638:	9a 95       	dec	r25
    563a:	d1 f7       	brne	.-12     	; 0x5630 <__stack+0x1631>
    563c:	8c 28       	or	r8, r12
    563e:	9d 28       	or	r9, r13
    5640:	ae 28       	or	r10, r14
    5642:	bf 28       	or	r11, r15
    5644:	68 96       	adiw	r28, 0x18	; 24
    5646:	88 82       	st	Y, r8
    5648:	99 82       	std	Y+1, r9	; 0x01
    564a:	aa 82       	std	Y+2, r10	; 0x02
    564c:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[124] = ROL(key->rk[118] + delta[2][24], 13);
    564e:	84 e8       	ldi	r24, 0x84	; 132
    5650:	88 1a       	sub	r8, r24
    5652:	8d e1       	ldi	r24, 0x1D	; 29
    5654:	98 0a       	sbc	r9, r24
    5656:	86 e8       	ldi	r24, 0x86	; 134
    5658:	a8 0a       	sbc	r10, r24
    565a:	85 e7       	ldi	r24, 0x75	; 117
    565c:	b8 0a       	sbc	r11, r24
    565e:	75 01       	movw	r14, r10
    5660:	64 01       	movw	r12, r8
    5662:	63 e1       	ldi	r22, 0x13	; 19
    5664:	f6 94       	lsr	r15
    5666:	e7 94       	ror	r14
    5668:	d7 94       	ror	r13
    566a:	c7 94       	ror	r12
    566c:	6a 95       	dec	r22
    566e:	d1 f7       	brne	.-12     	; 0x5664 <__stack+0x1665>
    5670:	7d e0       	ldi	r23, 0x0D	; 13
    5672:	88 0c       	add	r8, r8
    5674:	99 1c       	adc	r9, r9
    5676:	aa 1c       	adc	r10, r10
    5678:	bb 1c       	adc	r11, r11
    567a:	7a 95       	dec	r23
    567c:	d1 f7       	brne	.-12     	; 0x5672 <__stack+0x1673>
    567e:	8c 28       	or	r8, r12
    5680:	9d 28       	or	r9, r13
    5682:	ae 28       	or	r10, r14
    5684:	bf 28       	or	r11, r15
    5686:	68 96       	adiw	r28, 0x18	; 24
    5688:	88 82       	st	Y, r8
    568a:	99 82       	std	Y+1, r9	; 0x01
    568c:	aa 82       	std	Y+2, r10	; 0x02
    568e:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[130] = ROL(key->rk[124] + delta[3][25], 13);
    5690:	8f e9       	ldi	r24, 0x9F	; 159
    5692:	88 1a       	sub	r8, r24
    5694:	81 e4       	ldi	r24, 0x41	; 65
    5696:	98 0a       	sbc	r9, r24
    5698:	8e e0       	ldi	r24, 0x0E	; 14
    569a:	a8 0a       	sbc	r10, r24
    569c:	87 e2       	ldi	r24, 0x27	; 39
    569e:	b8 0a       	sbc	r11, r24
    56a0:	75 01       	movw	r14, r10
    56a2:	64 01       	movw	r12, r8
    56a4:	13 e1       	ldi	r17, 0x13	; 19
    56a6:	f6 94       	lsr	r15
    56a8:	e7 94       	ror	r14
    56aa:	d7 94       	ror	r13
    56ac:	c7 94       	ror	r12
    56ae:	1a 95       	dec	r17
    56b0:	d1 f7       	brne	.-12     	; 0x56a6 <__stack+0x16a7>
    56b2:	0d e0       	ldi	r16, 0x0D	; 13
    56b4:	88 0c       	add	r8, r8
    56b6:	99 1c       	adc	r9, r9
    56b8:	aa 1c       	adc	r10, r10
    56ba:	bb 1c       	adc	r11, r11
    56bc:	0a 95       	dec	r16
    56be:	d1 f7       	brne	.-12     	; 0x56b4 <__stack+0x16b5>
    56c0:	8c 28       	or	r8, r12
    56c2:	9d 28       	or	r9, r13
    56c4:	ae 28       	or	r10, r14
    56c6:	bf 28       	or	r11, r15
    56c8:	68 96       	adiw	r28, 0x18	; 24
    56ca:	88 82       	st	Y, r8
    56cc:	99 82       	std	Y+1, r9	; 0x01
    56ce:	aa 82       	std	Y+2, r10	; 0x02
    56d0:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[136] = ROL(key->rk[130] + delta[4][26], 13);
    56d2:	8e e6       	ldi	r24, 0x6E	; 110
    56d4:	88 1a       	sub	r8, r24
    56d6:	85 e8       	ldi	r24, 0x85	; 133
    56d8:	98 0a       	sbc	r9, r24
    56da:	8a e3       	ldi	r24, 0x3A	; 58
    56dc:	a8 0a       	sbc	r10, r24
    56de:	86 e8       	ldi	r24, 0x86	; 134
    56e0:	b8 0a       	sbc	r11, r24
    56e2:	75 01       	movw	r14, r10
    56e4:	64 01       	movw	r12, r8
    56e6:	83 e1       	ldi	r24, 0x13	; 19
    56e8:	f6 94       	lsr	r15
    56ea:	e7 94       	ror	r14
    56ec:	d7 94       	ror	r13
    56ee:	c7 94       	ror	r12
    56f0:	8a 95       	dec	r24
    56f2:	d1 f7       	brne	.-12     	; 0x56e8 <__stack+0x16e9>
    56f4:	9d e0       	ldi	r25, 0x0D	; 13
    56f6:	88 0c       	add	r8, r8
    56f8:	99 1c       	adc	r9, r9
    56fa:	aa 1c       	adc	r10, r10
    56fc:	bb 1c       	adc	r11, r11
    56fe:	9a 95       	dec	r25
    5700:	d1 f7       	brne	.-12     	; 0x56f6 <__stack+0x16f7>
    5702:	8c 28       	or	r8, r12
    5704:	9d 28       	or	r9, r13
    5706:	ae 28       	or	r10, r14
    5708:	bf 28       	or	r11, r15
    570a:	68 96       	adiw	r28, 0x18	; 24
    570c:	88 82       	st	Y, r8
    570e:	99 82       	std	Y+1, r9	; 0x01
    5710:	aa 82       	std	Y+2, r10	; 0x02
    5712:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[142] = ROL(key->rk[136] + delta[5][27], 13);
    5714:	80 e3       	ldi	r24, 0x30	; 48
    5716:	88 1a       	sub	r8, r24
    5718:	81 ed       	ldi	r24, 0xD1	; 209
    571a:	98 0a       	sbc	r9, r24
    571c:	83 ec       	ldi	r24, 0xC3	; 195
    571e:	a8 0a       	sbc	r10, r24
    5720:	89 ea       	ldi	r24, 0xA9	; 169
    5722:	b8 0a       	sbc	r11, r24
    5724:	75 01       	movw	r14, r10
    5726:	64 01       	movw	r12, r8
    5728:	63 e1       	ldi	r22, 0x13	; 19
    572a:	f6 94       	lsr	r15
    572c:	e7 94       	ror	r14
    572e:	d7 94       	ror	r13
    5730:	c7 94       	ror	r12
    5732:	6a 95       	dec	r22
    5734:	d1 f7       	brne	.-12     	; 0x572a <__stack+0x172b>
    5736:	7d e0       	ldi	r23, 0x0D	; 13
    5738:	88 0c       	add	r8, r8
    573a:	99 1c       	adc	r9, r9
    573c:	aa 1c       	adc	r10, r10
    573e:	bb 1c       	adc	r11, r11
    5740:	7a 95       	dec	r23
    5742:	d1 f7       	brne	.-12     	; 0x5738 <__stack+0x1739>
    5744:	8c 28       	or	r8, r12
    5746:	9d 28       	or	r9, r13
    5748:	ae 28       	or	r10, r14
    574a:	bf 28       	or	r11, r15
    574c:	68 96       	adiw	r28, 0x18	; 24
    574e:	88 82       	st	Y, r8
    5750:	99 82       	std	Y+1, r9	; 0x01
    5752:	aa 82       	std	Y+2, r10	; 0x02
    5754:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[148] = ROL(key->rk[142] + delta[0][28], 13);
    5756:	83 e6       	ldi	r24, 0x63	; 99
    5758:	88 1a       	sub	r8, r24
    575a:	81 e0       	ldi	r24, 0x01	; 1
    575c:	98 0a       	sbc	r9, r24
    575e:	81 ec       	ldi	r24, 0xC1	; 193
    5760:	a8 0a       	sbc	r10, r24
    5762:	83 e4       	ldi	r24, 0x43	; 67
    5764:	b8 0a       	sbc	r11, r24
    5766:	75 01       	movw	r14, r10
    5768:	64 01       	movw	r12, r8
    576a:	13 e1       	ldi	r17, 0x13	; 19
    576c:	f6 94       	lsr	r15
    576e:	e7 94       	ror	r14
    5770:	d7 94       	ror	r13
    5772:	c7 94       	ror	r12
    5774:	1a 95       	dec	r17
    5776:	d1 f7       	brne	.-12     	; 0x576c <__stack+0x176d>
    5778:	0d e0       	ldi	r16, 0x0D	; 13
    577a:	88 0c       	add	r8, r8
    577c:	99 1c       	adc	r9, r9
    577e:	aa 1c       	adc	r10, r10
    5780:	bb 1c       	adc	r11, r11
    5782:	0a 95       	dec	r16
    5784:	d1 f7       	brne	.-12     	; 0x577a <__stack+0x177b>
    5786:	8c 28       	or	r8, r12
    5788:	9d 28       	or	r9, r13
    578a:	ae 28       	or	r10, r14
    578c:	bf 28       	or	r11, r15
    578e:	68 96       	adiw	r28, 0x18	; 24
    5790:	88 82       	st	Y, r8
    5792:	99 82       	std	Y+1, r9	; 0x01
    5794:	aa 82       	std	Y+2, r10	; 0x02
    5796:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[154] = ROL(key->rk[148] + delta[1][29], 13);
    5798:	80 ea       	ldi	r24, 0xA0	; 160
    579a:	88 1a       	sub	r8, r24
    579c:	82 eb       	ldi	r24, 0xB2	; 178
    579e:	98 0a       	sbc	r9, r24
    57a0:	83 e7       	ldi	r24, 0x73	; 115
    57a2:	a8 0a       	sbc	r10, r24
    57a4:	87 eb       	ldi	r24, 0xB7	; 183
    57a6:	b8 0a       	sbc	r11, r24
    57a8:	75 01       	movw	r14, r10
    57aa:	64 01       	movw	r12, r8
    57ac:	83 e1       	ldi	r24, 0x13	; 19
    57ae:	f6 94       	lsr	r15
    57b0:	e7 94       	ror	r14
    57b2:	d7 94       	ror	r13
    57b4:	c7 94       	ror	r12
    57b6:	8a 95       	dec	r24
    57b8:	d1 f7       	brne	.-12     	; 0x57ae <__stack+0x17af>
    57ba:	9d e0       	ldi	r25, 0x0D	; 13
    57bc:	88 0c       	add	r8, r8
    57be:	99 1c       	adc	r9, r9
    57c0:	aa 1c       	adc	r10, r10
    57c2:	bb 1c       	adc	r11, r11
    57c4:	9a 95       	dec	r25
    57c6:	d1 f7       	brne	.-12     	; 0x57bc <__stack+0x17bd>
    57c8:	8c 28       	or	r8, r12
    57ca:	9d 28       	or	r9, r13
    57cc:	ae 28       	or	r10, r14
    57ce:	bf 28       	or	r11, r15
    57d0:	68 96       	adiw	r28, 0x18	; 24
    57d2:	88 82       	st	Y, r8
    57d4:	99 82       	std	Y+1, r9	; 0x01
    57d6:	aa 82       	std	Y+2, r10	; 0x02
    57d8:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[160] = ROL(key->rk[154] + delta[2][30], 13);
    57da:	8e ed       	ldi	r24, 0xDE	; 222
    57dc:	88 1a       	sub	r8, r24
    57de:	80 e6       	ldi	r24, 0x60	; 96
    57e0:	98 0a       	sbc	r9, r24
    57e2:	87 e8       	ldi	r24, 0x87	; 135
    57e4:	a8 0a       	sbc	r10, r24
    57e6:	81 e6       	ldi	r24, 0x61	; 97
    57e8:	b8 0a       	sbc	r11, r24
    57ea:	75 01       	movw	r14, r10
    57ec:	64 01       	movw	r12, r8
    57ee:	63 e1       	ldi	r22, 0x13	; 19
    57f0:	f6 94       	lsr	r15
    57f2:	e7 94       	ror	r14
    57f4:	d7 94       	ror	r13
    57f6:	c7 94       	ror	r12
    57f8:	6a 95       	dec	r22
    57fa:	d1 f7       	brne	.-12     	; 0x57f0 <__stack+0x17f1>
    57fc:	7d e0       	ldi	r23, 0x0D	; 13
    57fe:	88 0c       	add	r8, r8
    5800:	99 1c       	adc	r9, r9
    5802:	aa 1c       	adc	r10, r10
    5804:	bb 1c       	adc	r11, r11
    5806:	7a 95       	dec	r23
    5808:	d1 f7       	brne	.-12     	; 0x57fe <__stack+0x17ff>
    580a:	8c 28       	or	r8, r12
    580c:	9d 28       	or	r9, r13
    580e:	ae 28       	or	r10, r14
    5810:	bf 28       	or	r11, r15
    5812:	68 96       	adiw	r28, 0x18	; 24
    5814:	88 82       	st	Y, r8
    5816:	99 82       	std	Y+1, r9	; 0x01
    5818:	aa 82       	std	Y+2, r10	; 0x02
    581a:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[166] = ROL(key->rk[160] + delta[3][31], 13);
    581c:	8a e8       	ldi	r24, 0x8A	; 138
    581e:	88 1a       	sub	r8, r24
    5820:	87 e6       	ldi	r24, 0x67	; 103
    5822:	98 0a       	sbc	r9, r24
    5824:	80 e9       	ldi	r24, 0x90	; 144
    5826:	a8 0a       	sbc	r10, r24
    5828:	83 ec       	ldi	r24, 0xC3	; 195
    582a:	b8 0a       	sbc	r11, r24
    582c:	75 01       	movw	r14, r10
    582e:	64 01       	movw	r12, r8
    5830:	13 e1       	ldi	r17, 0x13	; 19
    5832:	f6 94       	lsr	r15
    5834:	e7 94       	ror	r14
    5836:	d7 94       	ror	r13
    5838:	c7 94       	ror	r12
    583a:	1a 95       	dec	r17
    583c:	d1 f7       	brne	.-12     	; 0x5832 <__stack+0x1833>
    583e:	0d e0       	ldi	r16, 0x0D	; 13
    5840:	88 0c       	add	r8, r8
    5842:	99 1c       	adc	r9, r9
    5844:	aa 1c       	adc	r10, r10
    5846:	bb 1c       	adc	r11, r11
    5848:	0a 95       	dec	r16
    584a:	d1 f7       	brne	.-12     	; 0x5840 <__stack+0x1841>
    584c:	c8 28       	or	r12, r8
    584e:	d9 28       	or	r13, r9
    5850:	ea 28       	or	r14, r10
    5852:	fb 28       	or	r15, r11
    5854:	68 96       	adiw	r28, 0x18	; 24
    5856:	c8 82       	st	Y, r12
    5858:	d9 82       	std	Y+1, r13	; 0x01
    585a:	ea 82       	std	Y+2, r14	; 0x02
    585c:	fb 82       	std	Y+3, r15	; 0x03

		key->rk[  5] = ROL(loadU32(_mk[5]) + delta[0][ 5], 17);
    585e:	54 96       	adiw	r26, 0x14	; 20
    5860:	8d 91       	ld	r24, X+
    5862:	9d 91       	ld	r25, X+
    5864:	0d 90       	ld	r0, X+
    5866:	bc 91       	ld	r27, X
    5868:	a0 2d       	mov	r26, r0
    586a:	88 58       	subi	r24, 0x88	; 136
    586c:	94 4c       	sbci	r25, 0xC4	; 196
    586e:	a2 40       	sbci	r26, 0x02	; 2
    5870:	b2 48       	sbci	r27, 0x82	; 130
    5872:	6c 01       	movw	r12, r24
    5874:	7d 01       	movw	r14, r26
    5876:	6f e0       	ldi	r22, 0x0F	; 15
    5878:	f6 94       	lsr	r15
    587a:	e7 94       	ror	r14
    587c:	d7 94       	ror	r13
    587e:	c7 94       	ror	r12
    5880:	6a 95       	dec	r22
    5882:	d1 f7       	brne	.-12     	; 0x5878 <__stack+0x1879>
    5884:	71 e1       	ldi	r23, 0x11	; 17
    5886:	88 0f       	add	r24, r24
    5888:	99 1f       	adc	r25, r25
    588a:	aa 1f       	adc	r26, r26
    588c:	bb 1f       	adc	r27, r27
    588e:	7a 95       	dec	r23
    5890:	d1 f7       	brne	.-12     	; 0x5886 <__stack+0x1887>
    5892:	8c 29       	or	r24, r12
    5894:	9d 29       	or	r25, r13
    5896:	ae 29       	or	r26, r14
    5898:	bf 29       	or	r27, r15
    589a:	84 8b       	std	Z+20, r24	; 0x14
    589c:	95 8b       	std	Z+21, r25	; 0x15
    589e:	a6 8b       	std	Z+22, r26	; 0x16
    58a0:	b7 8b       	std	Z+23, r27	; 0x17
		key->rk[ 11] = ROL(key->rk[  5] + delta[1][ 6], 17);
    58a2:	8f 56       	subi	r24, 0x6F	; 111
    58a4:	9f 43       	sbci	r25, 0x3F	; 63
    58a6:	a5 46       	sbci	r26, 0x65	; 101
    58a8:	b7 4e       	sbci	r27, 0xE7	; 231
    58aa:	6c 01       	movw	r12, r24
    58ac:	7d 01       	movw	r14, r26
    58ae:	1f e0       	ldi	r17, 0x0F	; 15
    58b0:	f6 94       	lsr	r15
    58b2:	e7 94       	ror	r14
    58b4:	d7 94       	ror	r13
    58b6:	c7 94       	ror	r12
    58b8:	1a 95       	dec	r17
    58ba:	d1 f7       	brne	.-12     	; 0x58b0 <__stack+0x18b1>
    58bc:	01 e1       	ldi	r16, 0x11	; 17
    58be:	88 0f       	add	r24, r24
    58c0:	99 1f       	adc	r25, r25
    58c2:	aa 1f       	adc	r26, r26
    58c4:	bb 1f       	adc	r27, r27
    58c6:	0a 95       	dec	r16
    58c8:	d1 f7       	brne	.-12     	; 0x58be <__stack+0x18bf>
    58ca:	8c 29       	or	r24, r12
    58cc:	9d 29       	or	r25, r13
    58ce:	ae 29       	or	r26, r14
    58d0:	bf 29       	or	r27, r15
    58d2:	84 a7       	std	Z+44, r24	; 0x2c
    58d4:	95 a7       	std	Z+45, r25	; 0x2d
    58d6:	a6 a7       	std	Z+46, r26	; 0x2e
    58d8:	b7 a7       	std	Z+47, r27	; 0x2f
		key->rk[ 17] = ROL(key->rk[ 11] + delta[2][ 7], 17);
    58da:	84 5c       	subi	r24, 0xC4	; 196
    58dc:	9a 4b       	sbci	r25, 0xBA	; 186
    58de:	a1 4c       	sbci	r26, 0xC1	; 193
    58e0:	be 40       	sbci	r27, 0x0E	; 14
    58e2:	6c 01       	movw	r12, r24
    58e4:	7d 01       	movw	r14, r26
    58e6:	6f e0       	ldi	r22, 0x0F	; 15
    58e8:	f6 94       	lsr	r15
    58ea:	e7 94       	ror	r14
    58ec:	d7 94       	ror	r13
    58ee:	c7 94       	ror	r12
    58f0:	6a 95       	dec	r22
    58f2:	d1 f7       	brne	.-12     	; 0x58e8 <__stack+0x18e9>
    58f4:	71 e1       	ldi	r23, 0x11	; 17
    58f6:	88 0f       	add	r24, r24
    58f8:	99 1f       	adc	r25, r25
    58fa:	aa 1f       	adc	r26, r26
    58fc:	bb 1f       	adc	r27, r27
    58fe:	7a 95       	dec	r23
    5900:	d1 f7       	brne	.-12     	; 0x58f6 <__stack+0x18f7>
    5902:	8c 29       	or	r24, r12
    5904:	9d 29       	or	r25, r13
    5906:	ae 29       	or	r26, r14
    5908:	bf 29       	or	r27, r15
    590a:	c4 55       	subi	r28, 0x54	; 84
    590c:	d2 40       	sbci	r29, 0x02	; 2
    590e:	88 83       	st	Y, r24
    5910:	99 83       	std	Y+1, r25	; 0x01
    5912:	aa 83       	std	Y+2, r26	; 0x02
    5914:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[ 23] = ROL(key->rk[ 17] + delta[3][ 8], 17);
    5916:	88 58       	subi	r24, 0x88	; 136
    5918:	93 41       	sbci	r25, 0x13	; 19
    591a:	af 4c       	sbci	r26, 0xCF	; 207
    591c:	b0 42       	sbci	r27, 0x20	; 32
    591e:	6c 01       	movw	r12, r24
    5920:	7d 01       	movw	r14, r26
    5922:	1f e0       	ldi	r17, 0x0F	; 15
    5924:	f6 94       	lsr	r15
    5926:	e7 94       	ror	r14
    5928:	d7 94       	ror	r13
    592a:	c7 94       	ror	r12
    592c:	1a 95       	dec	r17
    592e:	d1 f7       	brne	.-12     	; 0x5924 <__stack+0x1925>
    5930:	01 e1       	ldi	r16, 0x11	; 17
    5932:	88 0f       	add	r24, r24
    5934:	99 1f       	adc	r25, r25
    5936:	aa 1f       	adc	r26, r26
    5938:	bb 1f       	adc	r27, r27
    593a:	0a 95       	dec	r16
    593c:	d1 f7       	brne	.-12     	; 0x5932 <__stack+0x1933>
    593e:	8c 29       	or	r24, r12
    5940:	9d 29       	or	r25, r13
    5942:	ae 29       	or	r26, r14
    5944:	bf 29       	or	r27, r15
    5946:	68 96       	adiw	r28, 0x18	; 24
    5948:	88 83       	st	Y, r24
    594a:	99 83       	std	Y+1, r25	; 0x01
    594c:	aa 83       	std	Y+2, r26	; 0x02
    594e:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[ 29] = ROL(key->rk[ 23] + delta[4][ 9], 17);
    5950:	8e 51       	subi	r24, 0x1E	; 30
    5952:	93 4c       	sbci	r25, 0xC3	; 195
    5954:	a6 4b       	sbci	r26, 0xB6	; 182
    5956:	b2 44       	sbci	r27, 0x42	; 66
    5958:	6c 01       	movw	r12, r24
    595a:	7d 01       	movw	r14, r26
    595c:	6f e0       	ldi	r22, 0x0F	; 15
    595e:	f6 94       	lsr	r15
    5960:	e7 94       	ror	r14
    5962:	d7 94       	ror	r13
    5964:	c7 94       	ror	r12
    5966:	6a 95       	dec	r22
    5968:	d1 f7       	brne	.-12     	; 0x595e <__stack+0x195f>
    596a:	71 e1       	ldi	r23, 0x11	; 17
    596c:	88 0f       	add	r24, r24
    596e:	99 1f       	adc	r25, r25
    5970:	aa 1f       	adc	r26, r26
    5972:	bb 1f       	adc	r27, r27
    5974:	7a 95       	dec	r23
    5976:	d1 f7       	brne	.-12     	; 0x596c <__stack+0x196d>
    5978:	8c 29       	or	r24, r12
    597a:	9d 29       	or	r25, r13
    597c:	ae 29       	or	r26, r14
    597e:	bf 29       	or	r27, r15
    5980:	68 96       	adiw	r28, 0x18	; 24
    5982:	88 83       	st	Y, r24
    5984:	99 83       	std	Y+1, r25	; 0x01
    5986:	aa 83       	std	Y+2, r26	; 0x02
    5988:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[ 35] = ROL(key->rk[ 29] + delta[5][10], 17);
    598a:	82 5e       	subi	r24, 0xE2	; 226
    598c:	94 4d       	sbci	r25, 0xD4	; 212
    598e:	a7 49       	sbci	r26, 0x97	; 151
    5990:	b8 4e       	sbci	r27, 0xE8	; 232
    5992:	6c 01       	movw	r12, r24
    5994:	7d 01       	movw	r14, r26
    5996:	1f e0       	ldi	r17, 0x0F	; 15
    5998:	f6 94       	lsr	r15
    599a:	e7 94       	ror	r14
    599c:	d7 94       	ror	r13
    599e:	c7 94       	ror	r12
    59a0:	1a 95       	dec	r17
    59a2:	d1 f7       	brne	.-12     	; 0x5998 <__stack+0x1999>
    59a4:	01 e1       	ldi	r16, 0x11	; 17
    59a6:	88 0f       	add	r24, r24
    59a8:	99 1f       	adc	r25, r25
    59aa:	aa 1f       	adc	r26, r26
    59ac:	bb 1f       	adc	r27, r27
    59ae:	0a 95       	dec	r16
    59b0:	d1 f7       	brne	.-12     	; 0x59a6 <__stack+0x19a7>
    59b2:	8c 29       	or	r24, r12
    59b4:	9d 29       	or	r25, r13
    59b6:	ae 29       	or	r26, r14
    59b8:	bf 29       	or	r27, r15
    59ba:	68 96       	adiw	r28, 0x18	; 24
    59bc:	88 83       	st	Y, r24
    59be:	99 83       	std	Y+1, r25	; 0x01
    59c0:	aa 83       	std	Y+2, r26	; 0x02
    59c2:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[ 41] = ROL(key->rk[ 35] + delta[0][11], 17);
    59c4:	81 5e       	subi	r24, 0xE1	; 225
    59c6:	91 42       	sbci	r25, 0x21	; 33
    59c8:	a1 4b       	sbci	r26, 0xB1	; 177
    59ca:	b0 48       	sbci	r27, 0x80	; 128
    59cc:	6c 01       	movw	r12, r24
    59ce:	7d 01       	movw	r14, r26
    59d0:	6f e0       	ldi	r22, 0x0F	; 15
    59d2:	f6 94       	lsr	r15
    59d4:	e7 94       	ror	r14
    59d6:	d7 94       	ror	r13
    59d8:	c7 94       	ror	r12
    59da:	6a 95       	dec	r22
    59dc:	d1 f7       	brne	.-12     	; 0x59d2 <__stack+0x19d3>
    59de:	71 e1       	ldi	r23, 0x11	; 17
    59e0:	88 0f       	add	r24, r24
    59e2:	99 1f       	adc	r25, r25
    59e4:	aa 1f       	adc	r26, r26
    59e6:	bb 1f       	adc	r27, r27
    59e8:	7a 95       	dec	r23
    59ea:	d1 f7       	brne	.-12     	; 0x59e0 <__stack+0x19e1>
    59ec:	8c 29       	or	r24, r12
    59ee:	9d 29       	or	r25, r13
    59f0:	ae 29       	or	r26, r14
    59f2:	bf 29       	or	r27, r15
    59f4:	68 96       	adiw	r28, 0x18	; 24
    59f6:	88 83       	st	Y, r24
    59f8:	99 83       	std	Y+1, r25	; 0x01
    59fa:	aa 83       	std	Y+2, r26	; 0x02
    59fc:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[ 47] = ROL(key->rk[ 41] + delta[1][12], 17);
    59fe:	8a 5b       	subi	r24, 0xBA	; 186
    5a00:	9b 4d       	sbci	r25, 0xDB	; 219
    5a02:	af 44       	sbci	r26, 0x4F	; 79
    5a04:	b9 4d       	sbci	r27, 0xD9	; 217
    5a06:	6c 01       	movw	r12, r24
    5a08:	7d 01       	movw	r14, r26
    5a0a:	1f e0       	ldi	r17, 0x0F	; 15
    5a0c:	f6 94       	lsr	r15
    5a0e:	e7 94       	ror	r14
    5a10:	d7 94       	ror	r13
    5a12:	c7 94       	ror	r12
    5a14:	1a 95       	dec	r17
    5a16:	d1 f7       	brne	.-12     	; 0x5a0c <__stack+0x1a0d>
    5a18:	01 e1       	ldi	r16, 0x11	; 17
    5a1a:	88 0f       	add	r24, r24
    5a1c:	99 1f       	adc	r25, r25
    5a1e:	aa 1f       	adc	r26, r26
    5a20:	bb 1f       	adc	r27, r27
    5a22:	0a 95       	dec	r16
    5a24:	d1 f7       	brne	.-12     	; 0x5a1a <__stack+0x1a1b>
    5a26:	8c 29       	or	r24, r12
    5a28:	9d 29       	or	r25, r13
    5a2a:	ae 29       	or	r26, r14
    5a2c:	bf 29       	or	r27, r15
    5a2e:	68 96       	adiw	r28, 0x18	; 24
    5a30:	88 83       	st	Y, r24
    5a32:	99 83       	std	Y+1, r25	; 0x01
    5a34:	aa 83       	std	Y+2, r26	; 0x02
    5a36:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[ 53] = ROL(key->rk[ 47] + delta[2][13], 17);
    5a38:	84 5c       	subi	r24, 0xC4	; 196
    5a3a:	90 4b       	sbci	r25, 0xB0	; 176
    5a3c:	ae 46       	sbci	r26, 0x6E	; 110
    5a3e:	b0 4b       	sbci	r27, 0xB0	; 176
    5a40:	6c 01       	movw	r12, r24
    5a42:	7d 01       	movw	r14, r26
    5a44:	6f e0       	ldi	r22, 0x0F	; 15
    5a46:	f6 94       	lsr	r15
    5a48:	e7 94       	ror	r14
    5a4a:	d7 94       	ror	r13
    5a4c:	c7 94       	ror	r12
    5a4e:	6a 95       	dec	r22
    5a50:	d1 f7       	brne	.-12     	; 0x5a46 <__stack+0x1a47>
    5a52:	71 e1       	ldi	r23, 0x11	; 17
    5a54:	88 0f       	add	r24, r24
    5a56:	99 1f       	adc	r25, r25
    5a58:	aa 1f       	adc	r26, r26
    5a5a:	bb 1f       	adc	r27, r27
    5a5c:	7a 95       	dec	r23
    5a5e:	d1 f7       	brne	.-12     	; 0x5a54 <__stack+0x1a55>
    5a60:	8c 29       	or	r24, r12
    5a62:	9d 29       	or	r25, r13
    5a64:	ae 29       	or	r26, r14
    5a66:	bf 29       	or	r27, r15
    5a68:	68 96       	adiw	r28, 0x18	; 24
    5a6a:	88 83       	st	Y, r24
    5a6c:	99 83       	std	Y+1, r25	; 0x01
    5a6e:	aa 83       	std	Y+2, r26	; 0x02
    5a70:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[ 59] = ROL(key->rk[ 53] + delta[3][14], 17);
    5a72:	89 5c       	subi	r24, 0xC9	; 201
    5a74:	91 4e       	sbci	r25, 0xE1	; 225
    5a76:	a4 4c       	sbci	r26, 0xC4	; 196
    5a78:	b3 43       	sbci	r27, 0x33	; 51
    5a7a:	6c 01       	movw	r12, r24
    5a7c:	7d 01       	movw	r14, r26
    5a7e:	1f e0       	ldi	r17, 0x0F	; 15
    5a80:	f6 94       	lsr	r15
    5a82:	e7 94       	ror	r14
    5a84:	d7 94       	ror	r13
    5a86:	c7 94       	ror	r12
    5a88:	1a 95       	dec	r17
    5a8a:	d1 f7       	brne	.-12     	; 0x5a80 <__stack+0x1a81>
    5a8c:	01 e1       	ldi	r16, 0x11	; 17
    5a8e:	88 0f       	add	r24, r24
    5a90:	99 1f       	adc	r25, r25
    5a92:	aa 1f       	adc	r26, r26
    5a94:	bb 1f       	adc	r27, r27
    5a96:	0a 95       	dec	r16
    5a98:	d1 f7       	brne	.-12     	; 0x5a8e <__stack+0x1a8f>
    5a9a:	8c 29       	or	r24, r12
    5a9c:	9d 29       	or	r25, r13
    5a9e:	ae 29       	or	r26, r14
    5aa0:	bf 29       	or	r27, r15
    5aa2:	68 96       	adiw	r28, 0x18	; 24
    5aa4:	88 83       	st	Y, r24
    5aa6:	99 83       	std	Y+1, r25	; 0x01
    5aa8:	aa 83       	std	Y+2, r26	; 0x02
    5aaa:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[ 65] = ROL(key->rk[ 59] + delta[4][15], 17);
    5aac:	81 55       	subi	r24, 0x51	; 81
    5aae:	97 4c       	sbci	r25, 0xC7	; 199
    5ab0:	a0 4b       	sbci	r26, 0xB0	; 176
    5ab2:	bd 4a       	sbci	r27, 0xAD	; 173
    5ab4:	6c 01       	movw	r12, r24
    5ab6:	7d 01       	movw	r14, r26
    5ab8:	6f e0       	ldi	r22, 0x0F	; 15
    5aba:	f6 94       	lsr	r15
    5abc:	e7 94       	ror	r14
    5abe:	d7 94       	ror	r13
    5ac0:	c7 94       	ror	r12
    5ac2:	6a 95       	dec	r22
    5ac4:	d1 f7       	brne	.-12     	; 0x5aba <__stack+0x1abb>
    5ac6:	71 e1       	ldi	r23, 0x11	; 17
    5ac8:	88 0f       	add	r24, r24
    5aca:	99 1f       	adc	r25, r25
    5acc:	aa 1f       	adc	r26, r26
    5ace:	bb 1f       	adc	r27, r27
    5ad0:	7a 95       	dec	r23
    5ad2:	d1 f7       	brne	.-12     	; 0x5ac8 <__stack+0x1ac9>
    5ad4:	8c 29       	or	r24, r12
    5ad6:	9d 29       	or	r25, r13
    5ad8:	ae 29       	or	r26, r14
    5ada:	bf 29       	or	r27, r15
    5adc:	68 96       	adiw	r28, 0x18	; 24
    5ade:	88 83       	st	Y, r24
    5ae0:	99 83       	std	Y+1, r25	; 0x01
    5ae2:	aa 83       	std	Y+2, r26	; 0x02
    5ae4:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[ 71] = ROL(key->rk[ 65] + delta[5][16], 17);
    5ae6:	8b 57       	subi	r24, 0x7B	; 123
    5ae8:	98 43       	sbci	r25, 0x38	; 56
    5aea:	a5 4f       	sbci	r26, 0xF5	; 245
    5aec:	b5 42       	sbci	r27, 0x25	; 37
    5aee:	6c 01       	movw	r12, r24
    5af0:	7d 01       	movw	r14, r26
    5af2:	1f e0       	ldi	r17, 0x0F	; 15
    5af4:	f6 94       	lsr	r15
    5af6:	e7 94       	ror	r14
    5af8:	d7 94       	ror	r13
    5afa:	c7 94       	ror	r12
    5afc:	1a 95       	dec	r17
    5afe:	d1 f7       	brne	.-12     	; 0x5af4 <__stack+0x1af5>
    5b00:	01 e1       	ldi	r16, 0x11	; 17
    5b02:	88 0f       	add	r24, r24
    5b04:	99 1f       	adc	r25, r25
    5b06:	aa 1f       	adc	r26, r26
    5b08:	bb 1f       	adc	r27, r27
    5b0a:	0a 95       	dec	r16
    5b0c:	d1 f7       	brne	.-12     	; 0x5b02 <__stack+0x1b03>
    5b0e:	8c 29       	or	r24, r12
    5b10:	9d 29       	or	r25, r13
    5b12:	ae 29       	or	r26, r14
    5b14:	bf 29       	or	r27, r15
    5b16:	68 96       	adiw	r28, 0x18	; 24
    5b18:	88 83       	st	Y, r24
    5b1a:	99 83       	std	Y+1, r25	; 0x01
    5b1c:	aa 83       	std	Y+2, r26	; 0x02
    5b1e:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[ 77] = ROL(key->rk[ 71] + delta[0][17], 17);
    5b20:	81 52       	subi	r24, 0x21	; 33
    5b22:	98 47       	sbci	r25, 0x78	; 120
    5b24:	a8 44       	sbci	r26, 0x48	; 72
    5b26:	bc 42       	sbci	r27, 0x2C	; 44
    5b28:	6c 01       	movw	r12, r24
    5b2a:	7d 01       	movw	r14, r26
    5b2c:	6f e0       	ldi	r22, 0x0F	; 15
    5b2e:	f6 94       	lsr	r15
    5b30:	e7 94       	ror	r14
    5b32:	d7 94       	ror	r13
    5b34:	c7 94       	ror	r12
    5b36:	6a 95       	dec	r22
    5b38:	d1 f7       	brne	.-12     	; 0x5b2e <__stack+0x1b2f>
    5b3a:	71 e1       	ldi	r23, 0x11	; 17
    5b3c:	88 0f       	add	r24, r24
    5b3e:	99 1f       	adc	r25, r25
    5b40:	aa 1f       	adc	r26, r26
    5b42:	bb 1f       	adc	r27, r27
    5b44:	7a 95       	dec	r23
    5b46:	d1 f7       	brne	.-12     	; 0x5b3c <__stack+0x1b3d>
    5b48:	8c 29       	or	r24, r12
    5b4a:	9d 29       	or	r25, r13
    5b4c:	ae 29       	or	r26, r14
    5b4e:	bf 29       	or	r27, r15
    5b50:	68 96       	adiw	r28, 0x18	; 24
    5b52:	88 83       	st	Y, r24
    5b54:	99 83       	std	Y+1, r25	; 0x01
    5b56:	aa 83       	std	Y+2, r26	; 0x02
    5b58:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[ 83] = ROL(key->rk[ 77] + delta[1][18], 17);
    5b5a:	87 57       	subi	r24, 0x77	; 119
    5b5c:	9e 4e       	sbci	r25, 0xEE	; 238
    5b5e:	a6 4f       	sbci	r26, 0xF6	; 246
    5b60:	b3 45       	sbci	r27, 0x53	; 83
    5b62:	6c 01       	movw	r12, r24
    5b64:	7d 01       	movw	r14, r26
    5b66:	1f e0       	ldi	r17, 0x0F	; 15
    5b68:	f6 94       	lsr	r15
    5b6a:	e7 94       	ror	r14
    5b6c:	d7 94       	ror	r13
    5b6e:	c7 94       	ror	r12
    5b70:	1a 95       	dec	r17
    5b72:	d1 f7       	brne	.-12     	; 0x5b68 <__stack+0x1b69>
    5b74:	01 e1       	ldi	r16, 0x11	; 17
    5b76:	88 0f       	add	r24, r24
    5b78:	99 1f       	adc	r25, r25
    5b7a:	aa 1f       	adc	r26, r26
    5b7c:	bb 1f       	adc	r27, r27
    5b7e:	0a 95       	dec	r16
    5b80:	d1 f7       	brne	.-12     	; 0x5b76 <__stack+0x1b77>
    5b82:	8c 29       	or	r24, r12
    5b84:	9d 29       	or	r25, r13
    5b86:	ae 29       	or	r26, r14
    5b88:	bf 29       	or	r27, r15
    5b8a:	68 96       	adiw	r28, 0x18	; 24
    5b8c:	88 83       	st	Y, r24
    5b8e:	99 83       	std	Y+1, r25	; 0x01
    5b90:	aa 83       	std	Y+2, r26	; 0x02
    5b92:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[ 89] = ROL(key->rk[ 83] + delta[2][19], 17);
    5b94:	8d 5e       	subi	r24, 0xED	; 237
    5b96:	90 43       	sbci	r25, 0x30	; 48
    5b98:	ac 4a       	sbci	r26, 0xAC	; 172
    5b9a:	bb 41       	sbci	r27, 0x1B	; 27
    5b9c:	6c 01       	movw	r12, r24
    5b9e:	7d 01       	movw	r14, r26
    5ba0:	6f e0       	ldi	r22, 0x0F	; 15
    5ba2:	f6 94       	lsr	r15
    5ba4:	e7 94       	ror	r14
    5ba6:	d7 94       	ror	r13
    5ba8:	c7 94       	ror	r12
    5baa:	6a 95       	dec	r22
    5bac:	d1 f7       	brne	.-12     	; 0x5ba2 <__stack+0x1ba3>
    5bae:	71 e1       	ldi	r23, 0x11	; 17
    5bb0:	88 0f       	add	r24, r24
    5bb2:	99 1f       	adc	r25, r25
    5bb4:	aa 1f       	adc	r26, r26
    5bb6:	bb 1f       	adc	r27, r27
    5bb8:	7a 95       	dec	r23
    5bba:	d1 f7       	brne	.-12     	; 0x5bb0 <__stack+0x1bb1>
    5bbc:	8c 29       	or	r24, r12
    5bbe:	9d 29       	or	r25, r13
    5bc0:	ae 29       	or	r26, r14
    5bc2:	bf 29       	or	r27, r15
    5bc4:	68 96       	adiw	r28, 0x18	; 24
    5bc6:	88 83       	st	Y, r24
    5bc8:	99 83       	std	Y+1, r25	; 0x01
    5bca:	aa 83       	std	Y+2, r26	; 0x02
    5bcc:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[ 95] = ROL(key->rk[ 89] + delta[3][20], 17);
    5bce:	8d 50       	subi	r24, 0x0D	; 13
    5bd0:	92 47       	sbci	r25, 0x72	; 114
    5bd2:	a8 43       	sbci	r26, 0x38	; 56
    5bd4:	b1 4f       	sbci	r27, 0xF1	; 241
    5bd6:	6c 01       	movw	r12, r24
    5bd8:	7d 01       	movw	r14, r26
    5bda:	1f e0       	ldi	r17, 0x0F	; 15
    5bdc:	f6 94       	lsr	r15
    5bde:	e7 94       	ror	r14
    5be0:	d7 94       	ror	r13
    5be2:	c7 94       	ror	r12
    5be4:	1a 95       	dec	r17
    5be6:	d1 f7       	brne	.-12     	; 0x5bdc <__stack+0x1bdd>
    5be8:	01 e1       	ldi	r16, 0x11	; 17
    5bea:	88 0f       	add	r24, r24
    5bec:	99 1f       	adc	r25, r25
    5bee:	aa 1f       	adc	r26, r26
    5bf0:	bb 1f       	adc	r27, r27
    5bf2:	0a 95       	dec	r16
    5bf4:	d1 f7       	brne	.-12     	; 0x5bea <__stack+0x1beb>
    5bf6:	8c 29       	or	r24, r12
    5bf8:	9d 29       	or	r25, r13
    5bfa:	ae 29       	or	r26, r14
    5bfc:	bf 29       	or	r27, r15
    5bfe:	68 96       	adiw	r28, 0x18	; 24
    5c00:	88 83       	st	Y, r24
    5c02:	99 83       	std	Y+1, r25	; 0x01
    5c04:	aa 83       	std	Y+2, r26	; 0x02
    5c06:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[101] = ROL(key->rk[ 95] + delta[4][21], 17);
    5c08:	8c 52       	subi	r24, 0x2C	; 44
    5c0a:	94 4d       	sbci	r25, 0xD4	; 212
    5c0c:	a1 43       	sbci	r26, 0x31	; 49
    5c0e:	bc 46       	sbci	r27, 0x6C	; 108
    5c10:	6c 01       	movw	r12, r24
    5c12:	7d 01       	movw	r14, r26
    5c14:	6f e0       	ldi	r22, 0x0F	; 15
    5c16:	f6 94       	lsr	r15
    5c18:	e7 94       	ror	r14
    5c1a:	d7 94       	ror	r13
    5c1c:	c7 94       	ror	r12
    5c1e:	6a 95       	dec	r22
    5c20:	d1 f7       	brne	.-12     	; 0x5c16 <__stack+0x1c17>
    5c22:	71 e1       	ldi	r23, 0x11	; 17
    5c24:	88 0f       	add	r24, r24
    5c26:	99 1f       	adc	r25, r25
    5c28:	aa 1f       	adc	r26, r26
    5c2a:	bb 1f       	adc	r27, r27
    5c2c:	7a 95       	dec	r23
    5c2e:	d1 f7       	brne	.-12     	; 0x5c24 <__stack+0x1c25>
    5c30:	8c 29       	or	r24, r12
    5c32:	9d 29       	or	r25, r13
    5c34:	ae 29       	or	r26, r14
    5c36:	bf 29       	or	r27, r15
    5c38:	68 96       	adiw	r28, 0x18	; 24
    5c3a:	88 83       	st	Y, r24
    5c3c:	99 83       	std	Y+1, r25	; 0x01
    5c3e:	aa 83       	std	Y+2, r26	; 0x02
    5c40:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[107] = ROL(key->rk[101] + delta[5][22], 17);
    5c42:	8a 58       	subi	r24, 0x8A	; 138
    5c44:	9e 41       	sbci	r25, 0x1E	; 30
    5c46:	ae 44       	sbci	r26, 0x4E	; 78
    5c48:	bd 47       	sbci	r27, 0x7D	; 125
    5c4a:	6c 01       	movw	r12, r24
    5c4c:	7d 01       	movw	r14, r26
    5c4e:	1f e0       	ldi	r17, 0x0F	; 15
    5c50:	f6 94       	lsr	r15
    5c52:	e7 94       	ror	r14
    5c54:	d7 94       	ror	r13
    5c56:	c7 94       	ror	r12
    5c58:	1a 95       	dec	r17
    5c5a:	d1 f7       	brne	.-12     	; 0x5c50 <__stack+0x1c51>
    5c5c:	01 e1       	ldi	r16, 0x11	; 17
    5c5e:	88 0f       	add	r24, r24
    5c60:	99 1f       	adc	r25, r25
    5c62:	aa 1f       	adc	r26, r26
    5c64:	bb 1f       	adc	r27, r27
    5c66:	0a 95       	dec	r16
    5c68:	d1 f7       	brne	.-12     	; 0x5c5e <__stack+0x1c5f>
    5c6a:	8c 29       	or	r24, r12
    5c6c:	9d 29       	or	r25, r13
    5c6e:	ae 29       	or	r26, r14
    5c70:	bf 29       	or	r27, r15
    5c72:	68 96       	adiw	r28, 0x18	; 24
    5c74:	88 83       	st	Y, r24
    5c76:	99 83       	std	Y+1, r25	; 0x01
    5c78:	aa 83       	std	Y+2, r26	; 0x02
    5c7a:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[113] = ROL(key->rk[107] + delta[0][23], 17);
    5c7c:	8c 50       	subi	r24, 0x0C	; 12
    5c7e:	98 40       	sbci	r25, 0x08	; 8
    5c80:	ae 41       	sbci	r26, 0x1E	; 30
    5c82:	b2 41       	sbci	r27, 0x12	; 18
    5c84:	6c 01       	movw	r12, r24
    5c86:	7d 01       	movw	r14, r26
    5c88:	6f e0       	ldi	r22, 0x0F	; 15
    5c8a:	f6 94       	lsr	r15
    5c8c:	e7 94       	ror	r14
    5c8e:	d7 94       	ror	r13
    5c90:	c7 94       	ror	r12
    5c92:	6a 95       	dec	r22
    5c94:	d1 f7       	brne	.-12     	; 0x5c8a <__stack+0x1c8b>
    5c96:	71 e1       	ldi	r23, 0x11	; 17
    5c98:	88 0f       	add	r24, r24
    5c9a:	99 1f       	adc	r25, r25
    5c9c:	aa 1f       	adc	r26, r26
    5c9e:	bb 1f       	adc	r27, r27
    5ca0:	7a 95       	dec	r23
    5ca2:	d1 f7       	brne	.-12     	; 0x5c98 <__stack+0x1c99>
    5ca4:	8c 29       	or	r24, r12
    5ca6:	9d 29       	or	r25, r13
    5ca8:	ae 29       	or	r26, r14
    5caa:	bf 29       	or	r27, r15
    5cac:	68 96       	adiw	r28, 0x18	; 24
    5cae:	88 83       	st	Y, r24
    5cb0:	99 83       	std	Y+1, r25	; 0x01
    5cb2:	aa 83       	std	Y+2, r26	; 0x02
    5cb4:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[119] = ROL(key->rk[113] + delta[1][24], 17);
    5cb6:	85 59       	subi	r24, 0x95	; 149
    5cb8:	9d 49       	sbci	r25, 0x9D	; 157
    5cba:	ab 4b       	sbci	r26, 0xBB	; 187
    5cbc:	bd 4f       	sbci	r27, 0xFD	; 253
    5cbe:	6c 01       	movw	r12, r24
    5cc0:	7d 01       	movw	r14, r26
    5cc2:	1f e0       	ldi	r17, 0x0F	; 15
    5cc4:	f6 94       	lsr	r15
    5cc6:	e7 94       	ror	r14
    5cc8:	d7 94       	ror	r13
    5cca:	c7 94       	ror	r12
    5ccc:	1a 95       	dec	r17
    5cce:	d1 f7       	brne	.-12     	; 0x5cc4 <__stack+0x1cc5>
    5cd0:	01 e1       	ldi	r16, 0x11	; 17
    5cd2:	88 0f       	add	r24, r24
    5cd4:	99 1f       	adc	r25, r25
    5cd6:	aa 1f       	adc	r26, r26
    5cd8:	bb 1f       	adc	r27, r27
    5cda:	0a 95       	dec	r16
    5cdc:	d1 f7       	brne	.-12     	; 0x5cd2 <__stack+0x1cd3>
    5cde:	8c 29       	or	r24, r12
    5ce0:	9d 29       	or	r25, r13
    5ce2:	ae 29       	or	r26, r14
    5ce4:	bf 29       	or	r27, r15
    5ce6:	68 96       	adiw	r28, 0x18	; 24
    5ce8:	88 83       	st	Y, r24
    5cea:	99 83       	std	Y+1, r25	; 0x01
    5cec:	aa 83       	std	Y+2, r26	; 0x02
    5cee:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[125] = ROL(key->rk[119] + delta[2][25], 17);
    5cf0:	87 50       	subi	r24, 0x07	; 7
    5cf2:	9b 43       	sbci	r25, 0x3B	; 59
    5cf4:	ac 40       	sbci	r26, 0x0C	; 12
    5cf6:	bb 4e       	sbci	r27, 0xEB	; 235
    5cf8:	6c 01       	movw	r12, r24
    5cfa:	7d 01       	movw	r14, r26
    5cfc:	6f e0       	ldi	r22, 0x0F	; 15
    5cfe:	f6 94       	lsr	r15
    5d00:	e7 94       	ror	r14
    5d02:	d7 94       	ror	r13
    5d04:	c7 94       	ror	r12
    5d06:	6a 95       	dec	r22
    5d08:	d1 f7       	brne	.-12     	; 0x5cfe <__stack+0x1cff>
    5d0a:	71 e1       	ldi	r23, 0x11	; 17
    5d0c:	88 0f       	add	r24, r24
    5d0e:	99 1f       	adc	r25, r25
    5d10:	aa 1f       	adc	r26, r26
    5d12:	bb 1f       	adc	r27, r27
    5d14:	7a 95       	dec	r23
    5d16:	d1 f7       	brne	.-12     	; 0x5d0c <__stack+0x1d0d>
    5d18:	8c 29       	or	r24, r12
    5d1a:	9d 29       	or	r25, r13
    5d1c:	ae 29       	or	r26, r14
    5d1e:	bf 29       	or	r27, r15
    5d20:	68 96       	adiw	r28, 0x18	; 24
    5d22:	88 83       	st	Y, r24
    5d24:	99 83       	std	Y+1, r25	; 0x01
    5d26:	aa 83       	std	Y+2, r26	; 0x02
    5d28:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[131] = ROL(key->rk[125] + delta[3][26], 17);
    5d2a:	8d 53       	subi	r24, 0x3D	; 61
    5d2c:	93 48       	sbci	r25, 0x83	; 131
    5d2e:	ac 41       	sbci	r26, 0x1C	; 28
    5d30:	be 44       	sbci	r27, 0x4E	; 78
    5d32:	6c 01       	movw	r12, r24
    5d34:	7d 01       	movw	r14, r26
    5d36:	1f e0       	ldi	r17, 0x0F	; 15
    5d38:	f6 94       	lsr	r15
    5d3a:	e7 94       	ror	r14
    5d3c:	d7 94       	ror	r13
    5d3e:	c7 94       	ror	r12
    5d40:	1a 95       	dec	r17
    5d42:	d1 f7       	brne	.-12     	; 0x5d38 <__stack+0x1d39>
    5d44:	01 e1       	ldi	r16, 0x11	; 17
    5d46:	88 0f       	add	r24, r24
    5d48:	99 1f       	adc	r25, r25
    5d4a:	aa 1f       	adc	r26, r26
    5d4c:	bb 1f       	adc	r27, r27
    5d4e:	0a 95       	dec	r16
    5d50:	d1 f7       	brne	.-12     	; 0x5d46 <__stack+0x1d47>
    5d52:	8c 29       	or	r24, r12
    5d54:	9d 29       	or	r25, r13
    5d56:	ae 29       	or	r26, r14
    5d58:	bf 29       	or	r27, r15
    5d5a:	68 96       	adiw	r28, 0x18	; 24
    5d5c:	88 83       	st	Y, r24
    5d5e:	99 83       	std	Y+1, r25	; 0x01
    5d60:	aa 83       	std	Y+2, r26	; 0x02
    5d62:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[137] = ROL(key->rk[131] + delta[4][27], 17);
    5d64:	8c 5d       	subi	r24, 0xDC	; 220
    5d66:	9a 40       	sbci	r25, 0x0A	; 10
    5d68:	a5 47       	sbci	r26, 0x75	; 117
    5d6a:	bc 40       	sbci	r27, 0x0C	; 12
    5d6c:	6c 01       	movw	r12, r24
    5d6e:	7d 01       	movw	r14, r26
    5d70:	6f e0       	ldi	r22, 0x0F	; 15
    5d72:	f6 94       	lsr	r15
    5d74:	e7 94       	ror	r14
    5d76:	d7 94       	ror	r13
    5d78:	c7 94       	ror	r12
    5d7a:	6a 95       	dec	r22
    5d7c:	d1 f7       	brne	.-12     	; 0x5d72 <__stack+0x1d73>
    5d7e:	71 e1       	ldi	r23, 0x11	; 17
    5d80:	88 0f       	add	r24, r24
    5d82:	99 1f       	adc	r25, r25
    5d84:	aa 1f       	adc	r26, r26
    5d86:	bb 1f       	adc	r27, r27
    5d88:	7a 95       	dec	r23
    5d8a:	d1 f7       	brne	.-12     	; 0x5d80 <__stack+0x1d81>
    5d8c:	8c 29       	or	r24, r12
    5d8e:	9d 29       	or	r25, r13
    5d90:	ae 29       	or	r26, r14
    5d92:	bf 29       	or	r27, r15
    5d94:	68 96       	adiw	r28, 0x18	; 24
    5d96:	88 83       	st	Y, r24
    5d98:	99 83       	std	Y+1, r25	; 0x01
    5d9a:	aa 83       	std	Y+2, r26	; 0x02
    5d9c:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[143] = ROL(key->rk[137] + delta[5][28], 17);
    5d9e:	80 56       	subi	r24, 0x60	; 96
    5da0:	92 4a       	sbci	r25, 0xA2	; 162
    5da2:	a7 48       	sbci	r26, 0x87	; 135
    5da4:	b3 45       	sbci	r27, 0x53	; 83
    5da6:	6c 01       	movw	r12, r24
    5da8:	7d 01       	movw	r14, r26
    5daa:	1f e0       	ldi	r17, 0x0F	; 15
    5dac:	f6 94       	lsr	r15
    5dae:	e7 94       	ror	r14
    5db0:	d7 94       	ror	r13
    5db2:	c7 94       	ror	r12
    5db4:	1a 95       	dec	r17
    5db6:	d1 f7       	brne	.-12     	; 0x5dac <__stack+0x1dad>
    5db8:	01 e1       	ldi	r16, 0x11	; 17
    5dba:	88 0f       	add	r24, r24
    5dbc:	99 1f       	adc	r25, r25
    5dbe:	aa 1f       	adc	r26, r26
    5dc0:	bb 1f       	adc	r27, r27
    5dc2:	0a 95       	dec	r16
    5dc4:	d1 f7       	brne	.-12     	; 0x5dba <__stack+0x1dbb>
    5dc6:	8c 29       	or	r24, r12
    5dc8:	9d 29       	or	r25, r13
    5dca:	ae 29       	or	r26, r14
    5dcc:	bf 29       	or	r27, r15
    5dce:	68 96       	adiw	r28, 0x18	; 24
    5dd0:	88 83       	st	Y, r24
    5dd2:	99 83       	std	Y+1, r25	; 0x01
    5dd4:	aa 83       	std	Y+2, r26	; 0x02
    5dd6:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[149] = ROL(key->rk[143] + delta[0][29], 17);
    5dd8:	85 5c       	subi	r24, 0xC5	; 197
    5dda:	92 40       	sbci	r25, 0x02	; 2
    5ddc:	a2 48       	sbci	r26, 0x82	; 130
    5dde:	b7 48       	sbci	r27, 0x87	; 135
    5de0:	6c 01       	movw	r12, r24
    5de2:	7d 01       	movw	r14, r26
    5de4:	6f e0       	ldi	r22, 0x0F	; 15
    5de6:	f6 94       	lsr	r15
    5de8:	e7 94       	ror	r14
    5dea:	d7 94       	ror	r13
    5dec:	c7 94       	ror	r12
    5dee:	6a 95       	dec	r22
    5df0:	d1 f7       	brne	.-12     	; 0x5de6 <__stack+0x1de7>
    5df2:	71 e1       	ldi	r23, 0x11	; 17
    5df4:	88 0f       	add	r24, r24
    5df6:	99 1f       	adc	r25, r25
    5df8:	aa 1f       	adc	r26, r26
    5dfa:	bb 1f       	adc	r27, r27
    5dfc:	7a 95       	dec	r23
    5dfe:	d1 f7       	brne	.-12     	; 0x5df4 <__stack+0x1df5>
    5e00:	8c 29       	or	r24, r12
    5e02:	9d 29       	or	r25, r13
    5e04:	ae 29       	or	r26, r14
    5e06:	bf 29       	or	r27, r15
    5e08:	68 96       	adiw	r28, 0x18	; 24
    5e0a:	88 83       	st	Y, r24
    5e0c:	99 83       	std	Y+1, r25	; 0x01
    5e0e:	aa 83       	std	Y+2, r26	; 0x02
    5e10:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[155] = ROL(key->rk[149] + delta[1][30], 17);
    5e12:	80 54       	subi	r24, 0x40	; 64
    5e14:	95 46       	sbci	r25, 0x65	; 101
    5e16:	a7 4e       	sbci	r26, 0xE7	; 231
    5e18:	be 46       	sbci	r27, 0x6E	; 110
    5e1a:	6c 01       	movw	r12, r24
    5e1c:	7d 01       	movw	r14, r26
    5e1e:	1f e0       	ldi	r17, 0x0F	; 15
    5e20:	f6 94       	lsr	r15
    5e22:	e7 94       	ror	r14
    5e24:	d7 94       	ror	r13
    5e26:	c7 94       	ror	r12
    5e28:	1a 95       	dec	r17
    5e2a:	d1 f7       	brne	.-12     	; 0x5e20 <__stack+0x1e21>
    5e2c:	01 e1       	ldi	r16, 0x11	; 17
    5e2e:	88 0f       	add	r24, r24
    5e30:	99 1f       	adc	r25, r25
    5e32:	aa 1f       	adc	r26, r26
    5e34:	bb 1f       	adc	r27, r27
    5e36:	0a 95       	dec	r16
    5e38:	d1 f7       	brne	.-12     	; 0x5e2e <__stack+0x1e2f>
    5e3a:	8c 29       	or	r24, r12
    5e3c:	9d 29       	or	r25, r13
    5e3e:	ae 29       	or	r26, r14
    5e40:	bf 29       	or	r27, r15
    5e42:	68 96       	adiw	r28, 0x18	; 24
    5e44:	88 83       	st	Y, r24
    5e46:	99 83       	std	Y+1, r25	; 0x01
    5e48:	aa 83       	std	Y+2, r26	; 0x02
    5e4a:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[161] = ROL(key->rk[155] + delta[2][31], 17);
    5e4c:	8b 5b       	subi	r24, 0xBB	; 187
    5e4e:	91 4c       	sbci	r25, 0xC1	; 193
    5e50:	ae 40       	sbci	r26, 0x0E	; 14
    5e52:	b3 4c       	sbci	r27, 0xC3	; 195
    5e54:	6c 01       	movw	r12, r24
    5e56:	7d 01       	movw	r14, r26
    5e58:	6f e0       	ldi	r22, 0x0F	; 15
    5e5a:	f6 94       	lsr	r15
    5e5c:	e7 94       	ror	r14
    5e5e:	d7 94       	ror	r13
    5e60:	c7 94       	ror	r12
    5e62:	6a 95       	dec	r22
    5e64:	d1 f7       	brne	.-12     	; 0x5e5a <__stack+0x1e5b>
    5e66:	71 e1       	ldi	r23, 0x11	; 17
    5e68:	88 0f       	add	r24, r24
    5e6a:	99 1f       	adc	r25, r25
    5e6c:	aa 1f       	adc	r26, r26
    5e6e:	bb 1f       	adc	r27, r27
    5e70:	7a 95       	dec	r23
    5e72:	d1 f7       	brne	.-12     	; 0x5e68 <__stack+0x1e69>
    5e74:	8c 29       	or	r24, r12
    5e76:	9d 29       	or	r25, r13
    5e78:	ae 29       	or	r26, r14
    5e7a:	bf 29       	or	r27, r15
    5e7c:	68 96       	adiw	r28, 0x18	; 24
    5e7e:	88 83       	st	Y, r24
    5e80:	99 83       	std	Y+1, r25	; 0x01
    5e82:	aa 83       	std	Y+2, r26	; 0x02
    5e84:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[167] = ROL(key->rk[161] + delta[3][ 0], 17);
    5e86:	84 51       	subi	r24, 0x14	; 20
    5e88:	9f 4c       	sbci	r25, 0xCF	; 207
    5e8a:	a0 42       	sbci	r26, 0x20	; 32
    5e8c:	b7 48       	sbci	r27, 0x87	; 135
    5e8e:	6c 01       	movw	r12, r24
    5e90:	7d 01       	movw	r14, r26
    5e92:	cf e0       	ldi	r28, 0x0F	; 15
    5e94:	f6 94       	lsr	r15
    5e96:	e7 94       	ror	r14
    5e98:	d7 94       	ror	r13
    5e9a:	c7 94       	ror	r12
    5e9c:	ca 95       	dec	r28
    5e9e:	d1 f7       	brne	.-12     	; 0x5e94 <__stack+0x1e95>
    5ea0:	d1 e1       	ldi	r29, 0x11	; 17
    5ea2:	88 0f       	add	r24, r24
    5ea4:	99 1f       	adc	r25, r25
    5ea6:	aa 1f       	adc	r26, r26
    5ea8:	bb 1f       	adc	r27, r27
    5eaa:	da 95       	dec	r29
    5eac:	d1 f7       	brne	.-12     	; 0x5ea2 <__stack+0x1ea3>
    5eae:	c8 2a       	or	r12, r24
    5eb0:	d9 2a       	or	r13, r25
    5eb2:	ea 2a       	or	r14, r26
    5eb4:	fb 2a       	or	r15, r27
    5eb6:	df 01       	movw	r26, r30
    5eb8:	a4 56       	subi	r26, 0x64	; 100
    5eba:	bd 4f       	sbci	r27, 0xFD	; 253
    5ebc:	0c 94 80 46 	jmp	0x8d00	; 0x8d00 <__stack+0x4d01>
		break;

	case 32:
		key->rk[  0] = ROL(loadU32(_mk[0]) + delta[0][ 0],  1);
    5ec0:	cd 90       	ld	r12, X+
    5ec2:	dd 90       	ld	r13, X+
    5ec4:	ed 90       	ld	r14, X+
    5ec6:	fc 90       	ld	r15, X
    5ec8:	13 97       	sbiw	r26, 0x03	; 3
    5eca:	85 e2       	ldi	r24, 0x25	; 37
    5ecc:	c8 1a       	sub	r12, r24
    5ece:	86 e1       	ldi	r24, 0x16	; 22
    5ed0:	d8 0a       	sbc	r13, r24
    5ed2:	80 e1       	ldi	r24, 0x10	; 16
    5ed4:	e8 0a       	sbc	r14, r24
    5ed6:	8c e3       	ldi	r24, 0x3C	; 60
    5ed8:	f8 0a       	sbc	r15, r24
    5eda:	cc 0c       	add	r12, r12
    5edc:	dd 1c       	adc	r13, r13
    5ede:	ee 1c       	adc	r14, r14
    5ee0:	ff 1c       	adc	r15, r15
    5ee2:	c1 1c       	adc	r12, r1
    5ee4:	c0 82       	st	Z, r12
    5ee6:	d1 82       	std	Z+1, r13	; 0x01
    5ee8:	e2 82       	std	Z+2, r14	; 0x02
    5eea:	f3 82       	std	Z+3, r15	; 0x03
		key->rk[  8] = ROL(key->rk[  0] + delta[1][ 3],  6);
    5eec:	46 01       	movw	r8, r12
    5eee:	57 01       	movw	r10, r14
    5ef0:	8e ee       	ldi	r24, 0xEE	; 238
    5ef2:	88 1a       	sub	r8, r24
    5ef4:	87 ea       	ldi	r24, 0xA7	; 167
    5ef6:	98 0a       	sbc	r9, r24
    5ef8:	8c ee       	ldi	r24, 0xEC	; 236
    5efa:	a8 0a       	sbc	r10, r24
    5efc:	8c ed       	ldi	r24, 0xDC	; 220
    5efe:	b8 0a       	sbc	r11, r24
    5f00:	75 01       	movw	r14, r10
    5f02:	64 01       	movw	r12, r8
    5f04:	9a e1       	ldi	r25, 0x1A	; 26
    5f06:	f6 94       	lsr	r15
    5f08:	e7 94       	ror	r14
    5f0a:	d7 94       	ror	r13
    5f0c:	c7 94       	ror	r12
    5f0e:	9a 95       	dec	r25
    5f10:	d1 f7       	brne	.-12     	; 0x5f06 <__stack+0x1f07>
    5f12:	66 e0       	ldi	r22, 0x06	; 6
    5f14:	88 0c       	add	r8, r8
    5f16:	99 1c       	adc	r9, r9
    5f18:	aa 1c       	adc	r10, r10
    5f1a:	bb 1c       	adc	r11, r11
    5f1c:	6a 95       	dec	r22
    5f1e:	d1 f7       	brne	.-12     	; 0x5f14 <__stack+0x1f15>
    5f20:	8c 28       	or	r8, r12
    5f22:	9d 28       	or	r9, r13
    5f24:	ae 28       	or	r10, r14
    5f26:	bf 28       	or	r11, r15
    5f28:	80 a2       	std	Z+32, r8	; 0x20
    5f2a:	91 a2       	std	Z+33, r9	; 0x21
    5f2c:	a2 a2       	std	Z+34, r10	; 0x22
    5f2e:	b3 a2       	std	Z+35, r11	; 0x23
		key->rk[ 16] = ROL(key->rk[  8] + delta[2][ 6], 13);
    5f30:	82 e6       	ldi	r24, 0x62	; 98
    5f32:	88 1a       	sub	r8, r24
    5f34:	8d ed       	ldi	r24, 0xDD	; 221
    5f36:	98 0a       	sbc	r9, r24
    5f38:	80 e6       	ldi	r24, 0x60	; 96
    5f3a:	a8 0a       	sbc	r10, r24
    5f3c:	87 e8       	ldi	r24, 0x87	; 135
    5f3e:	b8 0a       	sbc	r11, r24
    5f40:	75 01       	movw	r14, r10
    5f42:	64 01       	movw	r12, r8
    5f44:	73 e1       	ldi	r23, 0x13	; 19
    5f46:	f6 94       	lsr	r15
    5f48:	e7 94       	ror	r14
    5f4a:	d7 94       	ror	r13
    5f4c:	c7 94       	ror	r12
    5f4e:	7a 95       	dec	r23
    5f50:	d1 f7       	brne	.-12     	; 0x5f46 <__stack+0x1f47>
    5f52:	cd e0       	ldi	r28, 0x0D	; 13
    5f54:	88 0c       	add	r8, r8
    5f56:	99 1c       	adc	r9, r9
    5f58:	aa 1c       	adc	r10, r10
    5f5a:	bb 1c       	adc	r11, r11
    5f5c:	ca 95       	dec	r28
    5f5e:	d1 f7       	brne	.-12     	; 0x5f54 <__stack+0x1f55>
    5f60:	8c 28       	or	r8, r12
    5f62:	9d 28       	or	r9, r13
    5f64:	ae 28       	or	r10, r14
    5f66:	bf 28       	or	r11, r15
    5f68:	ef 01       	movw	r28, r30
    5f6a:	c0 5c       	subi	r28, 0xC0	; 192
    5f6c:	df 4f       	sbci	r29, 0xFF	; 255
    5f6e:	88 82       	st	Y, r8
    5f70:	99 82       	std	Y+1, r9	; 0x01
    5f72:	aa 82       	std	Y+2, r10	; 0x02
    5f74:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 24] = ROL(key->rk[ 16] + delta[4][ 4],  1);
    5f76:	75 01       	movw	r14, r10
    5f78:	64 01       	movw	r12, r8
    5f7a:	89 e1       	ldi	r24, 0x19	; 25
    5f7c:	c8 1a       	sub	r12, r24
    5f7e:	86 eb       	ldi	r24, 0xB6	; 182
    5f80:	d8 0a       	sbc	r13, r24
    5f82:	85 e1       	ldi	r24, 0x15	; 21
    5f84:	e8 0a       	sbc	r14, r24
    5f86:	8a ee       	ldi	r24, 0xEA	; 234
    5f88:	f8 0a       	sbc	r15, r24
    5f8a:	cc 0c       	add	r12, r12
    5f8c:	dd 1c       	adc	r13, r13
    5f8e:	ee 1c       	adc	r14, r14
    5f90:	ff 1c       	adc	r15, r15
    5f92:	c1 1c       	adc	r12, r1
    5f94:	a0 96       	adiw	r28, 0x20	; 32
    5f96:	c8 82       	st	Y, r12
    5f98:	d9 82       	std	Y+1, r13	; 0x01
    5f9a:	ea 82       	std	Y+2, r14	; 0x02
    5f9c:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 32] = ROL(key->rk[ 24] + delta[5][ 7],  6);
    5f9e:	46 01       	movw	r8, r12
    5fa0:	57 01       	movw	r10, r14
    5fa2:	8d e9       	ldi	r24, 0x9D	; 157
    5fa4:	88 1a       	sub	r8, r24
    5fa6:	8a ef       	ldi	r24, 0xFA	; 250
    5fa8:	98 0a       	sbc	r9, r24
    5faa:	82 e1       	ldi	r24, 0x12	; 18
    5fac:	a8 0a       	sbc	r10, r24
    5fae:	8d e3       	ldi	r24, 0x3D	; 61
    5fb0:	b8 0a       	sbc	r11, r24
    5fb2:	75 01       	movw	r14, r10
    5fb4:	64 01       	movw	r12, r8
    5fb6:	1a e1       	ldi	r17, 0x1A	; 26
    5fb8:	f6 94       	lsr	r15
    5fba:	e7 94       	ror	r14
    5fbc:	d7 94       	ror	r13
    5fbe:	c7 94       	ror	r12
    5fc0:	1a 95       	dec	r17
    5fc2:	d1 f7       	brne	.-12     	; 0x5fb8 <__stack+0x1fb9>
    5fc4:	06 e0       	ldi	r16, 0x06	; 6
    5fc6:	88 0c       	add	r8, r8
    5fc8:	99 1c       	adc	r9, r9
    5fca:	aa 1c       	adc	r10, r10
    5fcc:	bb 1c       	adc	r11, r11
    5fce:	0a 95       	dec	r16
    5fd0:	d1 f7       	brne	.-12     	; 0x5fc6 <__stack+0x1fc7>
    5fd2:	8c 28       	or	r8, r12
    5fd4:	9d 28       	or	r9, r13
    5fd6:	ae 28       	or	r10, r14
    5fd8:	bf 28       	or	r11, r15
    5fda:	a0 96       	adiw	r28, 0x20	; 32
    5fdc:	88 82       	st	Y, r8
    5fde:	99 82       	std	Y+1, r9	; 0x01
    5fe0:	aa 82       	std	Y+2, r10	; 0x02
    5fe2:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 40] = ROL(key->rk[ 32] + delta[6][10], 13);
    5fe4:	8f e7       	ldi	r24, 0x7F	; 127
    5fe6:	88 1a       	sub	r8, r24
    5fe8:	84 e5       	ldi	r24, 0x54	; 84
    5fea:	98 0a       	sbc	r9, r24
    5fec:	87 e3       	ldi	r24, 0x37	; 55
    5fee:	a8 0a       	sbc	r10, r24
    5ff0:	84 ec       	ldi	r24, 0xC4	; 196
    5ff2:	b8 0a       	sbc	r11, r24
    5ff4:	75 01       	movw	r14, r10
    5ff6:	64 01       	movw	r12, r8
    5ff8:	83 e1       	ldi	r24, 0x13	; 19
    5ffa:	f6 94       	lsr	r15
    5ffc:	e7 94       	ror	r14
    5ffe:	d7 94       	ror	r13
    6000:	c7 94       	ror	r12
    6002:	8a 95       	dec	r24
    6004:	d1 f7       	brne	.-12     	; 0x5ffa <__stack+0x1ffb>
    6006:	9d e0       	ldi	r25, 0x0D	; 13
    6008:	88 0c       	add	r8, r8
    600a:	99 1c       	adc	r9, r9
    600c:	aa 1c       	adc	r10, r10
    600e:	bb 1c       	adc	r11, r11
    6010:	9a 95       	dec	r25
    6012:	d1 f7       	brne	.-12     	; 0x6008 <__stack+0x2009>
    6014:	8c 28       	or	r8, r12
    6016:	9d 28       	or	r9, r13
    6018:	ae 28       	or	r10, r14
    601a:	bf 28       	or	r11, r15
    601c:	a0 96       	adiw	r28, 0x20	; 32
    601e:	88 82       	st	Y, r8
    6020:	99 82       	std	Y+1, r9	; 0x01
    6022:	aa 82       	std	Y+2, r10	; 0x02
    6024:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 48] = ROL(key->rk[ 40] + delta[0][ 8],  1);
    6026:	75 01       	movw	r14, r10
    6028:	64 01       	movw	r12, r8
    602a:	8d e3       	ldi	r24, 0x3D	; 61
    602c:	c8 1a       	sub	r12, r24
    602e:	84 e2       	ldi	r24, 0x24	; 36
    6030:	d8 0a       	sbc	r13, r24
    6032:	86 e1       	ldi	r24, 0x16	; 22
    6034:	e8 0a       	sbc	r14, r24
    6036:	80 e1       	ldi	r24, 0x10	; 16
    6038:	f8 0a       	sbc	r15, r24
    603a:	cc 0c       	add	r12, r12
    603c:	dd 1c       	adc	r13, r13
    603e:	ee 1c       	adc	r14, r14
    6040:	ff 1c       	adc	r15, r15
    6042:	c1 1c       	adc	r12, r1
    6044:	a0 96       	adiw	r28, 0x20	; 32
    6046:	c8 82       	st	Y, r12
    6048:	d9 82       	std	Y+1, r13	; 0x01
    604a:	ea 82       	std	Y+2, r14	; 0x02
    604c:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 56] = ROL(key->rk[ 48] + delta[1][11],  6);
    604e:	46 01       	movw	r8, r12
    6050:	57 01       	movw	r10, r14
    6052:	8d ed       	ldi	r24, 0xDD	; 221
    6054:	88 1a       	sub	r8, r24
    6056:	8d ee       	ldi	r24, 0xED	; 237
    6058:	98 0a       	sbc	r9, r24
    605a:	87 ea       	ldi	r24, 0xA7	; 167
    605c:	a8 0a       	sbc	r10, r24
    605e:	8c ee       	ldi	r24, 0xEC	; 236
    6060:	b8 0a       	sbc	r11, r24
    6062:	75 01       	movw	r14, r10
    6064:	64 01       	movw	r12, r8
    6066:	6a e1       	ldi	r22, 0x1A	; 26
    6068:	f6 94       	lsr	r15
    606a:	e7 94       	ror	r14
    606c:	d7 94       	ror	r13
    606e:	c7 94       	ror	r12
    6070:	6a 95       	dec	r22
    6072:	d1 f7       	brne	.-12     	; 0x6068 <__stack+0x2069>
    6074:	76 e0       	ldi	r23, 0x06	; 6
    6076:	88 0c       	add	r8, r8
    6078:	99 1c       	adc	r9, r9
    607a:	aa 1c       	adc	r10, r10
    607c:	bb 1c       	adc	r11, r11
    607e:	7a 95       	dec	r23
    6080:	d1 f7       	brne	.-12     	; 0x6076 <__stack+0x2077>
    6082:	8c 28       	or	r8, r12
    6084:	9d 28       	or	r9, r13
    6086:	ae 28       	or	r10, r14
    6088:	bf 28       	or	r11, r15
    608a:	a0 96       	adiw	r28, 0x20	; 32
    608c:	88 82       	st	Y, r8
    608e:	99 82       	std	Y+1, r9	; 0x01
    6090:	aa 82       	std	Y+2, r10	; 0x02
    6092:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 64] = ROL(key->rk[ 56] + delta[2][14], 13);
    6094:	88 e8       	ldi	r24, 0x88	; 136
    6096:	88 1a       	sub	r8, r24
    6098:	81 e6       	ldi	r24, 0x61	; 97
    609a:	98 0a       	sbc	r9, r24
    609c:	8d ed       	ldi	r24, 0xDD	; 221
    609e:	a8 0a       	sbc	r10, r24
    60a0:	80 e6       	ldi	r24, 0x60	; 96
    60a2:	b8 0a       	sbc	r11, r24
    60a4:	75 01       	movw	r14, r10
    60a6:	64 01       	movw	r12, r8
    60a8:	13 e1       	ldi	r17, 0x13	; 19
    60aa:	f6 94       	lsr	r15
    60ac:	e7 94       	ror	r14
    60ae:	d7 94       	ror	r13
    60b0:	c7 94       	ror	r12
    60b2:	1a 95       	dec	r17
    60b4:	d1 f7       	brne	.-12     	; 0x60aa <__stack+0x20ab>
    60b6:	0d e0       	ldi	r16, 0x0D	; 13
    60b8:	88 0c       	add	r8, r8
    60ba:	99 1c       	adc	r9, r9
    60bc:	aa 1c       	adc	r10, r10
    60be:	bb 1c       	adc	r11, r11
    60c0:	0a 95       	dec	r16
    60c2:	d1 f7       	brne	.-12     	; 0x60b8 <__stack+0x20b9>
    60c4:	8c 28       	or	r8, r12
    60c6:	9d 28       	or	r9, r13
    60c8:	ae 28       	or	r10, r14
    60ca:	bf 28       	or	r11, r15
    60cc:	a0 96       	adiw	r28, 0x20	; 32
    60ce:	88 82       	st	Y, r8
    60d0:	99 82       	std	Y+1, r9	; 0x01
    60d2:	aa 82       	std	Y+2, r10	; 0x02
    60d4:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 72] = ROL(key->rk[ 64] + delta[4][12],  1);
    60d6:	75 01       	movw	r14, r10
    60d8:	64 01       	movw	r12, r8
    60da:	8b ee       	ldi	r24, 0xEB	; 235
    60dc:	c8 1a       	sub	r12, r24
    60de:	88 e1       	ldi	r24, 0x18	; 24
    60e0:	d8 0a       	sbc	r13, r24
    60e2:	86 eb       	ldi	r24, 0xB6	; 182
    60e4:	e8 0a       	sbc	r14, r24
    60e6:	85 e1       	ldi	r24, 0x15	; 21
    60e8:	f8 0a       	sbc	r15, r24
    60ea:	cc 0c       	add	r12, r12
    60ec:	dd 1c       	adc	r13, r13
    60ee:	ee 1c       	adc	r14, r14
    60f0:	ff 1c       	adc	r15, r15
    60f2:	c1 1c       	adc	r12, r1
    60f4:	a0 96       	adiw	r28, 0x20	; 32
    60f6:	c8 82       	st	Y, r12
    60f8:	d9 82       	std	Y+1, r13	; 0x01
    60fa:	ea 82       	std	Y+2, r14	; 0x02
    60fc:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 80] = ROL(key->rk[ 72] + delta[5][15],  6);
    60fe:	46 01       	movw	r8, r12
    6100:	57 01       	movw	r10, r14
    6102:	8e e3       	ldi	r24, 0x3E	; 62
    6104:	88 1a       	sub	r8, r24
    6106:	8c e9       	ldi	r24, 0x9C	; 156
    6108:	98 0a       	sbc	r9, r24
    610a:	8a ef       	ldi	r24, 0xFA	; 250
    610c:	a8 0a       	sbc	r10, r24
    610e:	82 e1       	ldi	r24, 0x12	; 18
    6110:	b8 0a       	sbc	r11, r24
    6112:	75 01       	movw	r14, r10
    6114:	64 01       	movw	r12, r8
    6116:	8a e1       	ldi	r24, 0x1A	; 26
    6118:	f6 94       	lsr	r15
    611a:	e7 94       	ror	r14
    611c:	d7 94       	ror	r13
    611e:	c7 94       	ror	r12
    6120:	8a 95       	dec	r24
    6122:	d1 f7       	brne	.-12     	; 0x6118 <__stack+0x2119>
    6124:	96 e0       	ldi	r25, 0x06	; 6
    6126:	88 0c       	add	r8, r8
    6128:	99 1c       	adc	r9, r9
    612a:	aa 1c       	adc	r10, r10
    612c:	bb 1c       	adc	r11, r11
    612e:	9a 95       	dec	r25
    6130:	d1 f7       	brne	.-12     	; 0x6126 <__stack+0x2127>
    6132:	8c 28       	or	r8, r12
    6134:	9d 28       	or	r9, r13
    6136:	ae 28       	or	r10, r14
    6138:	bf 28       	or	r11, r15
    613a:	a0 96       	adiw	r28, 0x20	; 32
    613c:	88 82       	st	Y, r8
    613e:	99 82       	std	Y+1, r9	; 0x01
    6140:	aa 82       	std	Y+2, r10	; 0x02
    6142:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 88] = ROL(key->rk[ 80] + delta[6][18], 13);
    6144:	85 ec       	ldi	r24, 0xC5	; 197
    6146:	88 1a       	sub	r8, r24
    6148:	8e e7       	ldi	r24, 0x7E	; 126
    614a:	98 0a       	sbc	r9, r24
    614c:	84 e5       	ldi	r24, 0x54	; 84
    614e:	a8 0a       	sbc	r10, r24
    6150:	87 e3       	ldi	r24, 0x37	; 55
    6152:	b8 0a       	sbc	r11, r24
    6154:	75 01       	movw	r14, r10
    6156:	64 01       	movw	r12, r8
    6158:	63 e1       	ldi	r22, 0x13	; 19
    615a:	f6 94       	lsr	r15
    615c:	e7 94       	ror	r14
    615e:	d7 94       	ror	r13
    6160:	c7 94       	ror	r12
    6162:	6a 95       	dec	r22
    6164:	d1 f7       	brne	.-12     	; 0x615a <__stack+0x215b>
    6166:	7d e0       	ldi	r23, 0x0D	; 13
    6168:	88 0c       	add	r8, r8
    616a:	99 1c       	adc	r9, r9
    616c:	aa 1c       	adc	r10, r10
    616e:	bb 1c       	adc	r11, r11
    6170:	7a 95       	dec	r23
    6172:	d1 f7       	brne	.-12     	; 0x6168 <__stack+0x2169>
    6174:	8c 28       	or	r8, r12
    6176:	9d 28       	or	r9, r13
    6178:	ae 28       	or	r10, r14
    617a:	bf 28       	or	r11, r15
    617c:	a0 96       	adiw	r28, 0x20	; 32
    617e:	88 82       	st	Y, r8
    6180:	99 82       	std	Y+1, r9	; 0x01
    6182:	aa 82       	std	Y+2, r10	; 0x02
    6184:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 96] = ROL(key->rk[ 88] + delta[0][16],  1);
    6186:	75 01       	movw	r14, r10
    6188:	64 01       	movw	r12, r8
    618a:	81 e1       	ldi	r24, 0x11	; 17
    618c:	c8 1a       	sub	r12, r24
    618e:	8c e3       	ldi	r24, 0x3C	; 60
    6190:	d8 0a       	sbc	r13, r24
    6192:	84 e2       	ldi	r24, 0x24	; 36
    6194:	e8 0a       	sbc	r14, r24
    6196:	86 e1       	ldi	r24, 0x16	; 22
    6198:	f8 0a       	sbc	r15, r24
    619a:	cc 0c       	add	r12, r12
    619c:	dd 1c       	adc	r13, r13
    619e:	ee 1c       	adc	r14, r14
    61a0:	ff 1c       	adc	r15, r15
    61a2:	c1 1c       	adc	r12, r1
    61a4:	a0 96       	adiw	r28, 0x20	; 32
    61a6:	c8 82       	st	Y, r12
    61a8:	d9 82       	std	Y+1, r13	; 0x01
    61aa:	ea 82       	std	Y+2, r14	; 0x02
    61ac:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[104] = ROL(key->rk[ 96] + delta[1][19],  6);
    61ae:	46 01       	movw	r8, r12
    61b0:	57 01       	movw	r10, r14
    61b2:	8d ee       	ldi	r24, 0xED	; 237
    61b4:	88 1a       	sub	r8, r24
    61b6:	8c ed       	ldi	r24, 0xDC	; 220
    61b8:	98 0a       	sbc	r9, r24
    61ba:	8d ee       	ldi	r24, 0xED	; 237
    61bc:	a8 0a       	sbc	r10, r24
    61be:	87 ea       	ldi	r24, 0xA7	; 167
    61c0:	b8 0a       	sbc	r11, r24
    61c2:	75 01       	movw	r14, r10
    61c4:	64 01       	movw	r12, r8
    61c6:	1a e1       	ldi	r17, 0x1A	; 26
    61c8:	f6 94       	lsr	r15
    61ca:	e7 94       	ror	r14
    61cc:	d7 94       	ror	r13
    61ce:	c7 94       	ror	r12
    61d0:	1a 95       	dec	r17
    61d2:	d1 f7       	brne	.-12     	; 0x61c8 <__stack+0x21c9>
    61d4:	06 e0       	ldi	r16, 0x06	; 6
    61d6:	88 0c       	add	r8, r8
    61d8:	99 1c       	adc	r9, r9
    61da:	aa 1c       	adc	r10, r10
    61dc:	bb 1c       	adc	r11, r11
    61de:	0a 95       	dec	r16
    61e0:	d1 f7       	brne	.-12     	; 0x61d6 <__stack+0x21d7>
    61e2:	8c 28       	or	r8, r12
    61e4:	9d 28       	or	r9, r13
    61e6:	ae 28       	or	r10, r14
    61e8:	bf 28       	or	r11, r15
    61ea:	a0 96       	adiw	r28, 0x20	; 32
    61ec:	88 82       	st	Y, r8
    61ee:	99 82       	std	Y+1, r9	; 0x01
    61f0:	aa 82       	std	Y+2, r10	; 0x02
    61f2:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[112] = ROL(key->rk[104] + delta[2][22], 13);
    61f4:	81 e6       	ldi	r24, 0x61	; 97
    61f6:	88 1a       	sub	r8, r24
    61f8:	87 e8       	ldi	r24, 0x87	; 135
    61fa:	98 0a       	sbc	r9, r24
    61fc:	81 e6       	ldi	r24, 0x61	; 97
    61fe:	a8 0a       	sbc	r10, r24
    6200:	8d ed       	ldi	r24, 0xDD	; 221
    6202:	b8 0a       	sbc	r11, r24
    6204:	75 01       	movw	r14, r10
    6206:	64 01       	movw	r12, r8
    6208:	83 e1       	ldi	r24, 0x13	; 19
    620a:	f6 94       	lsr	r15
    620c:	e7 94       	ror	r14
    620e:	d7 94       	ror	r13
    6210:	c7 94       	ror	r12
    6212:	8a 95       	dec	r24
    6214:	d1 f7       	brne	.-12     	; 0x620a <__stack+0x220b>
    6216:	9d e0       	ldi	r25, 0x0D	; 13
    6218:	88 0c       	add	r8, r8
    621a:	99 1c       	adc	r9, r9
    621c:	aa 1c       	adc	r10, r10
    621e:	bb 1c       	adc	r11, r11
    6220:	9a 95       	dec	r25
    6222:	d1 f7       	brne	.-12     	; 0x6218 <__stack+0x2219>
    6224:	8c 28       	or	r8, r12
    6226:	9d 28       	or	r9, r13
    6228:	ae 28       	or	r10, r14
    622a:	bf 28       	or	r11, r15
    622c:	a0 96       	adiw	r28, 0x20	; 32
    622e:	88 82       	st	Y, r8
    6230:	99 82       	std	Y+1, r9	; 0x01
    6232:	aa 82       	std	Y+2, r10	; 0x02
    6234:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[120] = ROL(key->rk[112] + delta[4][20],  1);
    6236:	75 01       	movw	r14, r10
    6238:	64 01       	movw	r12, r8
    623a:	86 e1       	ldi	r24, 0x16	; 22
    623c:	c8 1a       	sub	r12, r24
    623e:	8a ee       	ldi	r24, 0xEA	; 234
    6240:	d8 0a       	sbc	r13, r24
    6242:	88 e1       	ldi	r24, 0x18	; 24
    6244:	e8 0a       	sbc	r14, r24
    6246:	86 eb       	ldi	r24, 0xB6	; 182
    6248:	f8 0a       	sbc	r15, r24
    624a:	cc 0c       	add	r12, r12
    624c:	dd 1c       	adc	r13, r13
    624e:	ee 1c       	adc	r14, r14
    6250:	ff 1c       	adc	r15, r15
    6252:	c1 1c       	adc	r12, r1
    6254:	a0 96       	adiw	r28, 0x20	; 32
    6256:	c8 82       	st	Y, r12
    6258:	d9 82       	std	Y+1, r13	; 0x01
    625a:	ea 82       	std	Y+2, r14	; 0x02
    625c:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[128] = ROL(key->rk[120] + delta[5][23],  6);
    625e:	46 01       	movw	r8, r12
    6260:	57 01       	movw	r10, r14
    6262:	83 e1       	ldi	r24, 0x13	; 19
    6264:	88 1a       	sub	r8, r24
    6266:	8d e3       	ldi	r24, 0x3D	; 61
    6268:	98 0a       	sbc	r9, r24
    626a:	8c e9       	ldi	r24, 0x9C	; 156
    626c:	a8 0a       	sbc	r10, r24
    626e:	8a ef       	ldi	r24, 0xFA	; 250
    6270:	b8 0a       	sbc	r11, r24
    6272:	75 01       	movw	r14, r10
    6274:	64 01       	movw	r12, r8
    6276:	6a e1       	ldi	r22, 0x1A	; 26
    6278:	f6 94       	lsr	r15
    627a:	e7 94       	ror	r14
    627c:	d7 94       	ror	r13
    627e:	c7 94       	ror	r12
    6280:	6a 95       	dec	r22
    6282:	d1 f7       	brne	.-12     	; 0x6278 <__stack+0x2279>
    6284:	76 e0       	ldi	r23, 0x06	; 6
    6286:	88 0c       	add	r8, r8
    6288:	99 1c       	adc	r9, r9
    628a:	aa 1c       	adc	r10, r10
    628c:	bb 1c       	adc	r11, r11
    628e:	7a 95       	dec	r23
    6290:	d1 f7       	brne	.-12     	; 0x6286 <__stack+0x2287>
    6292:	8c 28       	or	r8, r12
    6294:	9d 28       	or	r9, r13
    6296:	ae 28       	or	r10, r14
    6298:	bf 28       	or	r11, r15
    629a:	a0 96       	adiw	r28, 0x20	; 32
    629c:	88 82       	st	Y, r8
    629e:	99 82       	std	Y+1, r9	; 0x01
    62a0:	aa 82       	std	Y+2, r10	; 0x02
    62a2:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[136] = ROL(key->rk[128] + delta[6][26], 13);
    62a4:	88 e3       	ldi	r24, 0x38	; 56
    62a6:	88 1a       	sub	r8, r24
    62a8:	84 ec       	ldi	r24, 0xC4	; 196
    62aa:	98 0a       	sbc	r9, r24
    62ac:	8e e7       	ldi	r24, 0x7E	; 126
    62ae:	a8 0a       	sbc	r10, r24
    62b0:	84 e5       	ldi	r24, 0x54	; 84
    62b2:	b8 0a       	sbc	r11, r24
    62b4:	75 01       	movw	r14, r10
    62b6:	64 01       	movw	r12, r8
    62b8:	13 e1       	ldi	r17, 0x13	; 19
    62ba:	f6 94       	lsr	r15
    62bc:	e7 94       	ror	r14
    62be:	d7 94       	ror	r13
    62c0:	c7 94       	ror	r12
    62c2:	1a 95       	dec	r17
    62c4:	d1 f7       	brne	.-12     	; 0x62ba <__stack+0x22bb>
    62c6:	0d e0       	ldi	r16, 0x0D	; 13
    62c8:	88 0c       	add	r8, r8
    62ca:	99 1c       	adc	r9, r9
    62cc:	aa 1c       	adc	r10, r10
    62ce:	bb 1c       	adc	r11, r11
    62d0:	0a 95       	dec	r16
    62d2:	d1 f7       	brne	.-12     	; 0x62c8 <__stack+0x22c9>
    62d4:	8c 28       	or	r8, r12
    62d6:	9d 28       	or	r9, r13
    62d8:	ae 28       	or	r10, r14
    62da:	bf 28       	or	r11, r15
    62dc:	a0 96       	adiw	r28, 0x20	; 32
    62de:	88 82       	st	Y, r8
    62e0:	99 82       	std	Y+1, r9	; 0x01
    62e2:	aa 82       	std	Y+2, r10	; 0x02
    62e4:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[144] = ROL(key->rk[136] + delta[0][24],  1);
    62e6:	75 01       	movw	r14, r10
    62e8:	64 01       	movw	r12, r8
    62ea:	87 e1       	ldi	r24, 0x17	; 23
    62ec:	c8 1a       	sub	r12, r24
    62ee:	80 e1       	ldi	r24, 0x10	; 16
    62f0:	d8 0a       	sbc	r13, r24
    62f2:	8c e3       	ldi	r24, 0x3C	; 60
    62f4:	e8 0a       	sbc	r14, r24
    62f6:	84 e2       	ldi	r24, 0x24	; 36
    62f8:	f8 0a       	sbc	r15, r24
    62fa:	cc 0c       	add	r12, r12
    62fc:	dd 1c       	adc	r13, r13
    62fe:	ee 1c       	adc	r14, r14
    6300:	ff 1c       	adc	r15, r15
    6302:	c1 1c       	adc	r12, r1
    6304:	a0 96       	adiw	r28, 0x20	; 32
    6306:	c8 82       	st	Y, r12
    6308:	d9 82       	std	Y+1, r13	; 0x01
    630a:	ea 82       	std	Y+2, r14	; 0x02
    630c:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[152] = ROL(key->rk[144] + delta[1][27],  6);
    630e:	46 01       	movw	r8, r12
    6310:	57 01       	movw	r10, r14
    6312:	88 ea       	ldi	r24, 0xA8	; 168
    6314:	88 1a       	sub	r8, r24
    6316:	8c ee       	ldi	r24, 0xEC	; 236
    6318:	98 0a       	sbc	r9, r24
    631a:	8c ed       	ldi	r24, 0xDC	; 220
    631c:	a8 0a       	sbc	r10, r24
    631e:	8d ee       	ldi	r24, 0xED	; 237
    6320:	b8 0a       	sbc	r11, r24
    6322:	75 01       	movw	r14, r10
    6324:	64 01       	movw	r12, r8
    6326:	8a e1       	ldi	r24, 0x1A	; 26
    6328:	f6 94       	lsr	r15
    632a:	e7 94       	ror	r14
    632c:	d7 94       	ror	r13
    632e:	c7 94       	ror	r12
    6330:	8a 95       	dec	r24
    6332:	d1 f7       	brne	.-12     	; 0x6328 <__stack+0x2329>
    6334:	96 e0       	ldi	r25, 0x06	; 6
    6336:	88 0c       	add	r8, r8
    6338:	99 1c       	adc	r9, r9
    633a:	aa 1c       	adc	r10, r10
    633c:	bb 1c       	adc	r11, r11
    633e:	9a 95       	dec	r25
    6340:	d1 f7       	brne	.-12     	; 0x6336 <__stack+0x2337>
    6342:	8c 28       	or	r8, r12
    6344:	9d 28       	or	r9, r13
    6346:	ae 28       	or	r10, r14
    6348:	bf 28       	or	r11, r15
    634a:	a0 96       	adiw	r28, 0x20	; 32
    634c:	88 82       	st	Y, r8
    634e:	99 82       	std	Y+1, r9	; 0x01
    6350:	aa 82       	std	Y+2, r10	; 0x02
    6352:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[160] = ROL(key->rk[152] + delta[2][30], 13);
    6354:	8e ed       	ldi	r24, 0xDE	; 222
    6356:	88 1a       	sub	r8, r24
    6358:	80 e6       	ldi	r24, 0x60	; 96
    635a:	98 0a       	sbc	r9, r24
    635c:	87 e8       	ldi	r24, 0x87	; 135
    635e:	a8 0a       	sbc	r10, r24
    6360:	81 e6       	ldi	r24, 0x61	; 97
    6362:	b8 0a       	sbc	r11, r24
    6364:	75 01       	movw	r14, r10
    6366:	64 01       	movw	r12, r8
    6368:	63 e1       	ldi	r22, 0x13	; 19
    636a:	f6 94       	lsr	r15
    636c:	e7 94       	ror	r14
    636e:	d7 94       	ror	r13
    6370:	c7 94       	ror	r12
    6372:	6a 95       	dec	r22
    6374:	d1 f7       	brne	.-12     	; 0x636a <__stack+0x236b>
    6376:	7d e0       	ldi	r23, 0x0D	; 13
    6378:	88 0c       	add	r8, r8
    637a:	99 1c       	adc	r9, r9
    637c:	aa 1c       	adc	r10, r10
    637e:	bb 1c       	adc	r11, r11
    6380:	7a 95       	dec	r23
    6382:	d1 f7       	brne	.-12     	; 0x6378 <__stack+0x2379>
    6384:	8c 28       	or	r8, r12
    6386:	9d 28       	or	r9, r13
    6388:	ae 28       	or	r10, r14
    638a:	bf 28       	or	r11, r15
    638c:	a0 96       	adiw	r28, 0x20	; 32
    638e:	88 82       	st	Y, r8
    6390:	99 82       	std	Y+1, r9	; 0x01
    6392:	aa 82       	std	Y+2, r10	; 0x02
    6394:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[168] = ROL(key->rk[160] + delta[4][28],  1);
    6396:	75 01       	movw	r14, r10
    6398:	64 01       	movw	r12, r8
    639a:	87 eb       	ldi	r24, 0xB7	; 183
    639c:	c8 1a       	sub	r12, r24
    639e:	85 e1       	ldi	r24, 0x15	; 21
    63a0:	d8 0a       	sbc	r13, r24
    63a2:	8a ee       	ldi	r24, 0xEA	; 234
    63a4:	e8 0a       	sbc	r14, r24
    63a6:	88 e1       	ldi	r24, 0x18	; 24
    63a8:	f8 0a       	sbc	r15, r24
    63aa:	cc 0c       	add	r12, r12
    63ac:	dd 1c       	adc	r13, r13
    63ae:	ee 1c       	adc	r14, r14
    63b0:	ff 1c       	adc	r15, r15
    63b2:	c1 1c       	adc	r12, r1
    63b4:	a0 96       	adiw	r28, 0x20	; 32
    63b6:	c8 82       	st	Y, r12
    63b8:	d9 82       	std	Y+1, r13	; 0x01
    63ba:	ea 82       	std	Y+2, r14	; 0x02
    63bc:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[176] = ROL(key->rk[168] + delta[5][31],  6);
    63be:	46 01       	movw	r8, r12
    63c0:	57 01       	movw	r10, r14
    63c2:	8b ef       	ldi	r24, 0xFB	; 251
    63c4:	88 1a       	sub	r8, r24
    63c6:	82 e1       	ldi	r24, 0x12	; 18
    63c8:	98 0a       	sbc	r9, r24
    63ca:	8d e3       	ldi	r24, 0x3D	; 61
    63cc:	a8 0a       	sbc	r10, r24
    63ce:	8c e9       	ldi	r24, 0x9C	; 156
    63d0:	b8 0a       	sbc	r11, r24
    63d2:	75 01       	movw	r14, r10
    63d4:	64 01       	movw	r12, r8
    63d6:	1a e1       	ldi	r17, 0x1A	; 26
    63d8:	f6 94       	lsr	r15
    63da:	e7 94       	ror	r14
    63dc:	d7 94       	ror	r13
    63de:	c7 94       	ror	r12
    63e0:	1a 95       	dec	r17
    63e2:	d1 f7       	brne	.-12     	; 0x63d8 <__stack+0x23d9>
    63e4:	06 e0       	ldi	r16, 0x06	; 6
    63e6:	88 0c       	add	r8, r8
    63e8:	99 1c       	adc	r9, r9
    63ea:	aa 1c       	adc	r10, r10
    63ec:	bb 1c       	adc	r11, r11
    63ee:	0a 95       	dec	r16
    63f0:	d1 f7       	brne	.-12     	; 0x63e6 <__stack+0x23e7>
    63f2:	8c 28       	or	r8, r12
    63f4:	9d 28       	or	r9, r13
    63f6:	ae 28       	or	r10, r14
    63f8:	bf 28       	or	r11, r15
    63fa:	a0 96       	adiw	r28, 0x20	; 32
    63fc:	88 82       	st	Y, r8
    63fe:	99 82       	std	Y+1, r9	; 0x01
    6400:	aa 82       	std	Y+2, r10	; 0x02
    6402:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[184] = ROL(key->rk[176] + delta[6][ 2], 13);
    6404:	85 e5       	ldi	r24, 0x55	; 85
    6406:	88 1a       	sub	r8, r24
    6408:	87 e3       	ldi	r24, 0x37	; 55
    640a:	98 0a       	sbc	r9, r24
    640c:	84 ec       	ldi	r24, 0xC4	; 196
    640e:	a8 0a       	sbc	r10, r24
    6410:	8e e7       	ldi	r24, 0x7E	; 126
    6412:	b8 0a       	sbc	r11, r24
    6414:	75 01       	movw	r14, r10
    6416:	64 01       	movw	r12, r8
    6418:	83 e1       	ldi	r24, 0x13	; 19
    641a:	f6 94       	lsr	r15
    641c:	e7 94       	ror	r14
    641e:	d7 94       	ror	r13
    6420:	c7 94       	ror	r12
    6422:	8a 95       	dec	r24
    6424:	d1 f7       	brne	.-12     	; 0x641a <__stack+0x241b>
    6426:	9d e0       	ldi	r25, 0x0D	; 13
    6428:	88 0c       	add	r8, r8
    642a:	99 1c       	adc	r9, r9
    642c:	aa 1c       	adc	r10, r10
    642e:	bb 1c       	adc	r11, r11
    6430:	9a 95       	dec	r25
    6432:	d1 f7       	brne	.-12     	; 0x6428 <__stack+0x2429>
    6434:	c8 28       	or	r12, r8
    6436:	d9 28       	or	r13, r9
    6438:	ea 28       	or	r14, r10
    643a:	fb 28       	or	r15, r11
    643c:	a0 96       	adiw	r28, 0x20	; 32
    643e:	c8 82       	st	Y, r12
    6440:	d9 82       	std	Y+1, r13	; 0x01
    6442:	ea 82       	std	Y+2, r14	; 0x02
    6444:	fb 82       	std	Y+3, r15	; 0x03

		key->rk[  1] = ROL(loadU32(_mk[1]) + delta[0][ 1],  3);
    6446:	14 96       	adiw	r26, 0x04	; 4
    6448:	8d 90       	ld	r8, X+
    644a:	9d 90       	ld	r9, X+
    644c:	ad 90       	ld	r10, X+
    644e:	bc 90       	ld	r11, X
    6450:	17 97       	sbiw	r26, 0x07	; 7
    6452:	89 e4       	ldi	r24, 0x49	; 73
    6454:	88 1a       	sub	r8, r24
    6456:	8c e2       	ldi	r24, 0x2C	; 44
    6458:	98 0a       	sbc	r9, r24
    645a:	80 e2       	ldi	r24, 0x20	; 32
    645c:	a8 0a       	sbc	r10, r24
    645e:	88 e7       	ldi	r24, 0x78	; 120
    6460:	b8 0a       	sbc	r11, r24
    6462:	75 01       	movw	r14, r10
    6464:	64 01       	movw	r12, r8
    6466:	6d e1       	ldi	r22, 0x1D	; 29
    6468:	f6 94       	lsr	r15
    646a:	e7 94       	ror	r14
    646c:	d7 94       	ror	r13
    646e:	c7 94       	ror	r12
    6470:	6a 95       	dec	r22
    6472:	d1 f7       	brne	.-12     	; 0x6468 <__stack+0x2469>
    6474:	73 e0       	ldi	r23, 0x03	; 3
    6476:	88 0c       	add	r8, r8
    6478:	99 1c       	adc	r9, r9
    647a:	aa 1c       	adc	r10, r10
    647c:	bb 1c       	adc	r11, r11
    647e:	7a 95       	dec	r23
    6480:	d1 f7       	brne	.-12     	; 0x6476 <__stack+0x2477>
    6482:	8c 28       	or	r8, r12
    6484:	9d 28       	or	r9, r13
    6486:	ae 28       	or	r10, r14
    6488:	bf 28       	or	r11, r15
    648a:	84 82       	std	Z+4, r8	; 0x04
    648c:	95 82       	std	Z+5, r9	; 0x05
    648e:	a6 82       	std	Z+6, r10	; 0x06
    6490:	b7 82       	std	Z+7, r11	; 0x07
		key->rk[  9] = ROL(key->rk[  1] + delta[1][ 4], 11);
    6492:	8c ed       	ldi	r24, 0xDC	; 220
    6494:	88 1a       	sub	r8, r24
    6496:	8f e4       	ldi	r24, 0x4F	; 79
    6498:	98 0a       	sbc	r9, r24
    649a:	89 ed       	ldi	r24, 0xD9	; 217
    649c:	a8 0a       	sbc	r10, r24
    649e:	89 eb       	ldi	r24, 0xB9	; 185
    64a0:	b8 0a       	sbc	r11, r24
    64a2:	75 01       	movw	r14, r10
    64a4:	64 01       	movw	r12, r8
    64a6:	15 e1       	ldi	r17, 0x15	; 21
    64a8:	f6 94       	lsr	r15
    64aa:	e7 94       	ror	r14
    64ac:	d7 94       	ror	r13
    64ae:	c7 94       	ror	r12
    64b0:	1a 95       	dec	r17
    64b2:	d1 f7       	brne	.-12     	; 0x64a8 <__stack+0x24a9>
    64b4:	0b e0       	ldi	r16, 0x0B	; 11
    64b6:	88 0c       	add	r8, r8
    64b8:	99 1c       	adc	r9, r9
    64ba:	aa 1c       	adc	r10, r10
    64bc:	bb 1c       	adc	r11, r11
    64be:	0a 95       	dec	r16
    64c0:	d1 f7       	brne	.-12     	; 0x64b6 <__stack+0x24b7>
    64c2:	8c 28       	or	r8, r12
    64c4:	9d 28       	or	r9, r13
    64c6:	ae 28       	or	r10, r14
    64c8:	bf 28       	or	r11, r15
    64ca:	84 a2       	std	Z+36, r8	; 0x24
    64cc:	95 a2       	std	Z+37, r9	; 0x25
    64ce:	a6 a2       	std	Z+38, r10	; 0x26
    64d0:	b7 a2       	std	Z+39, r11	; 0x27
		key->rk[ 17] = ROL(key->rk[  9] + delta[2][ 7], 17);
    64d2:	84 ec       	ldi	r24, 0xC4	; 196
    64d4:	88 1a       	sub	r8, r24
    64d6:	8a eb       	ldi	r24, 0xBA	; 186
    64d8:	98 0a       	sbc	r9, r24
    64da:	81 ec       	ldi	r24, 0xC1	; 193
    64dc:	a8 0a       	sbc	r10, r24
    64de:	8e e0       	ldi	r24, 0x0E	; 14
    64e0:	b8 0a       	sbc	r11, r24
    64e2:	75 01       	movw	r14, r10
    64e4:	64 01       	movw	r12, r8
    64e6:	8f e0       	ldi	r24, 0x0F	; 15
    64e8:	f6 94       	lsr	r15
    64ea:	e7 94       	ror	r14
    64ec:	d7 94       	ror	r13
    64ee:	c7 94       	ror	r12
    64f0:	8a 95       	dec	r24
    64f2:	d1 f7       	brne	.-12     	; 0x64e8 <__stack+0x24e9>
    64f4:	91 e1       	ldi	r25, 0x11	; 17
    64f6:	88 0c       	add	r8, r8
    64f8:	99 1c       	adc	r9, r9
    64fa:	aa 1c       	adc	r10, r10
    64fc:	bb 1c       	adc	r11, r11
    64fe:	9a 95       	dec	r25
    6500:	d1 f7       	brne	.-12     	; 0x64f6 <__stack+0x24f7>
    6502:	8c 28       	or	r8, r12
    6504:	9d 28       	or	r9, r13
    6506:	ae 28       	or	r10, r14
    6508:	bf 28       	or	r11, r15
    650a:	cc 59       	subi	r28, 0x9C	; 156
    650c:	d2 40       	sbci	r29, 0x02	; 2
    650e:	88 82       	st	Y, r8
    6510:	99 82       	std	Y+1, r9	; 0x01
    6512:	aa 82       	std	Y+2, r10	; 0x02
    6514:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 25] = ROL(key->rk[ 17] + delta[4][ 5],  3);
    6516:	82 e3       	ldi	r24, 0x32	; 50
    6518:	88 1a       	sub	r8, r24
    651a:	8c e6       	ldi	r24, 0x6C	; 108
    651c:	98 0a       	sbc	r9, r24
    651e:	8b e2       	ldi	r24, 0x2B	; 43
    6520:	a8 0a       	sbc	r10, r24
    6522:	84 ed       	ldi	r24, 0xD4	; 212
    6524:	b8 0a       	sbc	r11, r24
    6526:	75 01       	movw	r14, r10
    6528:	64 01       	movw	r12, r8
    652a:	6d e1       	ldi	r22, 0x1D	; 29
    652c:	f6 94       	lsr	r15
    652e:	e7 94       	ror	r14
    6530:	d7 94       	ror	r13
    6532:	c7 94       	ror	r12
    6534:	6a 95       	dec	r22
    6536:	d1 f7       	brne	.-12     	; 0x652c <__stack+0x252d>
    6538:	73 e0       	ldi	r23, 0x03	; 3
    653a:	88 0c       	add	r8, r8
    653c:	99 1c       	adc	r9, r9
    653e:	aa 1c       	adc	r10, r10
    6540:	bb 1c       	adc	r11, r11
    6542:	7a 95       	dec	r23
    6544:	d1 f7       	brne	.-12     	; 0x653a <__stack+0x253b>
    6546:	8c 28       	or	r8, r12
    6548:	9d 28       	or	r9, r13
    654a:	ae 28       	or	r10, r14
    654c:	bf 28       	or	r11, r15
    654e:	a0 96       	adiw	r28, 0x20	; 32
    6550:	88 82       	st	Y, r8
    6552:	99 82       	std	Y+1, r9	; 0x01
    6554:	aa 82       	std	Y+2, r10	; 0x02
    6556:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 33] = ROL(key->rk[ 25] + delta[5][ 8], 11);
    6558:	89 e3       	ldi	r24, 0x39	; 57
    655a:	88 1a       	sub	r8, r24
    655c:	85 ef       	ldi	r24, 0xF5	; 245
    655e:	98 0a       	sbc	r9, r24
    6560:	85 e2       	ldi	r24, 0x25	; 37
    6562:	a8 0a       	sbc	r10, r24
    6564:	8a e7       	ldi	r24, 0x7A	; 122
    6566:	b8 0a       	sbc	r11, r24
    6568:	75 01       	movw	r14, r10
    656a:	64 01       	movw	r12, r8
    656c:	15 e1       	ldi	r17, 0x15	; 21
    656e:	f6 94       	lsr	r15
    6570:	e7 94       	ror	r14
    6572:	d7 94       	ror	r13
    6574:	c7 94       	ror	r12
    6576:	1a 95       	dec	r17
    6578:	d1 f7       	brne	.-12     	; 0x656e <__stack+0x256f>
    657a:	0b e0       	ldi	r16, 0x0B	; 11
    657c:	88 0c       	add	r8, r8
    657e:	99 1c       	adc	r9, r9
    6580:	aa 1c       	adc	r10, r10
    6582:	bb 1c       	adc	r11, r11
    6584:	0a 95       	dec	r16
    6586:	d1 f7       	brne	.-12     	; 0x657c <__stack+0x257d>
    6588:	8c 28       	or	r8, r12
    658a:	9d 28       	or	r9, r13
    658c:	ae 28       	or	r10, r14
    658e:	bf 28       	or	r11, r15
    6590:	a0 96       	adiw	r28, 0x20	; 32
    6592:	88 82       	st	Y, r8
    6594:	99 82       	std	Y+1, r9	; 0x01
    6596:	aa 82       	std	Y+2, r10	; 0x02
    6598:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 41] = ROL(key->rk[ 33] + delta[6][11], 17);
    659a:	8e ef       	ldi	r24, 0xFE	; 254
    659c:	88 1a       	sub	r8, r24
    659e:	88 ea       	ldi	r24, 0xA8	; 168
    65a0:	98 0a       	sbc	r9, r24
    65a2:	8e e6       	ldi	r24, 0x6E	; 110
    65a4:	a8 0a       	sbc	r10, r24
    65a6:	88 e8       	ldi	r24, 0x88	; 136
    65a8:	b8 0a       	sbc	r11, r24
    65aa:	75 01       	movw	r14, r10
    65ac:	64 01       	movw	r12, r8
    65ae:	8f e0       	ldi	r24, 0x0F	; 15
    65b0:	f6 94       	lsr	r15
    65b2:	e7 94       	ror	r14
    65b4:	d7 94       	ror	r13
    65b6:	c7 94       	ror	r12
    65b8:	8a 95       	dec	r24
    65ba:	d1 f7       	brne	.-12     	; 0x65b0 <__stack+0x25b1>
    65bc:	91 e1       	ldi	r25, 0x11	; 17
    65be:	88 0c       	add	r8, r8
    65c0:	99 1c       	adc	r9, r9
    65c2:	aa 1c       	adc	r10, r10
    65c4:	bb 1c       	adc	r11, r11
    65c6:	9a 95       	dec	r25
    65c8:	d1 f7       	brne	.-12     	; 0x65be <__stack+0x25bf>
    65ca:	8c 28       	or	r8, r12
    65cc:	9d 28       	or	r9, r13
    65ce:	ae 28       	or	r10, r14
    65d0:	bf 28       	or	r11, r15
    65d2:	a0 96       	adiw	r28, 0x20	; 32
    65d4:	88 82       	st	Y, r8
    65d6:	99 82       	std	Y+1, r9	; 0x01
    65d8:	aa 82       	std	Y+2, r10	; 0x02
    65da:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 49] = ROL(key->rk[ 41] + delta[0][ 9],  3);
    65dc:	89 e7       	ldi	r24, 0x79	; 121
    65de:	88 1a       	sub	r8, r24
    65e0:	88 e4       	ldi	r24, 0x48	; 72
    65e2:	98 0a       	sbc	r9, r24
    65e4:	8c e2       	ldi	r24, 0x2C	; 44
    65e6:	a8 0a       	sbc	r10, r24
    65e8:	80 e2       	ldi	r24, 0x20	; 32
    65ea:	b8 0a       	sbc	r11, r24
    65ec:	75 01       	movw	r14, r10
    65ee:	64 01       	movw	r12, r8
    65f0:	6d e1       	ldi	r22, 0x1D	; 29
    65f2:	f6 94       	lsr	r15
    65f4:	e7 94       	ror	r14
    65f6:	d7 94       	ror	r13
    65f8:	c7 94       	ror	r12
    65fa:	6a 95       	dec	r22
    65fc:	d1 f7       	brne	.-12     	; 0x65f2 <__stack+0x25f3>
    65fe:	73 e0       	ldi	r23, 0x03	; 3
    6600:	88 0c       	add	r8, r8
    6602:	99 1c       	adc	r9, r9
    6604:	aa 1c       	adc	r10, r10
    6606:	bb 1c       	adc	r11, r11
    6608:	7a 95       	dec	r23
    660a:	d1 f7       	brne	.-12     	; 0x6600 <__stack+0x2601>
    660c:	8c 28       	or	r8, r12
    660e:	9d 28       	or	r9, r13
    6610:	ae 28       	or	r10, r14
    6612:	bf 28       	or	r11, r15
    6614:	a0 96       	adiw	r28, 0x20	; 32
    6616:	88 82       	st	Y, r8
    6618:	99 82       	std	Y+1, r9	; 0x01
    661a:	aa 82       	std	Y+2, r10	; 0x02
    661c:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 57] = ROL(key->rk[ 49] + delta[1][12], 11);
    661e:	8a eb       	ldi	r24, 0xBA	; 186
    6620:	88 1a       	sub	r8, r24
    6622:	8b ed       	ldi	r24, 0xDB	; 219
    6624:	98 0a       	sbc	r9, r24
    6626:	8f e4       	ldi	r24, 0x4F	; 79
    6628:	a8 0a       	sbc	r10, r24
    662a:	89 ed       	ldi	r24, 0xD9	; 217
    662c:	b8 0a       	sbc	r11, r24
    662e:	75 01       	movw	r14, r10
    6630:	64 01       	movw	r12, r8
    6632:	15 e1       	ldi	r17, 0x15	; 21
    6634:	f6 94       	lsr	r15
    6636:	e7 94       	ror	r14
    6638:	d7 94       	ror	r13
    663a:	c7 94       	ror	r12
    663c:	1a 95       	dec	r17
    663e:	d1 f7       	brne	.-12     	; 0x6634 <__stack+0x2635>
    6640:	0b e0       	ldi	r16, 0x0B	; 11
    6642:	88 0c       	add	r8, r8
    6644:	99 1c       	adc	r9, r9
    6646:	aa 1c       	adc	r10, r10
    6648:	bb 1c       	adc	r11, r11
    664a:	0a 95       	dec	r16
    664c:	d1 f7       	brne	.-12     	; 0x6642 <__stack+0x2643>
    664e:	8c 28       	or	r8, r12
    6650:	9d 28       	or	r9, r13
    6652:	ae 28       	or	r10, r14
    6654:	bf 28       	or	r11, r15
    6656:	a0 96       	adiw	r28, 0x20	; 32
    6658:	88 82       	st	Y, r8
    665a:	99 82       	std	Y+1, r9	; 0x01
    665c:	aa 82       	std	Y+2, r10	; 0x02
    665e:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 65] = ROL(key->rk[ 57] + delta[2][15], 17);
    6660:	8f e0       	ldi	r24, 0x0F	; 15
    6662:	88 1a       	sub	r8, r24
    6664:	83 ec       	ldi	r24, 0xC3	; 195
    6666:	98 0a       	sbc	r9, r24
    6668:	8a eb       	ldi	r24, 0xBA	; 186
    666a:	a8 0a       	sbc	r10, r24
    666c:	81 ec       	ldi	r24, 0xC1	; 193
    666e:	b8 0a       	sbc	r11, r24
    6670:	75 01       	movw	r14, r10
    6672:	64 01       	movw	r12, r8
    6674:	8f e0       	ldi	r24, 0x0F	; 15
    6676:	f6 94       	lsr	r15
    6678:	e7 94       	ror	r14
    667a:	d7 94       	ror	r13
    667c:	c7 94       	ror	r12
    667e:	8a 95       	dec	r24
    6680:	d1 f7       	brne	.-12     	; 0x6676 <__stack+0x2677>
    6682:	91 e1       	ldi	r25, 0x11	; 17
    6684:	88 0c       	add	r8, r8
    6686:	99 1c       	adc	r9, r9
    6688:	aa 1c       	adc	r10, r10
    668a:	bb 1c       	adc	r11, r11
    668c:	9a 95       	dec	r25
    668e:	d1 f7       	brne	.-12     	; 0x6684 <__stack+0x2685>
    6690:	8c 28       	or	r8, r12
    6692:	9d 28       	or	r9, r13
    6694:	ae 28       	or	r10, r14
    6696:	bf 28       	or	r11, r15
    6698:	a0 96       	adiw	r28, 0x20	; 32
    669a:	88 82       	st	Y, r8
    669c:	99 82       	std	Y+1, r9	; 0x01
    669e:	aa 82       	std	Y+2, r10	; 0x02
    66a0:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 73] = ROL(key->rk[ 65] + delta[4][13],  3);
    66a2:	85 ed       	ldi	r24, 0xD5	; 213
    66a4:	88 1a       	sub	r8, r24
    66a6:	81 e3       	ldi	r24, 0x31	; 49
    66a8:	98 0a       	sbc	r9, r24
    66aa:	8c e6       	ldi	r24, 0x6C	; 108
    66ac:	a8 0a       	sbc	r10, r24
    66ae:	8b e2       	ldi	r24, 0x2B	; 43
    66b0:	b8 0a       	sbc	r11, r24
    66b2:	75 01       	movw	r14, r10
    66b4:	64 01       	movw	r12, r8
    66b6:	6d e1       	ldi	r22, 0x1D	; 29
    66b8:	f6 94       	lsr	r15
    66ba:	e7 94       	ror	r14
    66bc:	d7 94       	ror	r13
    66be:	c7 94       	ror	r12
    66c0:	6a 95       	dec	r22
    66c2:	d1 f7       	brne	.-12     	; 0x66b8 <__stack+0x26b9>
    66c4:	73 e0       	ldi	r23, 0x03	; 3
    66c6:	88 0c       	add	r8, r8
    66c8:	99 1c       	adc	r9, r9
    66ca:	aa 1c       	adc	r10, r10
    66cc:	bb 1c       	adc	r11, r11
    66ce:	7a 95       	dec	r23
    66d0:	d1 f7       	brne	.-12     	; 0x66c6 <__stack+0x26c7>
    66d2:	8c 28       	or	r8, r12
    66d4:	9d 28       	or	r9, r13
    66d6:	ae 28       	or	r10, r14
    66d8:	bf 28       	or	r11, r15
    66da:	a0 96       	adiw	r28, 0x20	; 32
    66dc:	88 82       	st	Y, r8
    66de:	99 82       	std	Y+1, r9	; 0x01
    66e0:	aa 82       	std	Y+2, r10	; 0x02
    66e2:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 81] = ROL(key->rk[ 73] + delta[5][16], 11);
    66e4:	8b e7       	ldi	r24, 0x7B	; 123
    66e6:	88 1a       	sub	r8, r24
    66e8:	88 e3       	ldi	r24, 0x38	; 56
    66ea:	98 0a       	sbc	r9, r24
    66ec:	85 ef       	ldi	r24, 0xF5	; 245
    66ee:	a8 0a       	sbc	r10, r24
    66f0:	85 e2       	ldi	r24, 0x25	; 37
    66f2:	b8 0a       	sbc	r11, r24
    66f4:	75 01       	movw	r14, r10
    66f6:	64 01       	movw	r12, r8
    66f8:	15 e1       	ldi	r17, 0x15	; 21
    66fa:	f6 94       	lsr	r15
    66fc:	e7 94       	ror	r14
    66fe:	d7 94       	ror	r13
    6700:	c7 94       	ror	r12
    6702:	1a 95       	dec	r17
    6704:	d1 f7       	brne	.-12     	; 0x66fa <__stack+0x26fb>
    6706:	0b e0       	ldi	r16, 0x0B	; 11
    6708:	88 0c       	add	r8, r8
    670a:	99 1c       	adc	r9, r9
    670c:	aa 1c       	adc	r10, r10
    670e:	bb 1c       	adc	r11, r11
    6710:	0a 95       	dec	r16
    6712:	d1 f7       	brne	.-12     	; 0x6708 <__stack+0x2709>
    6714:	8c 28       	or	r8, r12
    6716:	9d 28       	or	r9, r13
    6718:	ae 28       	or	r10, r14
    671a:	bf 28       	or	r11, r15
    671c:	a0 96       	adiw	r28, 0x20	; 32
    671e:	88 82       	st	Y, r8
    6720:	99 82       	std	Y+1, r9	; 0x01
    6722:	aa 82       	std	Y+2, r10	; 0x02
    6724:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 89] = ROL(key->rk[ 81] + delta[6][19], 17);
    6726:	89 e8       	ldi	r24, 0x89	; 137
    6728:	88 1a       	sub	r8, r24
    672a:	8d ef       	ldi	r24, 0xFD	; 253
    672c:	98 0a       	sbc	r9, r24
    672e:	88 ea       	ldi	r24, 0xA8	; 168
    6730:	a8 0a       	sbc	r10, r24
    6732:	8e e6       	ldi	r24, 0x6E	; 110
    6734:	b8 0a       	sbc	r11, r24
    6736:	75 01       	movw	r14, r10
    6738:	64 01       	movw	r12, r8
    673a:	8f e0       	ldi	r24, 0x0F	; 15
    673c:	f6 94       	lsr	r15
    673e:	e7 94       	ror	r14
    6740:	d7 94       	ror	r13
    6742:	c7 94       	ror	r12
    6744:	8a 95       	dec	r24
    6746:	d1 f7       	brne	.-12     	; 0x673c <__stack+0x273d>
    6748:	91 e1       	ldi	r25, 0x11	; 17
    674a:	88 0c       	add	r8, r8
    674c:	99 1c       	adc	r9, r9
    674e:	aa 1c       	adc	r10, r10
    6750:	bb 1c       	adc	r11, r11
    6752:	9a 95       	dec	r25
    6754:	d1 f7       	brne	.-12     	; 0x674a <__stack+0x274b>
    6756:	8c 28       	or	r8, r12
    6758:	9d 28       	or	r9, r13
    675a:	ae 28       	or	r10, r14
    675c:	bf 28       	or	r11, r15
    675e:	a0 96       	adiw	r28, 0x20	; 32
    6760:	88 82       	st	Y, r8
    6762:	99 82       	std	Y+1, r9	; 0x01
    6764:	aa 82       	std	Y+2, r10	; 0x02
    6766:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 97] = ROL(key->rk[ 89] + delta[0][17],  3);
    6768:	81 e2       	ldi	r24, 0x21	; 33
    676a:	88 1a       	sub	r8, r24
    676c:	88 e7       	ldi	r24, 0x78	; 120
    676e:	98 0a       	sbc	r9, r24
    6770:	88 e4       	ldi	r24, 0x48	; 72
    6772:	a8 0a       	sbc	r10, r24
    6774:	8c e2       	ldi	r24, 0x2C	; 44
    6776:	b8 0a       	sbc	r11, r24
    6778:	75 01       	movw	r14, r10
    677a:	64 01       	movw	r12, r8
    677c:	6d e1       	ldi	r22, 0x1D	; 29
    677e:	f6 94       	lsr	r15
    6780:	e7 94       	ror	r14
    6782:	d7 94       	ror	r13
    6784:	c7 94       	ror	r12
    6786:	6a 95       	dec	r22
    6788:	d1 f7       	brne	.-12     	; 0x677e <__stack+0x277f>
    678a:	73 e0       	ldi	r23, 0x03	; 3
    678c:	88 0c       	add	r8, r8
    678e:	99 1c       	adc	r9, r9
    6790:	aa 1c       	adc	r10, r10
    6792:	bb 1c       	adc	r11, r11
    6794:	7a 95       	dec	r23
    6796:	d1 f7       	brne	.-12     	; 0x678c <__stack+0x278d>
    6798:	8c 28       	or	r8, r12
    679a:	9d 28       	or	r9, r13
    679c:	ae 28       	or	r10, r14
    679e:	bf 28       	or	r11, r15
    67a0:	a0 96       	adiw	r28, 0x20	; 32
    67a2:	88 82       	st	Y, r8
    67a4:	99 82       	std	Y+1, r9	; 0x01
    67a6:	aa 82       	std	Y+2, r10	; 0x02
    67a8:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[105] = ROL(key->rk[ 97] + delta[1][20], 11);
    67aa:	8a ed       	ldi	r24, 0xDA	; 218
    67ac:	88 1a       	sub	r8, r24
    67ae:	89 eb       	ldi	r24, 0xB9	; 185
    67b0:	98 0a       	sbc	r9, r24
    67b2:	8b ed       	ldi	r24, 0xDB	; 219
    67b4:	a8 0a       	sbc	r10, r24
    67b6:	8f e4       	ldi	r24, 0x4F	; 79
    67b8:	b8 0a       	sbc	r11, r24
    67ba:	75 01       	movw	r14, r10
    67bc:	64 01       	movw	r12, r8
    67be:	15 e1       	ldi	r17, 0x15	; 21
    67c0:	f6 94       	lsr	r15
    67c2:	e7 94       	ror	r14
    67c4:	d7 94       	ror	r13
    67c6:	c7 94       	ror	r12
    67c8:	1a 95       	dec	r17
    67ca:	d1 f7       	brne	.-12     	; 0x67c0 <__stack+0x27c1>
    67cc:	0b e0       	ldi	r16, 0x0B	; 11
    67ce:	88 0c       	add	r8, r8
    67d0:	99 1c       	adc	r9, r9
    67d2:	aa 1c       	adc	r10, r10
    67d4:	bb 1c       	adc	r11, r11
    67d6:	0a 95       	dec	r16
    67d8:	d1 f7       	brne	.-12     	; 0x67ce <__stack+0x27cf>
    67da:	8c 28       	or	r8, r12
    67dc:	9d 28       	or	r9, r13
    67de:	ae 28       	or	r10, r14
    67e0:	bf 28       	or	r11, r15
    67e2:	a0 96       	adiw	r28, 0x20	; 32
    67e4:	88 82       	st	Y, r8
    67e6:	99 82       	std	Y+1, r9	; 0x01
    67e8:	aa 82       	std	Y+2, r10	; 0x02
    67ea:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[113] = ROL(key->rk[105] + delta[2][23], 17);
    67ec:	82 ec       	ldi	r24, 0xC2	; 194
    67ee:	88 1a       	sub	r8, r24
    67f0:	8e e0       	ldi	r24, 0x0E	; 14
    67f2:	98 0a       	sbc	r9, r24
    67f4:	83 ec       	ldi	r24, 0xC3	; 195
    67f6:	a8 0a       	sbc	r10, r24
    67f8:	8a eb       	ldi	r24, 0xBA	; 186
    67fa:	b8 0a       	sbc	r11, r24
    67fc:	75 01       	movw	r14, r10
    67fe:	64 01       	movw	r12, r8
    6800:	8f e0       	ldi	r24, 0x0F	; 15
    6802:	f6 94       	lsr	r15
    6804:	e7 94       	ror	r14
    6806:	d7 94       	ror	r13
    6808:	c7 94       	ror	r12
    680a:	8a 95       	dec	r24
    680c:	d1 f7       	brne	.-12     	; 0x6802 <__stack+0x2803>
    680e:	91 e1       	ldi	r25, 0x11	; 17
    6810:	88 0c       	add	r8, r8
    6812:	99 1c       	adc	r9, r9
    6814:	aa 1c       	adc	r10, r10
    6816:	bb 1c       	adc	r11, r11
    6818:	9a 95       	dec	r25
    681a:	d1 f7       	brne	.-12     	; 0x6810 <__stack+0x2811>
    681c:	8c 28       	or	r8, r12
    681e:	9d 28       	or	r9, r13
    6820:	ae 28       	or	r10, r14
    6822:	bf 28       	or	r11, r15
    6824:	a0 96       	adiw	r28, 0x20	; 32
    6826:	88 82       	st	Y, r8
    6828:	99 82       	std	Y+1, r9	; 0x01
    682a:	aa 82       	std	Y+2, r10	; 0x02
    682c:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[121] = ROL(key->rk[113] + delta[4][21],  3);
    682e:	8c e2       	ldi	r24, 0x2C	; 44
    6830:	88 1a       	sub	r8, r24
    6832:	84 ed       	ldi	r24, 0xD4	; 212
    6834:	98 0a       	sbc	r9, r24
    6836:	81 e3       	ldi	r24, 0x31	; 49
    6838:	a8 0a       	sbc	r10, r24
    683a:	8c e6       	ldi	r24, 0x6C	; 108
    683c:	b8 0a       	sbc	r11, r24
    683e:	75 01       	movw	r14, r10
    6840:	64 01       	movw	r12, r8
    6842:	6d e1       	ldi	r22, 0x1D	; 29
    6844:	f6 94       	lsr	r15
    6846:	e7 94       	ror	r14
    6848:	d7 94       	ror	r13
    684a:	c7 94       	ror	r12
    684c:	6a 95       	dec	r22
    684e:	d1 f7       	brne	.-12     	; 0x6844 <__stack+0x2845>
    6850:	73 e0       	ldi	r23, 0x03	; 3
    6852:	88 0c       	add	r8, r8
    6854:	99 1c       	adc	r9, r9
    6856:	aa 1c       	adc	r10, r10
    6858:	bb 1c       	adc	r11, r11
    685a:	7a 95       	dec	r23
    685c:	d1 f7       	brne	.-12     	; 0x6852 <__stack+0x2853>
    685e:	8c 28       	or	r8, r12
    6860:	9d 28       	or	r9, r13
    6862:	ae 28       	or	r10, r14
    6864:	bf 28       	or	r11, r15
    6866:	a0 96       	adiw	r28, 0x20	; 32
    6868:	88 82       	st	Y, r8
    686a:	99 82       	std	Y+1, r9	; 0x01
    686c:	aa 82       	std	Y+2, r10	; 0x02
    686e:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[129] = ROL(key->rk[121] + delta[5][24], 11);
    6870:	86 e2       	ldi	r24, 0x26	; 38
    6872:	88 1a       	sub	r8, r24
    6874:	8a e7       	ldi	r24, 0x7A	; 122
    6876:	98 0a       	sbc	r9, r24
    6878:	88 e3       	ldi	r24, 0x38	; 56
    687a:	a8 0a       	sbc	r10, r24
    687c:	85 ef       	ldi	r24, 0xF5	; 245
    687e:	b8 0a       	sbc	r11, r24
    6880:	75 01       	movw	r14, r10
    6882:	64 01       	movw	r12, r8
    6884:	15 e1       	ldi	r17, 0x15	; 21
    6886:	f6 94       	lsr	r15
    6888:	e7 94       	ror	r14
    688a:	d7 94       	ror	r13
    688c:	c7 94       	ror	r12
    688e:	1a 95       	dec	r17
    6890:	d1 f7       	brne	.-12     	; 0x6886 <__stack+0x2887>
    6892:	0b e0       	ldi	r16, 0x0B	; 11
    6894:	88 0c       	add	r8, r8
    6896:	99 1c       	adc	r9, r9
    6898:	aa 1c       	adc	r10, r10
    689a:	bb 1c       	adc	r11, r11
    689c:	0a 95       	dec	r16
    689e:	d1 f7       	brne	.-12     	; 0x6894 <__stack+0x2895>
    68a0:	8c 28       	or	r8, r12
    68a2:	9d 28       	or	r9, r13
    68a4:	ae 28       	or	r10, r14
    68a6:	bf 28       	or	r11, r15
    68a8:	a0 96       	adiw	r28, 0x20	; 32
    68aa:	88 82       	st	Y, r8
    68ac:	99 82       	std	Y+1, r9	; 0x01
    68ae:	aa 82       	std	Y+2, r10	; 0x02
    68b0:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[137] = ROL(key->rk[129] + delta[6][27], 17);
    68b2:	8f e6       	ldi	r24, 0x6F	; 111
    68b4:	88 1a       	sub	r8, r24
    68b6:	88 e8       	ldi	r24, 0x88	; 136
    68b8:	98 0a       	sbc	r9, r24
    68ba:	8d ef       	ldi	r24, 0xFD	; 253
    68bc:	a8 0a       	sbc	r10, r24
    68be:	88 ea       	ldi	r24, 0xA8	; 168
    68c0:	b8 0a       	sbc	r11, r24
    68c2:	75 01       	movw	r14, r10
    68c4:	64 01       	movw	r12, r8
    68c6:	8f e0       	ldi	r24, 0x0F	; 15
    68c8:	f6 94       	lsr	r15
    68ca:	e7 94       	ror	r14
    68cc:	d7 94       	ror	r13
    68ce:	c7 94       	ror	r12
    68d0:	8a 95       	dec	r24
    68d2:	d1 f7       	brne	.-12     	; 0x68c8 <__stack+0x28c9>
    68d4:	91 e1       	ldi	r25, 0x11	; 17
    68d6:	88 0c       	add	r8, r8
    68d8:	99 1c       	adc	r9, r9
    68da:	aa 1c       	adc	r10, r10
    68dc:	bb 1c       	adc	r11, r11
    68de:	9a 95       	dec	r25
    68e0:	d1 f7       	brne	.-12     	; 0x68d6 <__stack+0x28d7>
    68e2:	8c 28       	or	r8, r12
    68e4:	9d 28       	or	r9, r13
    68e6:	ae 28       	or	r10, r14
    68e8:	bf 28       	or	r11, r15
    68ea:	a0 96       	adiw	r28, 0x20	; 32
    68ec:	88 82       	st	Y, r8
    68ee:	99 82       	std	Y+1, r9	; 0x01
    68f0:	aa 82       	std	Y+2, r10	; 0x02
    68f2:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[145] = ROL(key->rk[137] + delta[0][25],  3);
    68f4:	8d e2       	ldi	r24, 0x2D	; 45
    68f6:	88 1a       	sub	r8, r24
    68f8:	80 e2       	ldi	r24, 0x20	; 32
    68fa:	98 0a       	sbc	r9, r24
    68fc:	88 e7       	ldi	r24, 0x78	; 120
    68fe:	a8 0a       	sbc	r10, r24
    6900:	88 e4       	ldi	r24, 0x48	; 72
    6902:	b8 0a       	sbc	r11, r24
    6904:	75 01       	movw	r14, r10
    6906:	64 01       	movw	r12, r8
    6908:	6d e1       	ldi	r22, 0x1D	; 29
    690a:	f6 94       	lsr	r15
    690c:	e7 94       	ror	r14
    690e:	d7 94       	ror	r13
    6910:	c7 94       	ror	r12
    6912:	6a 95       	dec	r22
    6914:	d1 f7       	brne	.-12     	; 0x690a <__stack+0x290b>
    6916:	73 e0       	ldi	r23, 0x03	; 3
    6918:	88 0c       	add	r8, r8
    691a:	99 1c       	adc	r9, r9
    691c:	aa 1c       	adc	r10, r10
    691e:	bb 1c       	adc	r11, r11
    6920:	7a 95       	dec	r23
    6922:	d1 f7       	brne	.-12     	; 0x6918 <__stack+0x2919>
    6924:	8c 28       	or	r8, r12
    6926:	9d 28       	or	r9, r13
    6928:	ae 28       	or	r10, r14
    692a:	bf 28       	or	r11, r15
    692c:	a0 96       	adiw	r28, 0x20	; 32
    692e:	88 82       	st	Y, r8
    6930:	99 82       	std	Y+1, r9	; 0x01
    6932:	aa 82       	std	Y+2, r10	; 0x02
    6934:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[153] = ROL(key->rk[145] + delta[1][28], 11);
    6936:	80 e5       	ldi	r24, 0x50	; 80
    6938:	88 1a       	sub	r8, r24
    693a:	89 ed       	ldi	r24, 0xD9	; 217
    693c:	98 0a       	sbc	r9, r24
    693e:	89 eb       	ldi	r24, 0xB9	; 185
    6940:	a8 0a       	sbc	r10, r24
    6942:	8b ed       	ldi	r24, 0xDB	; 219
    6944:	b8 0a       	sbc	r11, r24
    6946:	75 01       	movw	r14, r10
    6948:	64 01       	movw	r12, r8
    694a:	15 e1       	ldi	r17, 0x15	; 21
    694c:	f6 94       	lsr	r15
    694e:	e7 94       	ror	r14
    6950:	d7 94       	ror	r13
    6952:	c7 94       	ror	r12
    6954:	1a 95       	dec	r17
    6956:	d1 f7       	brne	.-12     	; 0x694c <__stack+0x294d>
    6958:	0b e0       	ldi	r16, 0x0B	; 11
    695a:	88 0c       	add	r8, r8
    695c:	99 1c       	adc	r9, r9
    695e:	aa 1c       	adc	r10, r10
    6960:	bb 1c       	adc	r11, r11
    6962:	0a 95       	dec	r16
    6964:	d1 f7       	brne	.-12     	; 0x695a <__stack+0x295b>
    6966:	8c 28       	or	r8, r12
    6968:	9d 28       	or	r9, r13
    696a:	ae 28       	or	r10, r14
    696c:	bf 28       	or	r11, r15
    696e:	a0 96       	adiw	r28, 0x20	; 32
    6970:	88 82       	st	Y, r8
    6972:	99 82       	std	Y+1, r9	; 0x01
    6974:	aa 82       	std	Y+2, r10	; 0x02
    6976:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[161] = ROL(key->rk[153] + delta[2][31], 17);
    6978:	8b eb       	ldi	r24, 0xBB	; 187
    697a:	88 1a       	sub	r8, r24
    697c:	81 ec       	ldi	r24, 0xC1	; 193
    697e:	98 0a       	sbc	r9, r24
    6980:	8e e0       	ldi	r24, 0x0E	; 14
    6982:	a8 0a       	sbc	r10, r24
    6984:	83 ec       	ldi	r24, 0xC3	; 195
    6986:	b8 0a       	sbc	r11, r24
    6988:	75 01       	movw	r14, r10
    698a:	64 01       	movw	r12, r8
    698c:	8f e0       	ldi	r24, 0x0F	; 15
    698e:	f6 94       	lsr	r15
    6990:	e7 94       	ror	r14
    6992:	d7 94       	ror	r13
    6994:	c7 94       	ror	r12
    6996:	8a 95       	dec	r24
    6998:	d1 f7       	brne	.-12     	; 0x698e <__stack+0x298f>
    699a:	91 e1       	ldi	r25, 0x11	; 17
    699c:	88 0c       	add	r8, r8
    699e:	99 1c       	adc	r9, r9
    69a0:	aa 1c       	adc	r10, r10
    69a2:	bb 1c       	adc	r11, r11
    69a4:	9a 95       	dec	r25
    69a6:	d1 f7       	brne	.-12     	; 0x699c <__stack+0x299d>
    69a8:	8c 28       	or	r8, r12
    69aa:	9d 28       	or	r9, r13
    69ac:	ae 28       	or	r10, r14
    69ae:	bf 28       	or	r11, r15
    69b0:	a0 96       	adiw	r28, 0x20	; 32
    69b2:	88 82       	st	Y, r8
    69b4:	99 82       	std	Y+1, r9	; 0x01
    69b6:	aa 82       	std	Y+2, r10	; 0x02
    69b8:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[169] = ROL(key->rk[161] + delta[4][29],  3);
    69ba:	8d e6       	ldi	r24, 0x6D	; 109
    69bc:	88 1a       	sub	r8, r24
    69be:	8b e2       	ldi	r24, 0x2B	; 43
    69c0:	98 0a       	sbc	r9, r24
    69c2:	84 ed       	ldi	r24, 0xD4	; 212
    69c4:	a8 0a       	sbc	r10, r24
    69c6:	81 e3       	ldi	r24, 0x31	; 49
    69c8:	b8 0a       	sbc	r11, r24
    69ca:	75 01       	movw	r14, r10
    69cc:	64 01       	movw	r12, r8
    69ce:	6d e1       	ldi	r22, 0x1D	; 29
    69d0:	f6 94       	lsr	r15
    69d2:	e7 94       	ror	r14
    69d4:	d7 94       	ror	r13
    69d6:	c7 94       	ror	r12
    69d8:	6a 95       	dec	r22
    69da:	d1 f7       	brne	.-12     	; 0x69d0 <__stack+0x29d1>
    69dc:	73 e0       	ldi	r23, 0x03	; 3
    69de:	88 0c       	add	r8, r8
    69e0:	99 1c       	adc	r9, r9
    69e2:	aa 1c       	adc	r10, r10
    69e4:	bb 1c       	adc	r11, r11
    69e6:	7a 95       	dec	r23
    69e8:	d1 f7       	brne	.-12     	; 0x69de <__stack+0x29df>
    69ea:	8c 28       	or	r8, r12
    69ec:	9d 28       	or	r9, r13
    69ee:	ae 28       	or	r10, r14
    69f0:	bf 28       	or	r11, r15
    69f2:	a0 96       	adiw	r28, 0x20	; 32
    69f4:	88 82       	st	Y, r8
    69f6:	99 82       	std	Y+1, r9	; 0x01
    69f8:	aa 82       	std	Y+2, r10	; 0x02
    69fa:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[177] = ROL(key->rk[169] + delta[5][ 0], 11);
    69fc:	86 ef       	ldi	r24, 0xF6	; 246
    69fe:	88 1a       	sub	r8, r24
    6a00:	85 e2       	ldi	r24, 0x25	; 37
    6a02:	98 0a       	sbc	r9, r24
    6a04:	8a e7       	ldi	r24, 0x7A	; 122
    6a06:	a8 0a       	sbc	r10, r24
    6a08:	88 e3       	ldi	r24, 0x38	; 56
    6a0a:	b8 0a       	sbc	r11, r24
    6a0c:	75 01       	movw	r14, r10
    6a0e:	64 01       	movw	r12, r8
    6a10:	15 e1       	ldi	r17, 0x15	; 21
    6a12:	f6 94       	lsr	r15
    6a14:	e7 94       	ror	r14
    6a16:	d7 94       	ror	r13
    6a18:	c7 94       	ror	r12
    6a1a:	1a 95       	dec	r17
    6a1c:	d1 f7       	brne	.-12     	; 0x6a12 <__stack+0x2a13>
    6a1e:	0b e0       	ldi	r16, 0x0B	; 11
    6a20:	88 0c       	add	r8, r8
    6a22:	99 1c       	adc	r9, r9
    6a24:	aa 1c       	adc	r10, r10
    6a26:	bb 1c       	adc	r11, r11
    6a28:	0a 95       	dec	r16
    6a2a:	d1 f7       	brne	.-12     	; 0x6a20 <__stack+0x2a21>
    6a2c:	8c 28       	or	r8, r12
    6a2e:	9d 28       	or	r9, r13
    6a30:	ae 28       	or	r10, r14
    6a32:	bf 28       	or	r11, r15
    6a34:	a0 96       	adiw	r28, 0x20	; 32
    6a36:	88 82       	st	Y, r8
    6a38:	99 82       	std	Y+1, r9	; 0x01
    6a3a:	aa 82       	std	Y+2, r10	; 0x02
    6a3c:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[185] = ROL(key->rk[177] + delta[6][ 3], 17);
    6a3e:	89 ea       	ldi	r24, 0xA9	; 169
    6a40:	88 1a       	sub	r8, r24
    6a42:	8e e6       	ldi	r24, 0x6E	; 110
    6a44:	98 0a       	sbc	r9, r24
    6a46:	88 e8       	ldi	r24, 0x88	; 136
    6a48:	a8 0a       	sbc	r10, r24
    6a4a:	8d ef       	ldi	r24, 0xFD	; 253
    6a4c:	b8 0a       	sbc	r11, r24
    6a4e:	75 01       	movw	r14, r10
    6a50:	64 01       	movw	r12, r8
    6a52:	8f e0       	ldi	r24, 0x0F	; 15
    6a54:	f6 94       	lsr	r15
    6a56:	e7 94       	ror	r14
    6a58:	d7 94       	ror	r13
    6a5a:	c7 94       	ror	r12
    6a5c:	8a 95       	dec	r24
    6a5e:	d1 f7       	brne	.-12     	; 0x6a54 <__stack+0x2a55>
    6a60:	91 e1       	ldi	r25, 0x11	; 17
    6a62:	88 0c       	add	r8, r8
    6a64:	99 1c       	adc	r9, r9
    6a66:	aa 1c       	adc	r10, r10
    6a68:	bb 1c       	adc	r11, r11
    6a6a:	9a 95       	dec	r25
    6a6c:	d1 f7       	brne	.-12     	; 0x6a62 <__stack+0x2a63>
    6a6e:	c8 28       	or	r12, r8
    6a70:	d9 28       	or	r13, r9
    6a72:	ea 28       	or	r14, r10
    6a74:	fb 28       	or	r15, r11
    6a76:	a0 96       	adiw	r28, 0x20	; 32
    6a78:	c8 82       	st	Y, r12
    6a7a:	d9 82       	std	Y+1, r13	; 0x01
    6a7c:	ea 82       	std	Y+2, r14	; 0x02
    6a7e:	fb 82       	std	Y+3, r15	; 0x03

		key->rk[  2] = ROL(loadU32(_mk[2]) + delta[0][ 2],  6);
    6a80:	18 96       	adiw	r26, 0x08	; 8
    6a82:	8d 90       	ld	r8, X+
    6a84:	9d 90       	ld	r9, X+
    6a86:	ad 90       	ld	r10, X+
    6a88:	bc 90       	ld	r11, X
    6a8a:	1b 97       	sbiw	r26, 0x0b	; 11
    6a8c:	81 e9       	ldi	r24, 0x91	; 145
    6a8e:	88 1a       	sub	r8, r24
    6a90:	88 e5       	ldi	r24, 0x58	; 88
    6a92:	98 0a       	sbc	r9, r24
    6a94:	80 e4       	ldi	r24, 0x40	; 64
    6a96:	a8 0a       	sbc	r10, r24
    6a98:	80 ef       	ldi	r24, 0xF0	; 240
    6a9a:	b8 0a       	sbc	r11, r24
    6a9c:	75 01       	movw	r14, r10
    6a9e:	64 01       	movw	r12, r8
    6aa0:	6a e1       	ldi	r22, 0x1A	; 26
    6aa2:	f6 94       	lsr	r15
    6aa4:	e7 94       	ror	r14
    6aa6:	d7 94       	ror	r13
    6aa8:	c7 94       	ror	r12
    6aaa:	6a 95       	dec	r22
    6aac:	d1 f7       	brne	.-12     	; 0x6aa2 <__stack+0x2aa3>
    6aae:	76 e0       	ldi	r23, 0x06	; 6
    6ab0:	88 0c       	add	r8, r8
    6ab2:	99 1c       	adc	r9, r9
    6ab4:	aa 1c       	adc	r10, r10
    6ab6:	bb 1c       	adc	r11, r11
    6ab8:	7a 95       	dec	r23
    6aba:	d1 f7       	brne	.-12     	; 0x6ab0 <__stack+0x2ab1>
    6abc:	8c 28       	or	r8, r12
    6abe:	9d 28       	or	r9, r13
    6ac0:	ae 28       	or	r10, r14
    6ac2:	bf 28       	or	r11, r15
    6ac4:	80 86       	std	Z+8, r8	; 0x08
    6ac6:	91 86       	std	Z+9, r9	; 0x09
    6ac8:	a2 86       	std	Z+10, r10	; 0x0a
    6aca:	b3 86       	std	Z+11, r11	; 0x0b
		key->rk[ 10] = ROL(key->rk[  2] + delta[1][ 5], 13);
    6acc:	88 eb       	ldi	r24, 0xB8	; 184
    6ace:	88 1a       	sub	r8, r24
    6ad0:	8f e9       	ldi	r24, 0x9F	; 159
    6ad2:	98 0a       	sbc	r9, r24
    6ad4:	82 eb       	ldi	r24, 0xB2	; 178
    6ad6:	a8 0a       	sbc	r10, r24
    6ad8:	83 e7       	ldi	r24, 0x73	; 115
    6ada:	b8 0a       	sbc	r11, r24
    6adc:	75 01       	movw	r14, r10
    6ade:	64 01       	movw	r12, r8
    6ae0:	13 e1       	ldi	r17, 0x13	; 19
    6ae2:	f6 94       	lsr	r15
    6ae4:	e7 94       	ror	r14
    6ae6:	d7 94       	ror	r13
    6ae8:	c7 94       	ror	r12
    6aea:	1a 95       	dec	r17
    6aec:	d1 f7       	brne	.-12     	; 0x6ae2 <__stack+0x2ae3>
    6aee:	0d e0       	ldi	r16, 0x0D	; 13
    6af0:	88 0c       	add	r8, r8
    6af2:	99 1c       	adc	r9, r9
    6af4:	aa 1c       	adc	r10, r10
    6af6:	bb 1c       	adc	r11, r11
    6af8:	0a 95       	dec	r16
    6afa:	d1 f7       	brne	.-12     	; 0x6af0 <__stack+0x2af1>
    6afc:	8c 28       	or	r8, r12
    6afe:	9d 28       	or	r9, r13
    6b00:	ae 28       	or	r10, r14
    6b02:	bf 28       	or	r11, r15
    6b04:	80 a6       	std	Z+40, r8	; 0x28
    6b06:	91 a6       	std	Z+41, r9	; 0x29
    6b08:	a2 a6       	std	Z+42, r10	; 0x2a
    6b0a:	b3 a6       	std	Z+43, r11	; 0x2b
		key->rk[ 18] = ROL(key->rk[ 10] + delta[3][ 3],  1);
    6b0c:	75 01       	movw	r14, r10
    6b0e:	64 01       	movw	r12, r8
    6b10:	8d e9       	ldi	r24, 0x9D	; 157
    6b12:	c8 1a       	sub	r12, r24
    6b14:	88 e7       	ldi	r24, 0x78	; 120
    6b16:	d8 0a       	sbc	r13, r24
    6b18:	86 e0       	ldi	r24, 0x06	; 6
    6b1a:	e8 0a       	sbc	r14, r24
    6b1c:	89 e3       	ldi	r24, 0x39	; 57
    6b1e:	f8 0a       	sbc	r15, r24
    6b20:	cc 0c       	add	r12, r12
    6b22:	dd 1c       	adc	r13, r13
    6b24:	ee 1c       	adc	r14, r14
    6b26:	ff 1c       	adc	r15, r15
    6b28:	c1 1c       	adc	r12, r1
    6b2a:	cc 59       	subi	r28, 0x9C	; 156
    6b2c:	d2 40       	sbci	r29, 0x02	; 2
    6b2e:	c8 82       	st	Y, r12
    6b30:	d9 82       	std	Y+1, r13	; 0x01
    6b32:	ea 82       	std	Y+2, r14	; 0x02
    6b34:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 26] = ROL(key->rk[ 18] + delta[4][ 6],  6);
    6b36:	46 01       	movw	r8, r12
    6b38:	57 01       	movw	r10, r14
    6b3a:	84 e6       	ldi	r24, 0x64	; 100
    6b3c:	88 1a       	sub	r8, r24
    6b3e:	88 ed       	ldi	r24, 0xD8	; 216
    6b40:	98 0a       	sbc	r9, r24
    6b42:	86 e5       	ldi	r24, 0x56	; 86
    6b44:	a8 0a       	sbc	r10, r24
    6b46:	88 ea       	ldi	r24, 0xA8	; 168
    6b48:	b8 0a       	sbc	r11, r24
    6b4a:	75 01       	movw	r14, r10
    6b4c:	64 01       	movw	r12, r8
    6b4e:	8a e1       	ldi	r24, 0x1A	; 26
    6b50:	f6 94       	lsr	r15
    6b52:	e7 94       	ror	r14
    6b54:	d7 94       	ror	r13
    6b56:	c7 94       	ror	r12
    6b58:	8a 95       	dec	r24
    6b5a:	d1 f7       	brne	.-12     	; 0x6b50 <__stack+0x2b51>
    6b5c:	96 e0       	ldi	r25, 0x06	; 6
    6b5e:	88 0c       	add	r8, r8
    6b60:	99 1c       	adc	r9, r9
    6b62:	aa 1c       	adc	r10, r10
    6b64:	bb 1c       	adc	r11, r11
    6b66:	9a 95       	dec	r25
    6b68:	d1 f7       	brne	.-12     	; 0x6b5e <__stack+0x2b5f>
    6b6a:	8c 28       	or	r8, r12
    6b6c:	9d 28       	or	r9, r13
    6b6e:	ae 28       	or	r10, r14
    6b70:	bf 28       	or	r11, r15
    6b72:	a0 96       	adiw	r28, 0x20	; 32
    6b74:	88 82       	st	Y, r8
    6b76:	99 82       	std	Y+1, r9	; 0x01
    6b78:	aa 82       	std	Y+2, r10	; 0x02
    6b7a:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 34] = ROL(key->rk[ 26] + delta[5][ 9], 13);
    6b7c:	81 e7       	ldi	r24, 0x71	; 113
    6b7e:	88 1a       	sub	r8, r24
    6b80:	8a ee       	ldi	r24, 0xEA	; 234
    6b82:	98 0a       	sbc	r9, r24
    6b84:	8b e4       	ldi	r24, 0x4B	; 75
    6b86:	a8 0a       	sbc	r10, r24
    6b88:	84 ef       	ldi	r24, 0xF4	; 244
    6b8a:	b8 0a       	sbc	r11, r24
    6b8c:	75 01       	movw	r14, r10
    6b8e:	64 01       	movw	r12, r8
    6b90:	63 e1       	ldi	r22, 0x13	; 19
    6b92:	f6 94       	lsr	r15
    6b94:	e7 94       	ror	r14
    6b96:	d7 94       	ror	r13
    6b98:	c7 94       	ror	r12
    6b9a:	6a 95       	dec	r22
    6b9c:	d1 f7       	brne	.-12     	; 0x6b92 <__stack+0x2b93>
    6b9e:	7d e0       	ldi	r23, 0x0D	; 13
    6ba0:	88 0c       	add	r8, r8
    6ba2:	99 1c       	adc	r9, r9
    6ba4:	aa 1c       	adc	r10, r10
    6ba6:	bb 1c       	adc	r11, r11
    6ba8:	7a 95       	dec	r23
    6baa:	d1 f7       	brne	.-12     	; 0x6ba0 <__stack+0x2ba1>
    6bac:	8c 28       	or	r8, r12
    6bae:	9d 28       	or	r9, r13
    6bb0:	ae 28       	or	r10, r14
    6bb2:	bf 28       	or	r11, r15
    6bb4:	a0 96       	adiw	r28, 0x20	; 32
    6bb6:	88 82       	st	Y, r8
    6bb8:	99 82       	std	Y+1, r9	; 0x01
    6bba:	aa 82       	std	Y+2, r10	; 0x02
    6bbc:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 42] = ROL(key->rk[ 34] + delta[7][ 7],  1);
    6bbe:	75 01       	movw	r14, r10
    6bc0:	64 01       	movw	r12, r8
    6bc2:	8e e0       	ldi	r24, 0x0E	; 14
    6bc4:	c8 1a       	sub	r12, r24
    6bc6:	84 e5       	ldi	r24, 0x54	; 84
    6bc8:	d8 0a       	sbc	r13, r24
    6bca:	8b ef       	ldi	r24, 0xFB	; 251
    6bcc:	e8 0a       	sbc	r14, r24
    6bce:	8d e1       	ldi	r24, 0x1D	; 29
    6bd0:	f8 0a       	sbc	r15, r24
    6bd2:	cc 0c       	add	r12, r12
    6bd4:	dd 1c       	adc	r13, r13
    6bd6:	ee 1c       	adc	r14, r14
    6bd8:	ff 1c       	adc	r15, r15
    6bda:	c1 1c       	adc	r12, r1
    6bdc:	a0 96       	adiw	r28, 0x20	; 32
    6bde:	c8 82       	st	Y, r12
    6be0:	d9 82       	std	Y+1, r13	; 0x01
    6be2:	ea 82       	std	Y+2, r14	; 0x02
    6be4:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 50] = ROL(key->rk[ 42] + delta[0][10],  6);
    6be6:	46 01       	movw	r8, r12
    6be8:	57 01       	movw	r10, r14
    6bea:	81 ef       	ldi	r24, 0xF1	; 241
    6bec:	88 1a       	sub	r8, r24
    6bee:	80 e9       	ldi	r24, 0x90	; 144
    6bf0:	98 0a       	sbc	r9, r24
    6bf2:	88 e5       	ldi	r24, 0x58	; 88
    6bf4:	a8 0a       	sbc	r10, r24
    6bf6:	80 e4       	ldi	r24, 0x40	; 64
    6bf8:	b8 0a       	sbc	r11, r24
    6bfa:	75 01       	movw	r14, r10
    6bfc:	64 01       	movw	r12, r8
    6bfe:	1a e1       	ldi	r17, 0x1A	; 26
    6c00:	f6 94       	lsr	r15
    6c02:	e7 94       	ror	r14
    6c04:	d7 94       	ror	r13
    6c06:	c7 94       	ror	r12
    6c08:	1a 95       	dec	r17
    6c0a:	d1 f7       	brne	.-12     	; 0x6c00 <__stack+0x2c01>
    6c0c:	06 e0       	ldi	r16, 0x06	; 6
    6c0e:	88 0c       	add	r8, r8
    6c10:	99 1c       	adc	r9, r9
    6c12:	aa 1c       	adc	r10, r10
    6c14:	bb 1c       	adc	r11, r11
    6c16:	0a 95       	dec	r16
    6c18:	d1 f7       	brne	.-12     	; 0x6c0e <__stack+0x2c0f>
    6c1a:	8c 28       	or	r8, r12
    6c1c:	9d 28       	or	r9, r13
    6c1e:	ae 28       	or	r10, r14
    6c20:	bf 28       	or	r11, r15
    6c22:	a0 96       	adiw	r28, 0x20	; 32
    6c24:	88 82       	st	Y, r8
    6c26:	99 82       	std	Y+1, r9	; 0x01
    6c28:	aa 82       	std	Y+2, r10	; 0x02
    6c2a:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 58] = ROL(key->rk[ 50] + delta[1][13], 13);
    6c2c:	84 e7       	ldi	r24, 0x74	; 116
    6c2e:	88 1a       	sub	r8, r24
    6c30:	87 eb       	ldi	r24, 0xB7	; 183
    6c32:	98 0a       	sbc	r9, r24
    6c34:	8f e9       	ldi	r24, 0x9F	; 159
    6c36:	a8 0a       	sbc	r10, r24
    6c38:	82 eb       	ldi	r24, 0xB2	; 178
    6c3a:	b8 0a       	sbc	r11, r24
    6c3c:	75 01       	movw	r14, r10
    6c3e:	64 01       	movw	r12, r8
    6c40:	83 e1       	ldi	r24, 0x13	; 19
    6c42:	f6 94       	lsr	r15
    6c44:	e7 94       	ror	r14
    6c46:	d7 94       	ror	r13
    6c48:	c7 94       	ror	r12
    6c4a:	8a 95       	dec	r24
    6c4c:	d1 f7       	brne	.-12     	; 0x6c42 <__stack+0x2c43>
    6c4e:	9d e0       	ldi	r25, 0x0D	; 13
    6c50:	88 0c       	add	r8, r8
    6c52:	99 1c       	adc	r9, r9
    6c54:	aa 1c       	adc	r10, r10
    6c56:	bb 1c       	adc	r11, r11
    6c58:	9a 95       	dec	r25
    6c5a:	d1 f7       	brne	.-12     	; 0x6c50 <__stack+0x2c51>
    6c5c:	8c 28       	or	r8, r12
    6c5e:	9d 28       	or	r9, r13
    6c60:	ae 28       	or	r10, r14
    6c62:	bf 28       	or	r11, r15
    6c64:	a0 96       	adiw	r28, 0x20	; 32
    6c66:	88 82       	st	Y, r8
    6c68:	99 82       	std	Y+1, r9	; 0x01
    6c6a:	aa 82       	std	Y+2, r10	; 0x02
    6c6c:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 66] = ROL(key->rk[ 58] + delta[3][11],  1);
    6c6e:	75 01       	movw	r14, r10
    6c70:	64 01       	movw	r12, r8
    6c72:	8a e3       	ldi	r24, 0x3A	; 58
    6c74:	c8 1a       	sub	r12, r24
    6c76:	8c e9       	ldi	r24, 0x9C	; 156
    6c78:	d8 0a       	sbc	r13, r24
    6c7a:	88 e7       	ldi	r24, 0x78	; 120
    6c7c:	e8 0a       	sbc	r14, r24
    6c7e:	86 e0       	ldi	r24, 0x06	; 6
    6c80:	f8 0a       	sbc	r15, r24
    6c82:	cc 0c       	add	r12, r12
    6c84:	dd 1c       	adc	r13, r13
    6c86:	ee 1c       	adc	r14, r14
    6c88:	ff 1c       	adc	r15, r15
    6c8a:	c1 1c       	adc	r12, r1
    6c8c:	a0 96       	adiw	r28, 0x20	; 32
    6c8e:	c8 82       	st	Y, r12
    6c90:	d9 82       	std	Y+1, r13	; 0x01
    6c92:	ea 82       	std	Y+2, r14	; 0x02
    6c94:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 74] = ROL(key->rk[ 66] + delta[4][14],  6);
    6c96:	46 01       	movw	r8, r12
    6c98:	57 01       	movw	r10, r14
    6c9a:	89 ea       	ldi	r24, 0xA9	; 169
    6c9c:	88 1a       	sub	r8, r24
    6c9e:	83 e6       	ldi	r24, 0x63	; 99
    6ca0:	98 0a       	sbc	r9, r24
    6ca2:	88 ed       	ldi	r24, 0xD8	; 216
    6ca4:	a8 0a       	sbc	r10, r24
    6ca6:	86 e5       	ldi	r24, 0x56	; 86
    6ca8:	b8 0a       	sbc	r11, r24
    6caa:	75 01       	movw	r14, r10
    6cac:	64 01       	movw	r12, r8
    6cae:	6a e1       	ldi	r22, 0x1A	; 26
    6cb0:	f6 94       	lsr	r15
    6cb2:	e7 94       	ror	r14
    6cb4:	d7 94       	ror	r13
    6cb6:	c7 94       	ror	r12
    6cb8:	6a 95       	dec	r22
    6cba:	d1 f7       	brne	.-12     	; 0x6cb0 <__stack+0x2cb1>
    6cbc:	76 e0       	ldi	r23, 0x06	; 6
    6cbe:	88 0c       	add	r8, r8
    6cc0:	99 1c       	adc	r9, r9
    6cc2:	aa 1c       	adc	r10, r10
    6cc4:	bb 1c       	adc	r11, r11
    6cc6:	7a 95       	dec	r23
    6cc8:	d1 f7       	brne	.-12     	; 0x6cbe <__stack+0x2cbf>
    6cca:	8c 28       	or	r8, r12
    6ccc:	9d 28       	or	r9, r13
    6cce:	ae 28       	or	r10, r14
    6cd0:	bf 28       	or	r11, r15
    6cd2:	a0 96       	adiw	r28, 0x20	; 32
    6cd4:	88 82       	st	Y, r8
    6cd6:	99 82       	std	Y+1, r9	; 0x01
    6cd8:	aa 82       	std	Y+2, r10	; 0x02
    6cda:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 82] = ROL(key->rk[ 74] + delta[5][17], 13);
    6cdc:	85 ef       	ldi	r24, 0xF5	; 245
    6cde:	88 1a       	sub	r8, r24
    6ce0:	80 e7       	ldi	r24, 0x70	; 112
    6ce2:	98 0a       	sbc	r9, r24
    6ce4:	8a ee       	ldi	r24, 0xEA	; 234
    6ce6:	a8 0a       	sbc	r10, r24
    6ce8:	8b e4       	ldi	r24, 0x4B	; 75
    6cea:	b8 0a       	sbc	r11, r24
    6cec:	75 01       	movw	r14, r10
    6cee:	64 01       	movw	r12, r8
    6cf0:	13 e1       	ldi	r17, 0x13	; 19
    6cf2:	f6 94       	lsr	r15
    6cf4:	e7 94       	ror	r14
    6cf6:	d7 94       	ror	r13
    6cf8:	c7 94       	ror	r12
    6cfa:	1a 95       	dec	r17
    6cfc:	d1 f7       	brne	.-12     	; 0x6cf2 <__stack+0x2cf3>
    6cfe:	0d e0       	ldi	r16, 0x0D	; 13
    6d00:	88 0c       	add	r8, r8
    6d02:	99 1c       	adc	r9, r9
    6d04:	aa 1c       	adc	r10, r10
    6d06:	bb 1c       	adc	r11, r11
    6d08:	0a 95       	dec	r16
    6d0a:	d1 f7       	brne	.-12     	; 0x6d00 <__stack+0x2d01>
    6d0c:	8c 28       	or	r8, r12
    6d0e:	9d 28       	or	r9, r13
    6d10:	ae 28       	or	r10, r14
    6d12:	bf 28       	or	r11, r15
    6d14:	a0 96       	adiw	r28, 0x20	; 32
    6d16:	88 82       	st	Y, r8
    6d18:	99 82       	std	Y+1, r9	; 0x01
    6d1a:	aa 82       	std	Y+2, r10	; 0x02
    6d1c:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 90] = ROL(key->rk[ 82] + delta[7][15],  1);
    6d1e:	75 01       	movw	r14, r10
    6d20:	64 01       	movw	r12, r8
    6d22:	8e e1       	ldi	r24, 0x1E	; 30
    6d24:	c8 1a       	sub	r12, r24
    6d26:	8d e0       	ldi	r24, 0x0D	; 13
    6d28:	d8 0a       	sbc	r13, r24
    6d2a:	84 e5       	ldi	r24, 0x54	; 84
    6d2c:	e8 0a       	sbc	r14, r24
    6d2e:	8b ef       	ldi	r24, 0xFB	; 251
    6d30:	f8 0a       	sbc	r15, r24
    6d32:	cc 0c       	add	r12, r12
    6d34:	dd 1c       	adc	r13, r13
    6d36:	ee 1c       	adc	r14, r14
    6d38:	ff 1c       	adc	r15, r15
    6d3a:	c1 1c       	adc	r12, r1
    6d3c:	a0 96       	adiw	r28, 0x20	; 32
    6d3e:	c8 82       	st	Y, r12
    6d40:	d9 82       	std	Y+1, r13	; 0x01
    6d42:	ea 82       	std	Y+2, r14	; 0x02
    6d44:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 98] = ROL(key->rk[ 90] + delta[0][18],  6);
    6d46:	46 01       	movw	r8, r12
    6d48:	57 01       	movw	r10, r14
    6d4a:	81 e4       	ldi	r24, 0x41	; 65
    6d4c:	88 1a       	sub	r8, r24
    6d4e:	80 ef       	ldi	r24, 0xF0	; 240
    6d50:	98 0a       	sbc	r9, r24
    6d52:	80 e9       	ldi	r24, 0x90	; 144
    6d54:	a8 0a       	sbc	r10, r24
    6d56:	88 e5       	ldi	r24, 0x58	; 88
    6d58:	b8 0a       	sbc	r11, r24
    6d5a:	75 01       	movw	r14, r10
    6d5c:	64 01       	movw	r12, r8
    6d5e:	8a e1       	ldi	r24, 0x1A	; 26
    6d60:	f6 94       	lsr	r15
    6d62:	e7 94       	ror	r14
    6d64:	d7 94       	ror	r13
    6d66:	c7 94       	ror	r12
    6d68:	8a 95       	dec	r24
    6d6a:	d1 f7       	brne	.-12     	; 0x6d60 <__stack+0x2d61>
    6d6c:	96 e0       	ldi	r25, 0x06	; 6
    6d6e:	88 0c       	add	r8, r8
    6d70:	99 1c       	adc	r9, r9
    6d72:	aa 1c       	adc	r10, r10
    6d74:	bb 1c       	adc	r11, r11
    6d76:	9a 95       	dec	r25
    6d78:	d1 f7       	brne	.-12     	; 0x6d6e <__stack+0x2d6f>
    6d7a:	8c 28       	or	r8, r12
    6d7c:	9d 28       	or	r9, r13
    6d7e:	ae 28       	or	r10, r14
    6d80:	bf 28       	or	r11, r15
    6d82:	a0 96       	adiw	r28, 0x20	; 32
    6d84:	88 82       	st	Y, r8
    6d86:	99 82       	std	Y+1, r9	; 0x01
    6d88:	aa 82       	std	Y+2, r10	; 0x02
    6d8a:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[106] = ROL(key->rk[ 98] + delta[1][21], 13);
    6d8c:	83 eb       	ldi	r24, 0xB3	; 179
    6d8e:	88 1a       	sub	r8, r24
    6d90:	83 e7       	ldi	r24, 0x73	; 115
    6d92:	98 0a       	sbc	r9, r24
    6d94:	87 eb       	ldi	r24, 0xB7	; 183
    6d96:	a8 0a       	sbc	r10, r24
    6d98:	8f e9       	ldi	r24, 0x9F	; 159
    6d9a:	b8 0a       	sbc	r11, r24
    6d9c:	75 01       	movw	r14, r10
    6d9e:	64 01       	movw	r12, r8
    6da0:	63 e1       	ldi	r22, 0x13	; 19
    6da2:	f6 94       	lsr	r15
    6da4:	e7 94       	ror	r14
    6da6:	d7 94       	ror	r13
    6da8:	c7 94       	ror	r12
    6daa:	6a 95       	dec	r22
    6dac:	d1 f7       	brne	.-12     	; 0x6da2 <__stack+0x2da3>
    6dae:	7d e0       	ldi	r23, 0x0D	; 13
    6db0:	88 0c       	add	r8, r8
    6db2:	99 1c       	adc	r9, r9
    6db4:	aa 1c       	adc	r10, r10
    6db6:	bb 1c       	adc	r11, r11
    6db8:	7a 95       	dec	r23
    6dba:	d1 f7       	brne	.-12     	; 0x6db0 <__stack+0x2db1>
    6dbc:	8c 28       	or	r8, r12
    6dbe:	9d 28       	or	r9, r13
    6dc0:	ae 28       	or	r10, r14
    6dc2:	bf 28       	or	r11, r15
    6dc4:	a0 96       	adiw	r28, 0x20	; 32
    6dc6:	88 82       	st	Y, r8
    6dc8:	99 82       	std	Y+1, r9	; 0x01
    6dca:	aa 82       	std	Y+2, r10	; 0x02
    6dcc:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[114] = ROL(key->rk[106] + delta[3][19],  1);
    6dce:	75 01       	movw	r14, r10
    6dd0:	64 01       	movw	r12, r8
    6dd2:	87 e0       	ldi	r24, 0x07	; 7
    6dd4:	c8 1a       	sub	r12, r24
    6dd6:	89 e3       	ldi	r24, 0x39	; 57
    6dd8:	d8 0a       	sbc	r13, r24
    6dda:	8c e9       	ldi	r24, 0x9C	; 156
    6ddc:	e8 0a       	sbc	r14, r24
    6dde:	88 e7       	ldi	r24, 0x78	; 120
    6de0:	f8 0a       	sbc	r15, r24
    6de2:	cc 0c       	add	r12, r12
    6de4:	dd 1c       	adc	r13, r13
    6de6:	ee 1c       	adc	r14, r14
    6de8:	ff 1c       	adc	r15, r15
    6dea:	c1 1c       	adc	r12, r1
    6dec:	a0 96       	adiw	r28, 0x20	; 32
    6dee:	c8 82       	st	Y, r12
    6df0:	d9 82       	std	Y+1, r13	; 0x01
    6df2:	ea 82       	std	Y+2, r14	; 0x02
    6df4:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[122] = ROL(key->rk[114] + delta[4][22],  6);
    6df6:	46 01       	movw	r8, r12
    6df8:	57 01       	movw	r10, r14
    6dfa:	87 e5       	ldi	r24, 0x57	; 87
    6dfc:	88 1a       	sub	r8, r24
    6dfe:	88 ea       	ldi	r24, 0xA8	; 168
    6e00:	98 0a       	sbc	r9, r24
    6e02:	83 e6       	ldi	r24, 0x63	; 99
    6e04:	a8 0a       	sbc	r10, r24
    6e06:	88 ed       	ldi	r24, 0xD8	; 216
    6e08:	b8 0a       	sbc	r11, r24
    6e0a:	75 01       	movw	r14, r10
    6e0c:	64 01       	movw	r12, r8
    6e0e:	1a e1       	ldi	r17, 0x1A	; 26
    6e10:	f6 94       	lsr	r15
    6e12:	e7 94       	ror	r14
    6e14:	d7 94       	ror	r13
    6e16:	c7 94       	ror	r12
    6e18:	1a 95       	dec	r17
    6e1a:	d1 f7       	brne	.-12     	; 0x6e10 <__stack+0x2e11>
    6e1c:	06 e0       	ldi	r16, 0x06	; 6
    6e1e:	88 0c       	add	r8, r8
    6e20:	99 1c       	adc	r9, r9
    6e22:	aa 1c       	adc	r10, r10
    6e24:	bb 1c       	adc	r11, r11
    6e26:	0a 95       	dec	r16
    6e28:	d1 f7       	brne	.-12     	; 0x6e1e <__stack+0x2e1f>
    6e2a:	8c 28       	or	r8, r12
    6e2c:	9d 28       	or	r9, r13
    6e2e:	ae 28       	or	r10, r14
    6e30:	bf 28       	or	r11, r15
    6e32:	a0 96       	adiw	r28, 0x20	; 32
    6e34:	88 82       	st	Y, r8
    6e36:	99 82       	std	Y+1, r9	; 0x01
    6e38:	aa 82       	std	Y+2, r10	; 0x02
    6e3a:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[130] = ROL(key->rk[122] + delta[5][25], 13);
    6e3c:	8c e4       	ldi	r24, 0x4C	; 76
    6e3e:	88 1a       	sub	r8, r24
    6e40:	84 ef       	ldi	r24, 0xF4	; 244
    6e42:	98 0a       	sbc	r9, r24
    6e44:	80 e7       	ldi	r24, 0x70	; 112
    6e46:	a8 0a       	sbc	r10, r24
    6e48:	8a ee       	ldi	r24, 0xEA	; 234
    6e4a:	b8 0a       	sbc	r11, r24
    6e4c:	75 01       	movw	r14, r10
    6e4e:	64 01       	movw	r12, r8
    6e50:	83 e1       	ldi	r24, 0x13	; 19
    6e52:	f6 94       	lsr	r15
    6e54:	e7 94       	ror	r14
    6e56:	d7 94       	ror	r13
    6e58:	c7 94       	ror	r12
    6e5a:	8a 95       	dec	r24
    6e5c:	d1 f7       	brne	.-12     	; 0x6e52 <__stack+0x2e53>
    6e5e:	9d e0       	ldi	r25, 0x0D	; 13
    6e60:	88 0c       	add	r8, r8
    6e62:	99 1c       	adc	r9, r9
    6e64:	aa 1c       	adc	r10, r10
    6e66:	bb 1c       	adc	r11, r11
    6e68:	9a 95       	dec	r25
    6e6a:	d1 f7       	brne	.-12     	; 0x6e60 <__stack+0x2e61>
    6e6c:	8c 28       	or	r8, r12
    6e6e:	9d 28       	or	r9, r13
    6e70:	ae 28       	or	r10, r14
    6e72:	bf 28       	or	r11, r15
    6e74:	a0 96       	adiw	r28, 0x20	; 32
    6e76:	88 82       	st	Y, r8
    6e78:	99 82       	std	Y+1, r9	; 0x01
    6e7a:	aa 82       	std	Y+2, r10	; 0x02
    6e7c:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[138] = ROL(key->rk[130] + delta[7][23],  1);
    6e7e:	75 01       	movw	r14, r10
    6e80:	64 01       	movw	r12, r8
    6e82:	8c ef       	ldi	r24, 0xFC	; 252
    6e84:	c8 1a       	sub	r12, r24
    6e86:	8d e1       	ldi	r24, 0x1D	; 29
    6e88:	d8 0a       	sbc	r13, r24
    6e8a:	8d e0       	ldi	r24, 0x0D	; 13
    6e8c:	e8 0a       	sbc	r14, r24
    6e8e:	84 e5       	ldi	r24, 0x54	; 84
    6e90:	f8 0a       	sbc	r15, r24
    6e92:	cc 0c       	add	r12, r12
    6e94:	dd 1c       	adc	r13, r13
    6e96:	ee 1c       	adc	r14, r14
    6e98:	ff 1c       	adc	r15, r15
    6e9a:	c1 1c       	adc	r12, r1
    6e9c:	a0 96       	adiw	r28, 0x20	; 32
    6e9e:	c8 82       	st	Y, r12
    6ea0:	d9 82       	std	Y+1, r13	; 0x01
    6ea2:	ea 82       	std	Y+2, r14	; 0x02
    6ea4:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[146] = ROL(key->rk[138] + delta[0][26],  6);
    6ea6:	46 01       	movw	r8, r12
    6ea8:	57 01       	movw	r10, r14
    6eaa:	89 e5       	ldi	r24, 0x59	; 89
    6eac:	88 1a       	sub	r8, r24
    6eae:	80 e4       	ldi	r24, 0x40	; 64
    6eb0:	98 0a       	sbc	r9, r24
    6eb2:	80 ef       	ldi	r24, 0xF0	; 240
    6eb4:	a8 0a       	sbc	r10, r24
    6eb6:	80 e9       	ldi	r24, 0x90	; 144
    6eb8:	b8 0a       	sbc	r11, r24
    6eba:	75 01       	movw	r14, r10
    6ebc:	64 01       	movw	r12, r8
    6ebe:	6a e1       	ldi	r22, 0x1A	; 26
    6ec0:	f6 94       	lsr	r15
    6ec2:	e7 94       	ror	r14
    6ec4:	d7 94       	ror	r13
    6ec6:	c7 94       	ror	r12
    6ec8:	6a 95       	dec	r22
    6eca:	d1 f7       	brne	.-12     	; 0x6ec0 <__stack+0x2ec1>
    6ecc:	76 e0       	ldi	r23, 0x06	; 6
    6ece:	88 0c       	add	r8, r8
    6ed0:	99 1c       	adc	r9, r9
    6ed2:	aa 1c       	adc	r10, r10
    6ed4:	bb 1c       	adc	r11, r11
    6ed6:	7a 95       	dec	r23
    6ed8:	d1 f7       	brne	.-12     	; 0x6ece <__stack+0x2ecf>
    6eda:	8c 28       	or	r8, r12
    6edc:	9d 28       	or	r9, r13
    6ede:	ae 28       	or	r10, r14
    6ee0:	bf 28       	or	r11, r15
    6ee2:	a0 96       	adiw	r28, 0x20	; 32
    6ee4:	88 82       	st	Y, r8
    6ee6:	99 82       	std	Y+1, r9	; 0x01
    6ee8:	aa 82       	std	Y+2, r10	; 0x02
    6eea:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[154] = ROL(key->rk[146] + delta[1][29], 13);
    6eec:	80 ea       	ldi	r24, 0xA0	; 160
    6eee:	88 1a       	sub	r8, r24
    6ef0:	82 eb       	ldi	r24, 0xB2	; 178
    6ef2:	98 0a       	sbc	r9, r24
    6ef4:	83 e7       	ldi	r24, 0x73	; 115
    6ef6:	a8 0a       	sbc	r10, r24
    6ef8:	87 eb       	ldi	r24, 0xB7	; 183
    6efa:	b8 0a       	sbc	r11, r24
    6efc:	75 01       	movw	r14, r10
    6efe:	64 01       	movw	r12, r8
    6f00:	13 e1       	ldi	r17, 0x13	; 19
    6f02:	f6 94       	lsr	r15
    6f04:	e7 94       	ror	r14
    6f06:	d7 94       	ror	r13
    6f08:	c7 94       	ror	r12
    6f0a:	1a 95       	dec	r17
    6f0c:	d1 f7       	brne	.-12     	; 0x6f02 <__stack+0x2f03>
    6f0e:	0d e0       	ldi	r16, 0x0D	; 13
    6f10:	88 0c       	add	r8, r8
    6f12:	99 1c       	adc	r9, r9
    6f14:	aa 1c       	adc	r10, r10
    6f16:	bb 1c       	adc	r11, r11
    6f18:	0a 95       	dec	r16
    6f1a:	d1 f7       	brne	.-12     	; 0x6f10 <__stack+0x2f11>
    6f1c:	8c 28       	or	r8, r12
    6f1e:	9d 28       	or	r9, r13
    6f20:	ae 28       	or	r10, r14
    6f22:	bf 28       	or	r11, r15
    6f24:	a0 96       	adiw	r28, 0x20	; 32
    6f26:	88 82       	st	Y, r8
    6f28:	99 82       	std	Y+1, r9	; 0x01
    6f2a:	aa 82       	std	Y+2, r10	; 0x02
    6f2c:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[162] = ROL(key->rk[154] + delta[3][27],  1);
    6f2e:	75 01       	movw	r14, r10
    6f30:	64 01       	movw	r12, r8
    6f32:	89 e7       	ldi	r24, 0x79	; 121
    6f34:	c8 1a       	sub	r12, r24
    6f36:	86 e0       	ldi	r24, 0x06	; 6
    6f38:	d8 0a       	sbc	r13, r24
    6f3a:	89 e3       	ldi	r24, 0x39	; 57
    6f3c:	e8 0a       	sbc	r14, r24
    6f3e:	8c e9       	ldi	r24, 0x9C	; 156
    6f40:	f8 0a       	sbc	r15, r24
    6f42:	cc 0c       	add	r12, r12
    6f44:	dd 1c       	adc	r13, r13
    6f46:	ee 1c       	adc	r14, r14
    6f48:	ff 1c       	adc	r15, r15
    6f4a:	c1 1c       	adc	r12, r1
    6f4c:	a0 96       	adiw	r28, 0x20	; 32
    6f4e:	c8 82       	st	Y, r12
    6f50:	d9 82       	std	Y+1, r13	; 0x01
    6f52:	ea 82       	std	Y+2, r14	; 0x02
    6f54:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[170] = ROL(key->rk[162] + delta[4][30],  6);
    6f56:	46 01       	movw	r8, r12
    6f58:	57 01       	movw	r10, r14
    6f5a:	89 ed       	ldi	r24, 0xD9	; 217
    6f5c:	88 1a       	sub	r8, r24
    6f5e:	86 e5       	ldi	r24, 0x56	; 86
    6f60:	98 0a       	sbc	r9, r24
    6f62:	88 ea       	ldi	r24, 0xA8	; 168
    6f64:	a8 0a       	sbc	r10, r24
    6f66:	83 e6       	ldi	r24, 0x63	; 99
    6f68:	b8 0a       	sbc	r11, r24
    6f6a:	75 01       	movw	r14, r10
    6f6c:	64 01       	movw	r12, r8
    6f6e:	8a e1       	ldi	r24, 0x1A	; 26
    6f70:	f6 94       	lsr	r15
    6f72:	e7 94       	ror	r14
    6f74:	d7 94       	ror	r13
    6f76:	c7 94       	ror	r12
    6f78:	8a 95       	dec	r24
    6f7a:	d1 f7       	brne	.-12     	; 0x6f70 <__stack+0x2f71>
    6f7c:	96 e0       	ldi	r25, 0x06	; 6
    6f7e:	88 0c       	add	r8, r8
    6f80:	99 1c       	adc	r9, r9
    6f82:	aa 1c       	adc	r10, r10
    6f84:	bb 1c       	adc	r11, r11
    6f86:	9a 95       	dec	r25
    6f88:	d1 f7       	brne	.-12     	; 0x6f7e <__stack+0x2f7f>
    6f8a:	8c 28       	or	r8, r12
    6f8c:	9d 28       	or	r9, r13
    6f8e:	ae 28       	or	r10, r14
    6f90:	bf 28       	or	r11, r15
    6f92:	a0 96       	adiw	r28, 0x20	; 32
    6f94:	88 82       	st	Y, r8
    6f96:	99 82       	std	Y+1, r9	; 0x01
    6f98:	aa 82       	std	Y+2, r10	; 0x02
    6f9a:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[178] = ROL(key->rk[170] + delta[5][ 1], 13);
    6f9c:	8b ee       	ldi	r24, 0xEB	; 235
    6f9e:	88 1a       	sub	r8, r24
    6fa0:	8b e4       	ldi	r24, 0x4B	; 75
    6fa2:	98 0a       	sbc	r9, r24
    6fa4:	84 ef       	ldi	r24, 0xF4	; 244
    6fa6:	a8 0a       	sbc	r10, r24
    6fa8:	80 e7       	ldi	r24, 0x70	; 112
    6faa:	b8 0a       	sbc	r11, r24
    6fac:	75 01       	movw	r14, r10
    6fae:	64 01       	movw	r12, r8
    6fb0:	63 e1       	ldi	r22, 0x13	; 19
    6fb2:	f6 94       	lsr	r15
    6fb4:	e7 94       	ror	r14
    6fb6:	d7 94       	ror	r13
    6fb8:	c7 94       	ror	r12
    6fba:	6a 95       	dec	r22
    6fbc:	d1 f7       	brne	.-12     	; 0x6fb2 <__stack+0x2fb3>
    6fbe:	7d e0       	ldi	r23, 0x0D	; 13
    6fc0:	88 0c       	add	r8, r8
    6fc2:	99 1c       	adc	r9, r9
    6fc4:	aa 1c       	adc	r10, r10
    6fc6:	bb 1c       	adc	r11, r11
    6fc8:	7a 95       	dec	r23
    6fca:	d1 f7       	brne	.-12     	; 0x6fc0 <__stack+0x2fc1>
    6fcc:	8c 28       	or	r8, r12
    6fce:	9d 28       	or	r9, r13
    6fd0:	ae 28       	or	r10, r14
    6fd2:	bf 28       	or	r11, r15
    6fd4:	a0 96       	adiw	r28, 0x20	; 32
    6fd6:	88 82       	st	Y, r8
    6fd8:	99 82       	std	Y+1, r9	; 0x01
    6fda:	aa 82       	std	Y+2, r10	; 0x02
    6fdc:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[186] = ROL(key->rk[178] + delta[7][31],  1);
    6fde:	75 01       	movw	r14, r10
    6fe0:	64 01       	movw	r12, r8
    6fe2:	85 e5       	ldi	r24, 0x55	; 85
    6fe4:	c8 1a       	sub	r12, r24
    6fe6:	8b ef       	ldi	r24, 0xFB	; 251
    6fe8:	d8 0a       	sbc	r13, r24
    6fea:	8d e1       	ldi	r24, 0x1D	; 29
    6fec:	e8 0a       	sbc	r14, r24
    6fee:	8d e0       	ldi	r24, 0x0D	; 13
    6ff0:	f8 0a       	sbc	r15, r24
    6ff2:	cc 0c       	add	r12, r12
    6ff4:	dd 1c       	adc	r13, r13
    6ff6:	ee 1c       	adc	r14, r14
    6ff8:	ff 1c       	adc	r15, r15
    6ffa:	c1 1c       	adc	r12, r1
    6ffc:	a0 96       	adiw	r28, 0x20	; 32
    6ffe:	c8 82       	st	Y, r12
    7000:	d9 82       	std	Y+1, r13	; 0x01
    7002:	ea 82       	std	Y+2, r14	; 0x02
    7004:	fb 82       	std	Y+3, r15	; 0x03

		key->rk[  3] = ROL(loadU32(_mk[3]) + delta[0][ 3], 11);
    7006:	1c 96       	adiw	r26, 0x0c	; 12
    7008:	8d 90       	ld	r8, X+
    700a:	9d 90       	ld	r9, X+
    700c:	ad 90       	ld	r10, X+
    700e:	bc 90       	ld	r11, X
    7010:	1f 97       	sbiw	r26, 0x0f	; 15
    7012:	82 e2       	ldi	r24, 0x22	; 34
    7014:	88 1a       	sub	r8, r24
    7016:	81 eb       	ldi	r24, 0xB1	; 177
    7018:	98 0a       	sbc	r9, r24
    701a:	80 e8       	ldi	r24, 0x80	; 128
    701c:	a8 0a       	sbc	r10, r24
    701e:	80 ee       	ldi	r24, 0xE0	; 224
    7020:	b8 0a       	sbc	r11, r24
    7022:	75 01       	movw	r14, r10
    7024:	64 01       	movw	r12, r8
    7026:	15 e1       	ldi	r17, 0x15	; 21
    7028:	f6 94       	lsr	r15
    702a:	e7 94       	ror	r14
    702c:	d7 94       	ror	r13
    702e:	c7 94       	ror	r12
    7030:	1a 95       	dec	r17
    7032:	d1 f7       	brne	.-12     	; 0x7028 <__stack+0x3029>
    7034:	0b e0       	ldi	r16, 0x0B	; 11
    7036:	88 0c       	add	r8, r8
    7038:	99 1c       	adc	r9, r9
    703a:	aa 1c       	adc	r10, r10
    703c:	bb 1c       	adc	r11, r11
    703e:	0a 95       	dec	r16
    7040:	d1 f7       	brne	.-12     	; 0x7036 <__stack+0x3037>
    7042:	8c 28       	or	r8, r12
    7044:	9d 28       	or	r9, r13
    7046:	ae 28       	or	r10, r14
    7048:	bf 28       	or	r11, r15
    704a:	84 86       	std	Z+12, r8	; 0x0c
    704c:	95 86       	std	Z+13, r9	; 0x0d
    704e:	a6 86       	std	Z+14, r10	; 0x0e
    7050:	b7 86       	std	Z+15, r11	; 0x0f
		key->rk[ 11] = ROL(key->rk[  3] + delta[1][ 6], 17);
    7052:	8f e6       	ldi	r24, 0x6F	; 111
    7054:	88 1a       	sub	r8, r24
    7056:	8f e3       	ldi	r24, 0x3F	; 63
    7058:	98 0a       	sbc	r9, r24
    705a:	85 e6       	ldi	r24, 0x65	; 101
    705c:	a8 0a       	sbc	r10, r24
    705e:	87 ee       	ldi	r24, 0xE7	; 231
    7060:	b8 0a       	sbc	r11, r24
    7062:	75 01       	movw	r14, r10
    7064:	64 01       	movw	r12, r8
    7066:	8f e0       	ldi	r24, 0x0F	; 15
    7068:	f6 94       	lsr	r15
    706a:	e7 94       	ror	r14
    706c:	d7 94       	ror	r13
    706e:	c7 94       	ror	r12
    7070:	8a 95       	dec	r24
    7072:	d1 f7       	brne	.-12     	; 0x7068 <__stack+0x3069>
    7074:	91 e1       	ldi	r25, 0x11	; 17
    7076:	88 0c       	add	r8, r8
    7078:	99 1c       	adc	r9, r9
    707a:	aa 1c       	adc	r10, r10
    707c:	bb 1c       	adc	r11, r11
    707e:	9a 95       	dec	r25
    7080:	d1 f7       	brne	.-12     	; 0x7076 <__stack+0x3077>
    7082:	8c 28       	or	r8, r12
    7084:	9d 28       	or	r9, r13
    7086:	ae 28       	or	r10, r14
    7088:	bf 28       	or	r11, r15
    708a:	84 a6       	std	Z+44, r8	; 0x2c
    708c:	95 a6       	std	Z+45, r9	; 0x2d
    708e:	a6 a6       	std	Z+46, r10	; 0x2e
    7090:	b7 a6       	std	Z+47, r11	; 0x2f
		key->rk[ 19] = ROL(key->rk[ 11] + delta[3][ 4],  3);
    7092:	89 e3       	ldi	r24, 0x39	; 57
    7094:	88 1a       	sub	r8, r24
    7096:	81 ef       	ldi	r24, 0xF1	; 241
    7098:	98 0a       	sbc	r9, r24
    709a:	8c e0       	ldi	r24, 0x0C	; 12
    709c:	a8 0a       	sbc	r10, r24
    709e:	82 e7       	ldi	r24, 0x72	; 114
    70a0:	b8 0a       	sbc	r11, r24
    70a2:	75 01       	movw	r14, r10
    70a4:	64 01       	movw	r12, r8
    70a6:	6d e1       	ldi	r22, 0x1D	; 29
    70a8:	f6 94       	lsr	r15
    70aa:	e7 94       	ror	r14
    70ac:	d7 94       	ror	r13
    70ae:	c7 94       	ror	r12
    70b0:	6a 95       	dec	r22
    70b2:	d1 f7       	brne	.-12     	; 0x70a8 <__stack+0x30a9>
    70b4:	73 e0       	ldi	r23, 0x03	; 3
    70b6:	88 0c       	add	r8, r8
    70b8:	99 1c       	adc	r9, r9
    70ba:	aa 1c       	adc	r10, r10
    70bc:	bb 1c       	adc	r11, r11
    70be:	7a 95       	dec	r23
    70c0:	d1 f7       	brne	.-12     	; 0x70b6 <__stack+0x30b7>
    70c2:	8c 28       	or	r8, r12
    70c4:	9d 28       	or	r9, r13
    70c6:	ae 28       	or	r10, r14
    70c8:	bf 28       	or	r11, r15
    70ca:	cc 59       	subi	r28, 0x9C	; 156
    70cc:	d2 40       	sbci	r29, 0x02	; 2
    70ce:	88 82       	st	Y, r8
    70d0:	99 82       	std	Y+1, r9	; 0x01
    70d2:	aa 82       	std	Y+2, r10	; 0x02
    70d4:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 27] = ROL(key->rk[ 19] + delta[4][ 7], 11);
    70d6:	88 ec       	ldi	r24, 0xC8	; 200
    70d8:	88 1a       	sub	r8, r24
    70da:	80 eb       	ldi	r24, 0xB0	; 176
    70dc:	98 0a       	sbc	r9, r24
    70de:	8d ea       	ldi	r24, 0xAD	; 173
    70e0:	a8 0a       	sbc	r10, r24
    70e2:	80 e5       	ldi	r24, 0x50	; 80
    70e4:	b8 0a       	sbc	r11, r24
    70e6:	75 01       	movw	r14, r10
    70e8:	64 01       	movw	r12, r8
    70ea:	15 e1       	ldi	r17, 0x15	; 21
    70ec:	f6 94       	lsr	r15
    70ee:	e7 94       	ror	r14
    70f0:	d7 94       	ror	r13
    70f2:	c7 94       	ror	r12
    70f4:	1a 95       	dec	r17
    70f6:	d1 f7       	brne	.-12     	; 0x70ec <__stack+0x30ed>
    70f8:	0b e0       	ldi	r16, 0x0B	; 11
    70fa:	88 0c       	add	r8, r8
    70fc:	99 1c       	adc	r9, r9
    70fe:	aa 1c       	adc	r10, r10
    7100:	bb 1c       	adc	r11, r11
    7102:	0a 95       	dec	r16
    7104:	d1 f7       	brne	.-12     	; 0x70fa <__stack+0x30fb>
    7106:	8c 28       	or	r8, r12
    7108:	9d 28       	or	r9, r13
    710a:	ae 28       	or	r10, r14
    710c:	bf 28       	or	r11, r15
    710e:	a0 96       	adiw	r28, 0x20	; 32
    7110:	88 82       	st	Y, r8
    7112:	99 82       	std	Y+1, r9	; 0x01
    7114:	aa 82       	std	Y+2, r10	; 0x02
    7116:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 35] = ROL(key->rk[ 27] + delta[5][10], 17);
    7118:	82 ee       	ldi	r24, 0xE2	; 226
    711a:	88 1a       	sub	r8, r24
    711c:	84 ed       	ldi	r24, 0xD4	; 212
    711e:	98 0a       	sbc	r9, r24
    7120:	87 e9       	ldi	r24, 0x97	; 151
    7122:	a8 0a       	sbc	r10, r24
    7124:	88 ee       	ldi	r24, 0xE8	; 232
    7126:	b8 0a       	sbc	r11, r24
    7128:	75 01       	movw	r14, r10
    712a:	64 01       	movw	r12, r8
    712c:	8f e0       	ldi	r24, 0x0F	; 15
    712e:	f6 94       	lsr	r15
    7130:	e7 94       	ror	r14
    7132:	d7 94       	ror	r13
    7134:	c7 94       	ror	r12
    7136:	8a 95       	dec	r24
    7138:	d1 f7       	brne	.-12     	; 0x712e <__stack+0x312f>
    713a:	91 e1       	ldi	r25, 0x11	; 17
    713c:	88 0c       	add	r8, r8
    713e:	99 1c       	adc	r9, r9
    7140:	aa 1c       	adc	r10, r10
    7142:	bb 1c       	adc	r11, r11
    7144:	9a 95       	dec	r25
    7146:	d1 f7       	brne	.-12     	; 0x713c <__stack+0x313d>
    7148:	8c 28       	or	r8, r12
    714a:	9d 28       	or	r9, r13
    714c:	ae 28       	or	r10, r14
    714e:	bf 28       	or	r11, r15
    7150:	a0 96       	adiw	r28, 0x20	; 32
    7152:	88 82       	st	Y, r8
    7154:	99 82       	std	Y+1, r9	; 0x01
    7156:	aa 82       	std	Y+2, r10	; 0x02
    7158:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 43] = ROL(key->rk[ 35] + delta[7][ 8],  3);
    715a:	8b e1       	ldi	r24, 0x1B	; 27
    715c:	88 1a       	sub	r8, r24
    715e:	88 ea       	ldi	r24, 0xA8	; 168
    7160:	98 0a       	sbc	r9, r24
    7162:	86 ef       	ldi	r24, 0xF6	; 246
    7164:	a8 0a       	sbc	r10, r24
    7166:	8b e3       	ldi	r24, 0x3B	; 59
    7168:	b8 0a       	sbc	r11, r24
    716a:	75 01       	movw	r14, r10
    716c:	64 01       	movw	r12, r8
    716e:	6d e1       	ldi	r22, 0x1D	; 29
    7170:	f6 94       	lsr	r15
    7172:	e7 94       	ror	r14
    7174:	d7 94       	ror	r13
    7176:	c7 94       	ror	r12
    7178:	6a 95       	dec	r22
    717a:	d1 f7       	brne	.-12     	; 0x7170 <__stack+0x3171>
    717c:	73 e0       	ldi	r23, 0x03	; 3
    717e:	88 0c       	add	r8, r8
    7180:	99 1c       	adc	r9, r9
    7182:	aa 1c       	adc	r10, r10
    7184:	bb 1c       	adc	r11, r11
    7186:	7a 95       	dec	r23
    7188:	d1 f7       	brne	.-12     	; 0x717e <__stack+0x317f>
    718a:	8c 28       	or	r8, r12
    718c:	9d 28       	or	r9, r13
    718e:	ae 28       	or	r10, r14
    7190:	bf 28       	or	r11, r15
    7192:	a0 96       	adiw	r28, 0x20	; 32
    7194:	88 82       	st	Y, r8
    7196:	99 82       	std	Y+1, r9	; 0x01
    7198:	aa 82       	std	Y+2, r10	; 0x02
    719a:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 51] = ROL(key->rk[ 43] + delta[0][11], 11);
    719c:	81 ee       	ldi	r24, 0xE1	; 225
    719e:	88 1a       	sub	r8, r24
    71a0:	81 e2       	ldi	r24, 0x21	; 33
    71a2:	98 0a       	sbc	r9, r24
    71a4:	81 eb       	ldi	r24, 0xB1	; 177
    71a6:	a8 0a       	sbc	r10, r24
    71a8:	80 e8       	ldi	r24, 0x80	; 128
    71aa:	b8 0a       	sbc	r11, r24
    71ac:	75 01       	movw	r14, r10
    71ae:	64 01       	movw	r12, r8
    71b0:	15 e1       	ldi	r17, 0x15	; 21
    71b2:	f6 94       	lsr	r15
    71b4:	e7 94       	ror	r14
    71b6:	d7 94       	ror	r13
    71b8:	c7 94       	ror	r12
    71ba:	1a 95       	dec	r17
    71bc:	d1 f7       	brne	.-12     	; 0x71b2 <__stack+0x31b3>
    71be:	0b e0       	ldi	r16, 0x0B	; 11
    71c0:	88 0c       	add	r8, r8
    71c2:	99 1c       	adc	r9, r9
    71c4:	aa 1c       	adc	r10, r10
    71c6:	bb 1c       	adc	r11, r11
    71c8:	0a 95       	dec	r16
    71ca:	d1 f7       	brne	.-12     	; 0x71c0 <__stack+0x31c1>
    71cc:	8c 28       	or	r8, r12
    71ce:	9d 28       	or	r9, r13
    71d0:	ae 28       	or	r10, r14
    71d2:	bf 28       	or	r11, r15
    71d4:	a0 96       	adiw	r28, 0x20	; 32
    71d6:	88 82       	st	Y, r8
    71d8:	99 82       	std	Y+1, r9	; 0x01
    71da:	aa 82       	std	Y+2, r10	; 0x02
    71dc:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 59] = ROL(key->rk[ 51] + delta[1][14], 17);
    71de:	88 ee       	ldi	r24, 0xE8	; 232
    71e0:	88 1a       	sub	r8, r24
    71e2:	8e e6       	ldi	r24, 0x6E	; 110
    71e4:	98 0a       	sbc	r9, r24
    71e6:	8f e3       	ldi	r24, 0x3F	; 63
    71e8:	a8 0a       	sbc	r10, r24
    71ea:	85 e6       	ldi	r24, 0x65	; 101
    71ec:	b8 0a       	sbc	r11, r24
    71ee:	75 01       	movw	r14, r10
    71f0:	64 01       	movw	r12, r8
    71f2:	8f e0       	ldi	r24, 0x0F	; 15
    71f4:	f6 94       	lsr	r15
    71f6:	e7 94       	ror	r14
    71f8:	d7 94       	ror	r13
    71fa:	c7 94       	ror	r12
    71fc:	8a 95       	dec	r24
    71fe:	d1 f7       	brne	.-12     	; 0x71f4 <__stack+0x31f5>
    7200:	91 e1       	ldi	r25, 0x11	; 17
    7202:	88 0c       	add	r8, r8
    7204:	99 1c       	adc	r9, r9
    7206:	aa 1c       	adc	r10, r10
    7208:	bb 1c       	adc	r11, r11
    720a:	9a 95       	dec	r25
    720c:	d1 f7       	brne	.-12     	; 0x7202 <__stack+0x3203>
    720e:	8c 28       	or	r8, r12
    7210:	9d 28       	or	r9, r13
    7212:	ae 28       	or	r10, r14
    7214:	bf 28       	or	r11, r15
    7216:	a0 96       	adiw	r28, 0x20	; 32
    7218:	88 82       	st	Y, r8
    721a:	99 82       	std	Y+1, r9	; 0x01
    721c:	aa 82       	std	Y+2, r10	; 0x02
    721e:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 67] = ROL(key->rk[ 59] + delta[3][12],  3);
    7220:	83 e7       	ldi	r24, 0x73	; 115
    7222:	88 1a       	sub	r8, r24
    7224:	88 e3       	ldi	r24, 0x38	; 56
    7226:	98 0a       	sbc	r9, r24
    7228:	81 ef       	ldi	r24, 0xF1	; 241
    722a:	a8 0a       	sbc	r10, r24
    722c:	8c e0       	ldi	r24, 0x0C	; 12
    722e:	b8 0a       	sbc	r11, r24
    7230:	75 01       	movw	r14, r10
    7232:	64 01       	movw	r12, r8
    7234:	6d e1       	ldi	r22, 0x1D	; 29
    7236:	f6 94       	lsr	r15
    7238:	e7 94       	ror	r14
    723a:	d7 94       	ror	r13
    723c:	c7 94       	ror	r12
    723e:	6a 95       	dec	r22
    7240:	d1 f7       	brne	.-12     	; 0x7236 <__stack+0x3237>
    7242:	73 e0       	ldi	r23, 0x03	; 3
    7244:	88 0c       	add	r8, r8
    7246:	99 1c       	adc	r9, r9
    7248:	aa 1c       	adc	r10, r10
    724a:	bb 1c       	adc	r11, r11
    724c:	7a 95       	dec	r23
    724e:	d1 f7       	brne	.-12     	; 0x7244 <__stack+0x3245>
    7250:	8c 28       	or	r8, r12
    7252:	9d 28       	or	r9, r13
    7254:	ae 28       	or	r10, r14
    7256:	bf 28       	or	r11, r15
    7258:	a0 96       	adiw	r28, 0x20	; 32
    725a:	88 82       	st	Y, r8
    725c:	99 82       	std	Y+1, r9	; 0x01
    725e:	aa 82       	std	Y+2, r10	; 0x02
    7260:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 75] = ROL(key->rk[ 67] + delta[4][15], 11);
    7262:	81 e5       	ldi	r24, 0x51	; 81
    7264:	88 1a       	sub	r8, r24
    7266:	87 ec       	ldi	r24, 0xC7	; 199
    7268:	98 0a       	sbc	r9, r24
    726a:	80 eb       	ldi	r24, 0xB0	; 176
    726c:	a8 0a       	sbc	r10, r24
    726e:	8d ea       	ldi	r24, 0xAD	; 173
    7270:	b8 0a       	sbc	r11, r24
    7272:	75 01       	movw	r14, r10
    7274:	64 01       	movw	r12, r8
    7276:	15 e1       	ldi	r17, 0x15	; 21
    7278:	f6 94       	lsr	r15
    727a:	e7 94       	ror	r14
    727c:	d7 94       	ror	r13
    727e:	c7 94       	ror	r12
    7280:	1a 95       	dec	r17
    7282:	d1 f7       	brne	.-12     	; 0x7278 <__stack+0x3279>
    7284:	0b e0       	ldi	r16, 0x0B	; 11
    7286:	88 0c       	add	r8, r8
    7288:	99 1c       	adc	r9, r9
    728a:	aa 1c       	adc	r10, r10
    728c:	bb 1c       	adc	r11, r11
    728e:	0a 95       	dec	r16
    7290:	d1 f7       	brne	.-12     	; 0x7286 <__stack+0x3287>
    7292:	8c 28       	or	r8, r12
    7294:	9d 28       	or	r9, r13
    7296:	ae 28       	or	r10, r14
    7298:	bf 28       	or	r11, r15
    729a:	a0 96       	adiw	r28, 0x20	; 32
    729c:	88 82       	st	Y, r8
    729e:	99 82       	std	Y+1, r9	; 0x01
    72a0:	aa 82       	std	Y+2, r10	; 0x02
    72a2:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 83] = ROL(key->rk[ 75] + delta[5][18], 17);
    72a4:	89 ee       	ldi	r24, 0xE9	; 233
    72a6:	88 1a       	sub	r8, r24
    72a8:	81 ee       	ldi	r24, 0xE1	; 225
    72aa:	98 0a       	sbc	r9, r24
    72ac:	84 ed       	ldi	r24, 0xD4	; 212
    72ae:	a8 0a       	sbc	r10, r24
    72b0:	87 e9       	ldi	r24, 0x97	; 151
    72b2:	b8 0a       	sbc	r11, r24
    72b4:	75 01       	movw	r14, r10
    72b6:	64 01       	movw	r12, r8
    72b8:	8f e0       	ldi	r24, 0x0F	; 15
    72ba:	f6 94       	lsr	r15
    72bc:	e7 94       	ror	r14
    72be:	d7 94       	ror	r13
    72c0:	c7 94       	ror	r12
    72c2:	8a 95       	dec	r24
    72c4:	d1 f7       	brne	.-12     	; 0x72ba <__stack+0x32bb>
    72c6:	91 e1       	ldi	r25, 0x11	; 17
    72c8:	88 0c       	add	r8, r8
    72ca:	99 1c       	adc	r9, r9
    72cc:	aa 1c       	adc	r10, r10
    72ce:	bb 1c       	adc	r11, r11
    72d0:	9a 95       	dec	r25
    72d2:	d1 f7       	brne	.-12     	; 0x72c8 <__stack+0x32c9>
    72d4:	8c 28       	or	r8, r12
    72d6:	9d 28       	or	r9, r13
    72d8:	ae 28       	or	r10, r14
    72da:	bf 28       	or	r11, r15
    72dc:	a0 96       	adiw	r28, 0x20	; 32
    72de:	88 82       	st	Y, r8
    72e0:	99 82       	std	Y+1, r9	; 0x01
    72e2:	aa 82       	std	Y+2, r10	; 0x02
    72e4:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 91] = ROL(key->rk[ 83] + delta[7][16],  3);
    72e6:	8c e3       	ldi	r24, 0x3C	; 60
    72e8:	88 1a       	sub	r8, r24
    72ea:	8a e1       	ldi	r24, 0x1A	; 26
    72ec:	98 0a       	sbc	r9, r24
    72ee:	88 ea       	ldi	r24, 0xA8	; 168
    72f0:	a8 0a       	sbc	r10, r24
    72f2:	86 ef       	ldi	r24, 0xF6	; 246
    72f4:	b8 0a       	sbc	r11, r24
    72f6:	75 01       	movw	r14, r10
    72f8:	64 01       	movw	r12, r8
    72fa:	6d e1       	ldi	r22, 0x1D	; 29
    72fc:	f6 94       	lsr	r15
    72fe:	e7 94       	ror	r14
    7300:	d7 94       	ror	r13
    7302:	c7 94       	ror	r12
    7304:	6a 95       	dec	r22
    7306:	d1 f7       	brne	.-12     	; 0x72fc <__stack+0x32fd>
    7308:	73 e0       	ldi	r23, 0x03	; 3
    730a:	88 0c       	add	r8, r8
    730c:	99 1c       	adc	r9, r9
    730e:	aa 1c       	adc	r10, r10
    7310:	bb 1c       	adc	r11, r11
    7312:	7a 95       	dec	r23
    7314:	d1 f7       	brne	.-12     	; 0x730a <__stack+0x330b>
    7316:	8c 28       	or	r8, r12
    7318:	9d 28       	or	r9, r13
    731a:	ae 28       	or	r10, r14
    731c:	bf 28       	or	r11, r15
    731e:	a0 96       	adiw	r28, 0x20	; 32
    7320:	88 82       	st	Y, r8
    7322:	99 82       	std	Y+1, r9	; 0x01
    7324:	aa 82       	std	Y+2, r10	; 0x02
    7326:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 99] = ROL(key->rk[ 91] + delta[0][19], 11);
    7328:	81 e8       	ldi	r24, 0x81	; 129
    732a:	88 1a       	sub	r8, r24
    732c:	80 ee       	ldi	r24, 0xE0	; 224
    732e:	98 0a       	sbc	r9, r24
    7330:	81 e2       	ldi	r24, 0x21	; 33
    7332:	a8 0a       	sbc	r10, r24
    7334:	81 eb       	ldi	r24, 0xB1	; 177
    7336:	b8 0a       	sbc	r11, r24
    7338:	75 01       	movw	r14, r10
    733a:	64 01       	movw	r12, r8
    733c:	15 e1       	ldi	r17, 0x15	; 21
    733e:	f6 94       	lsr	r15
    7340:	e7 94       	ror	r14
    7342:	d7 94       	ror	r13
    7344:	c7 94       	ror	r12
    7346:	1a 95       	dec	r17
    7348:	d1 f7       	brne	.-12     	; 0x733e <__stack+0x333f>
    734a:	0b e0       	ldi	r16, 0x0B	; 11
    734c:	88 0c       	add	r8, r8
    734e:	99 1c       	adc	r9, r9
    7350:	aa 1c       	adc	r10, r10
    7352:	bb 1c       	adc	r11, r11
    7354:	0a 95       	dec	r16
    7356:	d1 f7       	brne	.-12     	; 0x734c <__stack+0x334d>
    7358:	8c 28       	or	r8, r12
    735a:	9d 28       	or	r9, r13
    735c:	ae 28       	or	r10, r14
    735e:	bf 28       	or	r11, r15
    7360:	a0 96       	adiw	r28, 0x20	; 32
    7362:	88 82       	st	Y, r8
    7364:	99 82       	std	Y+1, r9	; 0x01
    7366:	aa 82       	std	Y+2, r10	; 0x02
    7368:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[107] = ROL(key->rk[ 99] + delta[1][22], 17);
    736a:	86 e6       	ldi	r24, 0x66	; 102
    736c:	88 1a       	sub	r8, r24
    736e:	87 ee       	ldi	r24, 0xE7	; 231
    7370:	98 0a       	sbc	r9, r24
    7372:	8e e6       	ldi	r24, 0x6E	; 110
    7374:	a8 0a       	sbc	r10, r24
    7376:	8f e3       	ldi	r24, 0x3F	; 63
    7378:	b8 0a       	sbc	r11, r24
    737a:	75 01       	movw	r14, r10
    737c:	64 01       	movw	r12, r8
    737e:	8f e0       	ldi	r24, 0x0F	; 15
    7380:	f6 94       	lsr	r15
    7382:	e7 94       	ror	r14
    7384:	d7 94       	ror	r13
    7386:	c7 94       	ror	r12
    7388:	8a 95       	dec	r24
    738a:	d1 f7       	brne	.-12     	; 0x7380 <__stack+0x3381>
    738c:	91 e1       	ldi	r25, 0x11	; 17
    738e:	88 0c       	add	r8, r8
    7390:	99 1c       	adc	r9, r9
    7392:	aa 1c       	adc	r10, r10
    7394:	bb 1c       	adc	r11, r11
    7396:	9a 95       	dec	r25
    7398:	d1 f7       	brne	.-12     	; 0x738e <__stack+0x338f>
    739a:	8c 28       	or	r8, r12
    739c:	9d 28       	or	r9, r13
    739e:	ae 28       	or	r10, r14
    73a0:	bf 28       	or	r11, r15
    73a2:	a0 96       	adiw	r28, 0x20	; 32
    73a4:	88 82       	st	Y, r8
    73a6:	99 82       	std	Y+1, r9	; 0x01
    73a8:	aa 82       	std	Y+2, r10	; 0x02
    73aa:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[115] = ROL(key->rk[107] + delta[3][20],  3);
    73ac:	8d e0       	ldi	r24, 0x0D	; 13
    73ae:	88 1a       	sub	r8, r24
    73b0:	82 e7       	ldi	r24, 0x72	; 114
    73b2:	98 0a       	sbc	r9, r24
    73b4:	88 e3       	ldi	r24, 0x38	; 56
    73b6:	a8 0a       	sbc	r10, r24
    73b8:	81 ef       	ldi	r24, 0xF1	; 241
    73ba:	b8 0a       	sbc	r11, r24
    73bc:	75 01       	movw	r14, r10
    73be:	64 01       	movw	r12, r8
    73c0:	6d e1       	ldi	r22, 0x1D	; 29
    73c2:	f6 94       	lsr	r15
    73c4:	e7 94       	ror	r14
    73c6:	d7 94       	ror	r13
    73c8:	c7 94       	ror	r12
    73ca:	6a 95       	dec	r22
    73cc:	d1 f7       	brne	.-12     	; 0x73c2 <__stack+0x33c3>
    73ce:	73 e0       	ldi	r23, 0x03	; 3
    73d0:	88 0c       	add	r8, r8
    73d2:	99 1c       	adc	r9, r9
    73d4:	aa 1c       	adc	r10, r10
    73d6:	bb 1c       	adc	r11, r11
    73d8:	7a 95       	dec	r23
    73da:	d1 f7       	brne	.-12     	; 0x73d0 <__stack+0x33d1>
    73dc:	8c 28       	or	r8, r12
    73de:	9d 28       	or	r9, r13
    73e0:	ae 28       	or	r10, r14
    73e2:	bf 28       	or	r11, r15
    73e4:	a0 96       	adiw	r28, 0x20	; 32
    73e6:	88 82       	st	Y, r8
    73e8:	99 82       	std	Y+1, r9	; 0x01
    73ea:	aa 82       	std	Y+2, r10	; 0x02
    73ec:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[123] = ROL(key->rk[115] + delta[4][23], 11);
    73ee:	8e ea       	ldi	r24, 0xAE	; 174
    73f0:	88 1a       	sub	r8, r24
    73f2:	80 e5       	ldi	r24, 0x50	; 80
    73f4:	98 0a       	sbc	r9, r24
    73f6:	87 ec       	ldi	r24, 0xC7	; 199
    73f8:	a8 0a       	sbc	r10, r24
    73fa:	80 eb       	ldi	r24, 0xB0	; 176
    73fc:	b8 0a       	sbc	r11, r24
    73fe:	75 01       	movw	r14, r10
    7400:	64 01       	movw	r12, r8
    7402:	15 e1       	ldi	r17, 0x15	; 21
    7404:	f6 94       	lsr	r15
    7406:	e7 94       	ror	r14
    7408:	d7 94       	ror	r13
    740a:	c7 94       	ror	r12
    740c:	1a 95       	dec	r17
    740e:	d1 f7       	brne	.-12     	; 0x7404 <__stack+0x3405>
    7410:	0b e0       	ldi	r16, 0x0B	; 11
    7412:	88 0c       	add	r8, r8
    7414:	99 1c       	adc	r9, r9
    7416:	aa 1c       	adc	r10, r10
    7418:	bb 1c       	adc	r11, r11
    741a:	0a 95       	dec	r16
    741c:	d1 f7       	brne	.-12     	; 0x7412 <__stack+0x3413>
    741e:	8c 28       	or	r8, r12
    7420:	9d 28       	or	r9, r13
    7422:	ae 28       	or	r10, r14
    7424:	bf 28       	or	r11, r15
    7426:	a0 96       	adiw	r28, 0x20	; 32
    7428:	88 82       	st	Y, r8
    742a:	99 82       	std	Y+1, r9	; 0x01
    742c:	aa 82       	std	Y+2, r10	; 0x02
    742e:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[131] = ROL(key->rk[123] + delta[5][26], 17);
    7430:	88 e9       	ldi	r24, 0x98	; 152
    7432:	88 1a       	sub	r8, r24
    7434:	88 ee       	ldi	r24, 0xE8	; 232
    7436:	98 0a       	sbc	r9, r24
    7438:	81 ee       	ldi	r24, 0xE1	; 225
    743a:	a8 0a       	sbc	r10, r24
    743c:	84 ed       	ldi	r24, 0xD4	; 212
    743e:	b8 0a       	sbc	r11, r24
    7440:	75 01       	movw	r14, r10
    7442:	64 01       	movw	r12, r8
    7444:	8f e0       	ldi	r24, 0x0F	; 15
    7446:	f6 94       	lsr	r15
    7448:	e7 94       	ror	r14
    744a:	d7 94       	ror	r13
    744c:	c7 94       	ror	r12
    744e:	8a 95       	dec	r24
    7450:	d1 f7       	brne	.-12     	; 0x7446 <__stack+0x3447>
    7452:	91 e1       	ldi	r25, 0x11	; 17
    7454:	88 0c       	add	r8, r8
    7456:	99 1c       	adc	r9, r9
    7458:	aa 1c       	adc	r10, r10
    745a:	bb 1c       	adc	r11, r11
    745c:	9a 95       	dec	r25
    745e:	d1 f7       	brne	.-12     	; 0x7454 <__stack+0x3455>
    7460:	8c 28       	or	r8, r12
    7462:	9d 28       	or	r9, r13
    7464:	ae 28       	or	r10, r14
    7466:	bf 28       	or	r11, r15
    7468:	a0 96       	adiw	r28, 0x20	; 32
    746a:	88 82       	st	Y, r8
    746c:	99 82       	std	Y+1, r9	; 0x01
    746e:	aa 82       	std	Y+2, r10	; 0x02
    7470:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[139] = ROL(key->rk[131] + delta[7][24],  3);
    7472:	87 ef       	ldi	r24, 0xF7	; 247
    7474:	88 1a       	sub	r8, r24
    7476:	8b e3       	ldi	r24, 0x3B	; 59
    7478:	98 0a       	sbc	r9, r24
    747a:	8a e1       	ldi	r24, 0x1A	; 26
    747c:	a8 0a       	sbc	r10, r24
    747e:	88 ea       	ldi	r24, 0xA8	; 168
    7480:	b8 0a       	sbc	r11, r24
    7482:	75 01       	movw	r14, r10
    7484:	64 01       	movw	r12, r8
    7486:	6d e1       	ldi	r22, 0x1D	; 29
    7488:	f6 94       	lsr	r15
    748a:	e7 94       	ror	r14
    748c:	d7 94       	ror	r13
    748e:	c7 94       	ror	r12
    7490:	6a 95       	dec	r22
    7492:	d1 f7       	brne	.-12     	; 0x7488 <__stack+0x3489>
    7494:	73 e0       	ldi	r23, 0x03	; 3
    7496:	88 0c       	add	r8, r8
    7498:	99 1c       	adc	r9, r9
    749a:	aa 1c       	adc	r10, r10
    749c:	bb 1c       	adc	r11, r11
    749e:	7a 95       	dec	r23
    74a0:	d1 f7       	brne	.-12     	; 0x7496 <__stack+0x3497>
    74a2:	8c 28       	or	r8, r12
    74a4:	9d 28       	or	r9, r13
    74a6:	ae 28       	or	r10, r14
    74a8:	bf 28       	or	r11, r15
    74aa:	a0 96       	adiw	r28, 0x20	; 32
    74ac:	88 82       	st	Y, r8
    74ae:	99 82       	std	Y+1, r9	; 0x01
    74b0:	aa 82       	std	Y+2, r10	; 0x02
    74b2:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[147] = ROL(key->rk[139] + delta[0][27], 11);
    74b4:	82 eb       	ldi	r24, 0xB2	; 178
    74b6:	88 1a       	sub	r8, r24
    74b8:	80 e8       	ldi	r24, 0x80	; 128
    74ba:	98 0a       	sbc	r9, r24
    74bc:	80 ee       	ldi	r24, 0xE0	; 224
    74be:	a8 0a       	sbc	r10, r24
    74c0:	81 e2       	ldi	r24, 0x21	; 33
    74c2:	b8 0a       	sbc	r11, r24
    74c4:	75 01       	movw	r14, r10
    74c6:	64 01       	movw	r12, r8
    74c8:	15 e1       	ldi	r17, 0x15	; 21
    74ca:	f6 94       	lsr	r15
    74cc:	e7 94       	ror	r14
    74ce:	d7 94       	ror	r13
    74d0:	c7 94       	ror	r12
    74d2:	1a 95       	dec	r17
    74d4:	d1 f7       	brne	.-12     	; 0x74ca <__stack+0x34cb>
    74d6:	0b e0       	ldi	r16, 0x0B	; 11
    74d8:	88 0c       	add	r8, r8
    74da:	99 1c       	adc	r9, r9
    74dc:	aa 1c       	adc	r10, r10
    74de:	bb 1c       	adc	r11, r11
    74e0:	0a 95       	dec	r16
    74e2:	d1 f7       	brne	.-12     	; 0x74d8 <__stack+0x34d9>
    74e4:	8c 28       	or	r8, r12
    74e6:	9d 28       	or	r9, r13
    74e8:	ae 28       	or	r10, r14
    74ea:	bf 28       	or	r11, r15
    74ec:	a0 96       	adiw	r28, 0x20	; 32
    74ee:	88 82       	st	Y, r8
    74f0:	99 82       	std	Y+1, r9	; 0x01
    74f2:	aa 82       	std	Y+2, r10	; 0x02
    74f4:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[155] = ROL(key->rk[147] + delta[1][30], 17);
    74f6:	80 e4       	ldi	r24, 0x40	; 64
    74f8:	88 1a       	sub	r8, r24
    74fa:	85 e6       	ldi	r24, 0x65	; 101
    74fc:	98 0a       	sbc	r9, r24
    74fe:	87 ee       	ldi	r24, 0xE7	; 231
    7500:	a8 0a       	sbc	r10, r24
    7502:	8e e6       	ldi	r24, 0x6E	; 110
    7504:	b8 0a       	sbc	r11, r24
    7506:	75 01       	movw	r14, r10
    7508:	64 01       	movw	r12, r8
    750a:	8f e0       	ldi	r24, 0x0F	; 15
    750c:	f6 94       	lsr	r15
    750e:	e7 94       	ror	r14
    7510:	d7 94       	ror	r13
    7512:	c7 94       	ror	r12
    7514:	8a 95       	dec	r24
    7516:	d1 f7       	brne	.-12     	; 0x750c <__stack+0x350d>
    7518:	91 e1       	ldi	r25, 0x11	; 17
    751a:	88 0c       	add	r8, r8
    751c:	99 1c       	adc	r9, r9
    751e:	aa 1c       	adc	r10, r10
    7520:	bb 1c       	adc	r11, r11
    7522:	9a 95       	dec	r25
    7524:	d1 f7       	brne	.-12     	; 0x751a <__stack+0x351b>
    7526:	8c 28       	or	r8, r12
    7528:	9d 28       	or	r9, r13
    752a:	ae 28       	or	r10, r14
    752c:	bf 28       	or	r11, r15
    752e:	a0 96       	adiw	r28, 0x20	; 32
    7530:	88 82       	st	Y, r8
    7532:	99 82       	std	Y+1, r9	; 0x01
    7534:	aa 82       	std	Y+2, r10	; 0x02
    7536:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[163] = ROL(key->rk[155] + delta[3][28],  3);
    7538:	82 ef       	ldi	r24, 0xF2	; 242
    753a:	88 1a       	sub	r8, r24
    753c:	8c e0       	ldi	r24, 0x0C	; 12
    753e:	98 0a       	sbc	r9, r24
    7540:	82 e7       	ldi	r24, 0x72	; 114
    7542:	a8 0a       	sbc	r10, r24
    7544:	88 e3       	ldi	r24, 0x38	; 56
    7546:	b8 0a       	sbc	r11, r24
    7548:	75 01       	movw	r14, r10
    754a:	64 01       	movw	r12, r8
    754c:	6d e1       	ldi	r22, 0x1D	; 29
    754e:	f6 94       	lsr	r15
    7550:	e7 94       	ror	r14
    7552:	d7 94       	ror	r13
    7554:	c7 94       	ror	r12
    7556:	6a 95       	dec	r22
    7558:	d1 f7       	brne	.-12     	; 0x754e <__stack+0x354f>
    755a:	73 e0       	ldi	r23, 0x03	; 3
    755c:	88 0c       	add	r8, r8
    755e:	99 1c       	adc	r9, r9
    7560:	aa 1c       	adc	r10, r10
    7562:	bb 1c       	adc	r11, r11
    7564:	7a 95       	dec	r23
    7566:	d1 f7       	brne	.-12     	; 0x755c <__stack+0x355d>
    7568:	8c 28       	or	r8, r12
    756a:	9d 28       	or	r9, r13
    756c:	ae 28       	or	r10, r14
    756e:	bf 28       	or	r11, r15
    7570:	a0 96       	adiw	r28, 0x20	; 32
    7572:	88 82       	st	Y, r8
    7574:	99 82       	std	Y+1, r9	; 0x01
    7576:	aa 82       	std	Y+2, r10	; 0x02
    7578:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[171] = ROL(key->rk[163] + delta[4][31], 11);
    757a:	81 eb       	ldi	r24, 0xB1	; 177
    757c:	88 1a       	sub	r8, r24
    757e:	8d ea       	ldi	r24, 0xAD	; 173
    7580:	98 0a       	sbc	r9, r24
    7582:	80 e5       	ldi	r24, 0x50	; 80
    7584:	a8 0a       	sbc	r10, r24
    7586:	87 ec       	ldi	r24, 0xC7	; 199
    7588:	b8 0a       	sbc	r11, r24
    758a:	75 01       	movw	r14, r10
    758c:	64 01       	movw	r12, r8
    758e:	15 e1       	ldi	r17, 0x15	; 21
    7590:	f6 94       	lsr	r15
    7592:	e7 94       	ror	r14
    7594:	d7 94       	ror	r13
    7596:	c7 94       	ror	r12
    7598:	1a 95       	dec	r17
    759a:	d1 f7       	brne	.-12     	; 0x7590 <__stack+0x3591>
    759c:	0b e0       	ldi	r16, 0x0B	; 11
    759e:	88 0c       	add	r8, r8
    75a0:	99 1c       	adc	r9, r9
    75a2:	aa 1c       	adc	r10, r10
    75a4:	bb 1c       	adc	r11, r11
    75a6:	0a 95       	dec	r16
    75a8:	d1 f7       	brne	.-12     	; 0x759e <__stack+0x359f>
    75aa:	8c 28       	or	r8, r12
    75ac:	9d 28       	or	r9, r13
    75ae:	ae 28       	or	r10, r14
    75b0:	bf 28       	or	r11, r15
    75b2:	a0 96       	adiw	r28, 0x20	; 32
    75b4:	88 82       	st	Y, r8
    75b6:	99 82       	std	Y+1, r9	; 0x01
    75b8:	aa 82       	std	Y+2, r10	; 0x02
    75ba:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[179] = ROL(key->rk[171] + delta[5][ 2], 17);
    75bc:	85 ed       	ldi	r24, 0xD5	; 213
    75be:	88 1a       	sub	r8, r24
    75c0:	87 e9       	ldi	r24, 0x97	; 151
    75c2:	98 0a       	sbc	r9, r24
    75c4:	88 ee       	ldi	r24, 0xE8	; 232
    75c6:	a8 0a       	sbc	r10, r24
    75c8:	81 ee       	ldi	r24, 0xE1	; 225
    75ca:	b8 0a       	sbc	r11, r24
    75cc:	75 01       	movw	r14, r10
    75ce:	64 01       	movw	r12, r8
    75d0:	8f e0       	ldi	r24, 0x0F	; 15
    75d2:	f6 94       	lsr	r15
    75d4:	e7 94       	ror	r14
    75d6:	d7 94       	ror	r13
    75d8:	c7 94       	ror	r12
    75da:	8a 95       	dec	r24
    75dc:	d1 f7       	brne	.-12     	; 0x75d2 <__stack+0x35d3>
    75de:	91 e1       	ldi	r25, 0x11	; 17
    75e0:	88 0c       	add	r8, r8
    75e2:	99 1c       	adc	r9, r9
    75e4:	aa 1c       	adc	r10, r10
    75e6:	bb 1c       	adc	r11, r11
    75e8:	9a 95       	dec	r25
    75ea:	d1 f7       	brne	.-12     	; 0x75e0 <__stack+0x35e1>
    75ec:	8c 28       	or	r8, r12
    75ee:	9d 28       	or	r9, r13
    75f0:	ae 28       	or	r10, r14
    75f2:	bf 28       	or	r11, r15
    75f4:	a0 96       	adiw	r28, 0x20	; 32
    75f6:	88 82       	st	Y, r8
    75f8:	99 82       	std	Y+1, r9	; 0x01
    75fa:	aa 82       	std	Y+2, r10	; 0x02
    75fc:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[187] = ROL(key->rk[179] + delta[7][ 0],  3);
    75fe:	89 ea       	ldi	r24, 0xA9	; 169
    7600:	88 1a       	sub	r8, r24
    7602:	86 ef       	ldi	r24, 0xF6	; 246
    7604:	98 0a       	sbc	r9, r24
    7606:	8b e3       	ldi	r24, 0x3B	; 59
    7608:	a8 0a       	sbc	r10, r24
    760a:	8a e1       	ldi	r24, 0x1A	; 26
    760c:	b8 0a       	sbc	r11, r24
    760e:	75 01       	movw	r14, r10
    7610:	64 01       	movw	r12, r8
    7612:	6d e1       	ldi	r22, 0x1D	; 29
    7614:	f6 94       	lsr	r15
    7616:	e7 94       	ror	r14
    7618:	d7 94       	ror	r13
    761a:	c7 94       	ror	r12
    761c:	6a 95       	dec	r22
    761e:	d1 f7       	brne	.-12     	; 0x7614 <__stack+0x3615>
    7620:	73 e0       	ldi	r23, 0x03	; 3
    7622:	88 0c       	add	r8, r8
    7624:	99 1c       	adc	r9, r9
    7626:	aa 1c       	adc	r10, r10
    7628:	bb 1c       	adc	r11, r11
    762a:	7a 95       	dec	r23
    762c:	d1 f7       	brne	.-12     	; 0x7622 <__stack+0x3623>
    762e:	c8 28       	or	r12, r8
    7630:	d9 28       	or	r13, r9
    7632:	ea 28       	or	r14, r10
    7634:	fb 28       	or	r15, r11
    7636:	a0 96       	adiw	r28, 0x20	; 32
    7638:	c8 82       	st	Y, r12
    763a:	d9 82       	std	Y+1, r13	; 0x01
    763c:	ea 82       	std	Y+2, r14	; 0x02
    763e:	fb 82       	std	Y+3, r15	; 0x03

		key->rk[  4] = ROL(loadU32(_mk[4]) + delta[0][ 4], 13);
    7640:	50 96       	adiw	r26, 0x10	; 16
    7642:	8d 90       	ld	r8, X+
    7644:	9d 90       	ld	r9, X+
    7646:	ad 90       	ld	r10, X+
    7648:	bc 90       	ld	r11, X
    764a:	53 97       	sbiw	r26, 0x13	; 19
    764c:	84 e4       	ldi	r24, 0x44	; 68
    764e:	88 1a       	sub	r8, r24
    7650:	82 e6       	ldi	r24, 0x62	; 98
    7652:	98 0a       	sbc	r9, r24
    7654:	81 e0       	ldi	r24, 0x01	; 1
    7656:	a8 0a       	sbc	r10, r24
    7658:	81 ec       	ldi	r24, 0xC1	; 193
    765a:	b8 0a       	sbc	r11, r24
    765c:	75 01       	movw	r14, r10
    765e:	64 01       	movw	r12, r8
    7660:	13 e1       	ldi	r17, 0x13	; 19
    7662:	f6 94       	lsr	r15
    7664:	e7 94       	ror	r14
    7666:	d7 94       	ror	r13
    7668:	c7 94       	ror	r12
    766a:	1a 95       	dec	r17
    766c:	d1 f7       	brne	.-12     	; 0x7662 <__stack+0x3663>
    766e:	0d e0       	ldi	r16, 0x0D	; 13
    7670:	88 0c       	add	r8, r8
    7672:	99 1c       	adc	r9, r9
    7674:	aa 1c       	adc	r10, r10
    7676:	bb 1c       	adc	r11, r11
    7678:	0a 95       	dec	r16
    767a:	d1 f7       	brne	.-12     	; 0x7670 <__stack+0x3671>
    767c:	8c 28       	or	r8, r12
    767e:	9d 28       	or	r9, r13
    7680:	ae 28       	or	r10, r14
    7682:	bf 28       	or	r11, r15
    7684:	80 8a       	std	Z+16, r8	; 0x10
    7686:	91 8a       	std	Z+17, r9	; 0x11
    7688:	a2 8a       	std	Z+18, r10	; 0x12
    768a:	b3 8a       	std	Z+19, r11	; 0x13
		key->rk[ 12] = ROL(key->rk[  4] + delta[2][ 2],  1);
    768c:	75 01       	movw	r14, r10
    768e:	64 01       	movw	r12, r8
    7690:	87 ed       	ldi	r24, 0xD7	; 215
    7692:	c8 1a       	sub	r12, r24
    7694:	8d e0       	ldi	r24, 0x0D	; 13
    7696:	d8 0a       	sbc	r13, r24
    7698:	86 e7       	ldi	r24, 0x76	; 118
    769a:	e8 0a       	sbc	r14, r24
    769c:	88 e1       	ldi	r24, 0x18	; 24
    769e:	f8 0a       	sbc	r15, r24
    76a0:	cc 0c       	add	r12, r12
    76a2:	dd 1c       	adc	r13, r13
    76a4:	ee 1c       	adc	r14, r14
    76a6:	ff 1c       	adc	r15, r15
    76a8:	c1 1c       	adc	r12, r1
    76aa:	c0 aa       	std	Z+48, r12	; 0x30
    76ac:	d1 aa       	std	Z+49, r13	; 0x31
    76ae:	e2 aa       	std	Z+50, r14	; 0x32
    76b0:	f3 aa       	std	Z+51, r15	; 0x33
		key->rk[ 20] = ROL(key->rk[ 12] + delta[3][ 5],  6);
    76b2:	46 01       	movw	r8, r12
    76b4:	57 01       	movw	r10, r14
    76b6:	81 e7       	ldi	r24, 0x71	; 113
    76b8:	88 1a       	sub	r8, r24
    76ba:	82 ee       	ldi	r24, 0xE2	; 226
    76bc:	98 0a       	sbc	r9, r24
    76be:	89 e1       	ldi	r24, 0x19	; 25
    76c0:	a8 0a       	sbc	r10, r24
    76c2:	84 ee       	ldi	r24, 0xE4	; 228
    76c4:	b8 0a       	sbc	r11, r24
    76c6:	75 01       	movw	r14, r10
    76c8:	64 01       	movw	r12, r8
    76ca:	8a e1       	ldi	r24, 0x1A	; 26
    76cc:	f6 94       	lsr	r15
    76ce:	e7 94       	ror	r14
    76d0:	d7 94       	ror	r13
    76d2:	c7 94       	ror	r12
    76d4:	8a 95       	dec	r24
    76d6:	d1 f7       	brne	.-12     	; 0x76cc <__stack+0x36cd>
    76d8:	96 e0       	ldi	r25, 0x06	; 6
    76da:	88 0c       	add	r8, r8
    76dc:	99 1c       	adc	r9, r9
    76de:	aa 1c       	adc	r10, r10
    76e0:	bb 1c       	adc	r11, r11
    76e2:	9a 95       	dec	r25
    76e4:	d1 f7       	brne	.-12     	; 0x76da <__stack+0x36db>
    76e6:	8c 28       	or	r8, r12
    76e8:	9d 28       	or	r9, r13
    76ea:	ae 28       	or	r10, r14
    76ec:	bf 28       	or	r11, r15
    76ee:	cc 59       	subi	r28, 0x9C	; 156
    76f0:	d2 40       	sbci	r29, 0x02	; 2
    76f2:	88 82       	st	Y, r8
    76f4:	99 82       	std	Y+1, r9	; 0x01
    76f6:	aa 82       	std	Y+2, r10	; 0x02
    76f8:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 28] = ROL(key->rk[ 20] + delta[4][ 8], 13);
    76fa:	8f e8       	ldi	r24, 0x8F	; 143
    76fc:	88 1a       	sub	r8, r24
    76fe:	81 e6       	ldi	r24, 0x61	; 97
    7700:	98 0a       	sbc	r9, r24
    7702:	8b e5       	ldi	r24, 0x5B	; 91
    7704:	a8 0a       	sbc	r10, r24
    7706:	81 ea       	ldi	r24, 0xA1	; 161
    7708:	b8 0a       	sbc	r11, r24
    770a:	75 01       	movw	r14, r10
    770c:	64 01       	movw	r12, r8
    770e:	63 e1       	ldi	r22, 0x13	; 19
    7710:	f6 94       	lsr	r15
    7712:	e7 94       	ror	r14
    7714:	d7 94       	ror	r13
    7716:	c7 94       	ror	r12
    7718:	6a 95       	dec	r22
    771a:	d1 f7       	brne	.-12     	; 0x7710 <__stack+0x3711>
    771c:	7d e0       	ldi	r23, 0x0D	; 13
    771e:	88 0c       	add	r8, r8
    7720:	99 1c       	adc	r9, r9
    7722:	aa 1c       	adc	r10, r10
    7724:	bb 1c       	adc	r11, r11
    7726:	7a 95       	dec	r23
    7728:	d1 f7       	brne	.-12     	; 0x771e <__stack+0x371f>
    772a:	8c 28       	or	r8, r12
    772c:	9d 28       	or	r9, r13
    772e:	ae 28       	or	r10, r14
    7730:	bf 28       	or	r11, r15
    7732:	a0 96       	adiw	r28, 0x20	; 32
    7734:	88 82       	st	Y, r8
    7736:	99 82       	std	Y+1, r9	; 0x01
    7738:	aa 82       	std	Y+2, r10	; 0x02
    773a:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 36] = ROL(key->rk[ 28] + delta[6][ 6],  1);
    773c:	75 01       	movw	r14, r10
    773e:	64 01       	movw	r12, r8
    7740:	88 e4       	ldi	r24, 0x48	; 72
    7742:	c8 1a       	sub	r12, r24
    7744:	85 e7       	ldi	r24, 0x75	; 117
    7746:	d8 0a       	sbc	r13, r24
    7748:	83 e4       	ldi	r24, 0x43	; 67
    774a:	e8 0a       	sbc	r14, r24
    774c:	8c ee       	ldi	r24, 0xEC	; 236
    774e:	f8 0a       	sbc	r15, r24
    7750:	cc 0c       	add	r12, r12
    7752:	dd 1c       	adc	r13, r13
    7754:	ee 1c       	adc	r14, r14
    7756:	ff 1c       	adc	r15, r15
    7758:	c1 1c       	adc	r12, r1
    775a:	a0 96       	adiw	r28, 0x20	; 32
    775c:	c8 82       	st	Y, r12
    775e:	d9 82       	std	Y+1, r13	; 0x01
    7760:	ea 82       	std	Y+2, r14	; 0x02
    7762:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 44] = ROL(key->rk[ 36] + delta[7][ 9],  6);
    7764:	46 01       	movw	r8, r12
    7766:	57 01       	movw	r10, r14
    7768:	85 e3       	ldi	r24, 0x35	; 53
    776a:	88 1a       	sub	r8, r24
    776c:	80 e5       	ldi	r24, 0x50	; 80
    776e:	98 0a       	sbc	r9, r24
    7770:	8d ee       	ldi	r24, 0xED	; 237
    7772:	a8 0a       	sbc	r10, r24
    7774:	87 e7       	ldi	r24, 0x77	; 119
    7776:	b8 0a       	sbc	r11, r24
    7778:	75 01       	movw	r14, r10
    777a:	64 01       	movw	r12, r8
    777c:	1a e1       	ldi	r17, 0x1A	; 26
    777e:	f6 94       	lsr	r15
    7780:	e7 94       	ror	r14
    7782:	d7 94       	ror	r13
    7784:	c7 94       	ror	r12
    7786:	1a 95       	dec	r17
    7788:	d1 f7       	brne	.-12     	; 0x777e <__stack+0x377f>
    778a:	06 e0       	ldi	r16, 0x06	; 6
    778c:	88 0c       	add	r8, r8
    778e:	99 1c       	adc	r9, r9
    7790:	aa 1c       	adc	r10, r10
    7792:	bb 1c       	adc	r11, r11
    7794:	0a 95       	dec	r16
    7796:	d1 f7       	brne	.-12     	; 0x778c <__stack+0x378d>
    7798:	8c 28       	or	r8, r12
    779a:	9d 28       	or	r9, r13
    779c:	ae 28       	or	r10, r14
    779e:	bf 28       	or	r11, r15
    77a0:	a0 96       	adiw	r28, 0x20	; 32
    77a2:	88 82       	st	Y, r8
    77a4:	99 82       	std	Y+1, r9	; 0x01
    77a6:	aa 82       	std	Y+2, r10	; 0x02
    77a8:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 52] = ROL(key->rk[ 44] + delta[0][12], 13);
    77aa:	82 ec       	ldi	r24, 0xC2	; 194
    77ac:	88 1a       	sub	r8, r24
    77ae:	83 e4       	ldi	r24, 0x43	; 67
    77b0:	98 0a       	sbc	r9, r24
    77b2:	82 e6       	ldi	r24, 0x62	; 98
    77b4:	a8 0a       	sbc	r10, r24
    77b6:	81 e0       	ldi	r24, 0x01	; 1
    77b8:	b8 0a       	sbc	r11, r24
    77ba:	75 01       	movw	r14, r10
    77bc:	64 01       	movw	r12, r8
    77be:	83 e1       	ldi	r24, 0x13	; 19
    77c0:	f6 94       	lsr	r15
    77c2:	e7 94       	ror	r14
    77c4:	d7 94       	ror	r13
    77c6:	c7 94       	ror	r12
    77c8:	8a 95       	dec	r24
    77ca:	d1 f7       	brne	.-12     	; 0x77c0 <__stack+0x37c1>
    77cc:	9d e0       	ldi	r25, 0x0D	; 13
    77ce:	88 0c       	add	r8, r8
    77d0:	99 1c       	adc	r9, r9
    77d2:	aa 1c       	adc	r10, r10
    77d4:	bb 1c       	adc	r11, r11
    77d6:	9a 95       	dec	r25
    77d8:	d1 f7       	brne	.-12     	; 0x77ce <__stack+0x37cf>
    77da:	8c 28       	or	r8, r12
    77dc:	9d 28       	or	r9, r13
    77de:	ae 28       	or	r10, r14
    77e0:	bf 28       	or	r11, r15
    77e2:	a0 96       	adiw	r28, 0x20	; 32
    77e4:	88 82       	st	Y, r8
    77e6:	99 82       	std	Y+1, r9	; 0x01
    77e8:	aa 82       	std	Y+2, r10	; 0x02
    77ea:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 60] = ROL(key->rk[ 52] + delta[2][10],  1);
    77ec:	75 01       	movw	r14, r10
    77ee:	64 01       	movw	r12, r8
    77f0:	89 e1       	ldi	r24, 0x19	; 25
    77f2:	c8 1a       	sub	r12, r24
    77f4:	86 ed       	ldi	r24, 0xD6	; 214
    77f6:	d8 0a       	sbc	r13, r24
    77f8:	8d e0       	ldi	r24, 0x0D	; 13
    77fa:	e8 0a       	sbc	r14, r24
    77fc:	86 e7       	ldi	r24, 0x76	; 118
    77fe:	f8 0a       	sbc	r15, r24
    7800:	cc 0c       	add	r12, r12
    7802:	dd 1c       	adc	r13, r13
    7804:	ee 1c       	adc	r14, r14
    7806:	ff 1c       	adc	r15, r15
    7808:	c1 1c       	adc	r12, r1
    780a:	a0 96       	adiw	r28, 0x20	; 32
    780c:	c8 82       	st	Y, r12
    780e:	d9 82       	std	Y+1, r13	; 0x01
    7810:	ea 82       	std	Y+2, r14	; 0x02
    7812:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 68] = ROL(key->rk[ 60] + delta[3][13],  6);
    7814:	46 01       	movw	r8, r12
    7816:	57 01       	movw	r10, r14
    7818:	85 ee       	ldi	r24, 0xE5	; 229
    781a:	88 1a       	sub	r8, r24
    781c:	80 e7       	ldi	r24, 0x70	; 112
    781e:	98 0a       	sbc	r9, r24
    7820:	82 ee       	ldi	r24, 0xE2	; 226
    7822:	a8 0a       	sbc	r10, r24
    7824:	89 e1       	ldi	r24, 0x19	; 25
    7826:	b8 0a       	sbc	r11, r24
    7828:	75 01       	movw	r14, r10
    782a:	64 01       	movw	r12, r8
    782c:	6a e1       	ldi	r22, 0x1A	; 26
    782e:	f6 94       	lsr	r15
    7830:	e7 94       	ror	r14
    7832:	d7 94       	ror	r13
    7834:	c7 94       	ror	r12
    7836:	6a 95       	dec	r22
    7838:	d1 f7       	brne	.-12     	; 0x782e <__stack+0x382f>
    783a:	76 e0       	ldi	r23, 0x06	; 6
    783c:	88 0c       	add	r8, r8
    783e:	99 1c       	adc	r9, r9
    7840:	aa 1c       	adc	r10, r10
    7842:	bb 1c       	adc	r11, r11
    7844:	7a 95       	dec	r23
    7846:	d1 f7       	brne	.-12     	; 0x783c <__stack+0x383d>
    7848:	8c 28       	or	r8, r12
    784a:	9d 28       	or	r9, r13
    784c:	ae 28       	or	r10, r14
    784e:	bf 28       	or	r11, r15
    7850:	a0 96       	adiw	r28, 0x20	; 32
    7852:	88 82       	st	Y, r8
    7854:	99 82       	std	Y+1, r9	; 0x01
    7856:	aa 82       	std	Y+2, r10	; 0x02
    7858:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 76] = ROL(key->rk[ 68] + delta[4][16], 13);
    785a:	82 ea       	ldi	r24, 0xA2	; 162
    785c:	88 1a       	sub	r8, r24
    785e:	8e e8       	ldi	r24, 0x8E	; 142
    7860:	98 0a       	sbc	r9, r24
    7862:	81 e6       	ldi	r24, 0x61	; 97
    7864:	a8 0a       	sbc	r10, r24
    7866:	8b e5       	ldi	r24, 0x5B	; 91
    7868:	b8 0a       	sbc	r11, r24
    786a:	75 01       	movw	r14, r10
    786c:	64 01       	movw	r12, r8
    786e:	13 e1       	ldi	r17, 0x13	; 19
    7870:	f6 94       	lsr	r15
    7872:	e7 94       	ror	r14
    7874:	d7 94       	ror	r13
    7876:	c7 94       	ror	r12
    7878:	1a 95       	dec	r17
    787a:	d1 f7       	brne	.-12     	; 0x7870 <__stack+0x3871>
    787c:	0d e0       	ldi	r16, 0x0D	; 13
    787e:	88 0c       	add	r8, r8
    7880:	99 1c       	adc	r9, r9
    7882:	aa 1c       	adc	r10, r10
    7884:	bb 1c       	adc	r11, r11
    7886:	0a 95       	dec	r16
    7888:	d1 f7       	brne	.-12     	; 0x787e <__stack+0x387f>
    788a:	8c 28       	or	r8, r12
    788c:	9d 28       	or	r9, r13
    788e:	ae 28       	or	r10, r14
    7890:	bf 28       	or	r11, r15
    7892:	a0 96       	adiw	r28, 0x20	; 32
    7894:	88 82       	st	Y, r8
    7896:	99 82       	std	Y+1, r9	; 0x01
    7898:	aa 82       	std	Y+2, r10	; 0x02
    789a:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 84] = ROL(key->rk[ 76] + delta[6][14],  1);
    789c:	75 01       	movw	r14, r10
    789e:	64 01       	movw	r12, r8
    78a0:	8d ee       	ldi	r24, 0xED	; 237
    78a2:	c8 1a       	sub	r12, r24
    78a4:	87 e4       	ldi	r24, 0x47	; 71
    78a6:	d8 0a       	sbc	r13, r24
    78a8:	85 e7       	ldi	r24, 0x75	; 117
    78aa:	e8 0a       	sbc	r14, r24
    78ac:	83 e4       	ldi	r24, 0x43	; 67
    78ae:	f8 0a       	sbc	r15, r24
    78b0:	cc 0c       	add	r12, r12
    78b2:	dd 1c       	adc	r13, r13
    78b4:	ee 1c       	adc	r14, r14
    78b6:	ff 1c       	adc	r15, r15
    78b8:	c1 1c       	adc	r12, r1
    78ba:	a0 96       	adiw	r28, 0x20	; 32
    78bc:	c8 82       	st	Y, r12
    78be:	d9 82       	std	Y+1, r13	; 0x01
    78c0:	ea 82       	std	Y+2, r14	; 0x02
    78c2:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 92] = ROL(key->rk[ 84] + delta[7][17],  6);
    78c4:	46 01       	movw	r8, r12
    78c6:	57 01       	movw	r10, r14
    78c8:	88 e7       	ldi	r24, 0x78	; 120
    78ca:	88 1a       	sub	r8, r24
    78cc:	84 e3       	ldi	r24, 0x34	; 52
    78ce:	98 0a       	sbc	r9, r24
    78d0:	80 e5       	ldi	r24, 0x50	; 80
    78d2:	a8 0a       	sbc	r10, r24
    78d4:	8d ee       	ldi	r24, 0xED	; 237
    78d6:	b8 0a       	sbc	r11, r24
    78d8:	75 01       	movw	r14, r10
    78da:	64 01       	movw	r12, r8
    78dc:	8a e1       	ldi	r24, 0x1A	; 26
    78de:	f6 94       	lsr	r15
    78e0:	e7 94       	ror	r14
    78e2:	d7 94       	ror	r13
    78e4:	c7 94       	ror	r12
    78e6:	8a 95       	dec	r24
    78e8:	d1 f7       	brne	.-12     	; 0x78de <__stack+0x38df>
    78ea:	96 e0       	ldi	r25, 0x06	; 6
    78ec:	88 0c       	add	r8, r8
    78ee:	99 1c       	adc	r9, r9
    78f0:	aa 1c       	adc	r10, r10
    78f2:	bb 1c       	adc	r11, r11
    78f4:	9a 95       	dec	r25
    78f6:	d1 f7       	brne	.-12     	; 0x78ec <__stack+0x38ed>
    78f8:	8c 28       	or	r8, r12
    78fa:	9d 28       	or	r9, r13
    78fc:	ae 28       	or	r10, r14
    78fe:	bf 28       	or	r11, r15
    7900:	a0 96       	adiw	r28, 0x20	; 32
    7902:	88 82       	st	Y, r8
    7904:	99 82       	std	Y+1, r9	; 0x01
    7906:	aa 82       	std	Y+2, r10	; 0x02
    7908:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[100] = ROL(key->rk[ 92] + delta[0][20], 13);
    790a:	82 e0       	ldi	r24, 0x02	; 2
    790c:	88 1a       	sub	r8, r24
    790e:	81 ec       	ldi	r24, 0xC1	; 193
    7910:	98 0a       	sbc	r9, r24
    7912:	83 e4       	ldi	r24, 0x43	; 67
    7914:	a8 0a       	sbc	r10, r24
    7916:	82 e6       	ldi	r24, 0x62	; 98
    7918:	b8 0a       	sbc	r11, r24
    791a:	75 01       	movw	r14, r10
    791c:	64 01       	movw	r12, r8
    791e:	63 e1       	ldi	r22, 0x13	; 19
    7920:	f6 94       	lsr	r15
    7922:	e7 94       	ror	r14
    7924:	d7 94       	ror	r13
    7926:	c7 94       	ror	r12
    7928:	6a 95       	dec	r22
    792a:	d1 f7       	brne	.-12     	; 0x7920 <__stack+0x3921>
    792c:	7d e0       	ldi	r23, 0x0D	; 13
    792e:	88 0c       	add	r8, r8
    7930:	99 1c       	adc	r9, r9
    7932:	aa 1c       	adc	r10, r10
    7934:	bb 1c       	adc	r11, r11
    7936:	7a 95       	dec	r23
    7938:	d1 f7       	brne	.-12     	; 0x792e <__stack+0x392f>
    793a:	8c 28       	or	r8, r12
    793c:	9d 28       	or	r9, r13
    793e:	ae 28       	or	r10, r14
    7940:	bf 28       	or	r11, r15
    7942:	a0 96       	adiw	r28, 0x20	; 32
    7944:	88 82       	st	Y, r8
    7946:	99 82       	std	Y+1, r9	; 0x01
    7948:	aa 82       	std	Y+2, r10	; 0x02
    794a:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[108] = ROL(key->rk[100] + delta[2][18],  1);
    794c:	75 01       	movw	r14, r10
    794e:	64 01       	movw	r12, r8
    7950:	87 e7       	ldi	r24, 0x77	; 119
    7952:	c8 1a       	sub	r12, r24
    7954:	88 e1       	ldi	r24, 0x18	; 24
    7956:	d8 0a       	sbc	r13, r24
    7958:	86 ed       	ldi	r24, 0xD6	; 214
    795a:	e8 0a       	sbc	r14, r24
    795c:	8d e0       	ldi	r24, 0x0D	; 13
    795e:	f8 0a       	sbc	r15, r24
    7960:	cc 0c       	add	r12, r12
    7962:	dd 1c       	adc	r13, r13
    7964:	ee 1c       	adc	r14, r14
    7966:	ff 1c       	adc	r15, r15
    7968:	c1 1c       	adc	r12, r1
    796a:	a0 96       	adiw	r28, 0x20	; 32
    796c:	c8 82       	st	Y, r12
    796e:	d9 82       	std	Y+1, r13	; 0x01
    7970:	ea 82       	std	Y+2, r14	; 0x02
    7972:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[116] = ROL(key->rk[108] + delta[3][21],  6);
    7974:	46 01       	movw	r8, r12
    7976:	57 01       	movw	r10, r14
    7978:	8a e1       	ldi	r24, 0x1A	; 26
    797a:	88 1a       	sub	r8, r24
    797c:	84 ee       	ldi	r24, 0xE4	; 228
    797e:	98 0a       	sbc	r9, r24
    7980:	80 e7       	ldi	r24, 0x70	; 112
    7982:	a8 0a       	sbc	r10, r24
    7984:	82 ee       	ldi	r24, 0xE2	; 226
    7986:	b8 0a       	sbc	r11, r24
    7988:	75 01       	movw	r14, r10
    798a:	64 01       	movw	r12, r8
    798c:	1a e1       	ldi	r17, 0x1A	; 26
    798e:	f6 94       	lsr	r15
    7990:	e7 94       	ror	r14
    7992:	d7 94       	ror	r13
    7994:	c7 94       	ror	r12
    7996:	1a 95       	dec	r17
    7998:	d1 f7       	brne	.-12     	; 0x798e <__stack+0x398f>
    799a:	06 e0       	ldi	r16, 0x06	; 6
    799c:	88 0c       	add	r8, r8
    799e:	99 1c       	adc	r9, r9
    79a0:	aa 1c       	adc	r10, r10
    79a2:	bb 1c       	adc	r11, r11
    79a4:	0a 95       	dec	r16
    79a6:	d1 f7       	brne	.-12     	; 0x799c <__stack+0x399d>
    79a8:	8c 28       	or	r8, r12
    79aa:	9d 28       	or	r9, r13
    79ac:	ae 28       	or	r10, r14
    79ae:	bf 28       	or	r11, r15
    79b0:	a0 96       	adiw	r28, 0x20	; 32
    79b2:	88 82       	st	Y, r8
    79b4:	99 82       	std	Y+1, r9	; 0x01
    79b6:	aa 82       	std	Y+2, r10	; 0x02
    79b8:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[124] = ROL(key->rk[116] + delta[4][24], 13);
    79ba:	8c e5       	ldi	r24, 0x5C	; 92
    79bc:	88 1a       	sub	r8, r24
    79be:	81 ea       	ldi	r24, 0xA1	; 161
    79c0:	98 0a       	sbc	r9, r24
    79c2:	8e e8       	ldi	r24, 0x8E	; 142
    79c4:	a8 0a       	sbc	r10, r24
    79c6:	81 e6       	ldi	r24, 0x61	; 97
    79c8:	b8 0a       	sbc	r11, r24
    79ca:	75 01       	movw	r14, r10
    79cc:	64 01       	movw	r12, r8
    79ce:	83 e1       	ldi	r24, 0x13	; 19
    79d0:	f6 94       	lsr	r15
    79d2:	e7 94       	ror	r14
    79d4:	d7 94       	ror	r13
    79d6:	c7 94       	ror	r12
    79d8:	8a 95       	dec	r24
    79da:	d1 f7       	brne	.-12     	; 0x79d0 <__stack+0x39d1>
    79dc:	9d e0       	ldi	r25, 0x0D	; 13
    79de:	88 0c       	add	r8, r8
    79e0:	99 1c       	adc	r9, r9
    79e2:	aa 1c       	adc	r10, r10
    79e4:	bb 1c       	adc	r11, r11
    79e6:	9a 95       	dec	r25
    79e8:	d1 f7       	brne	.-12     	; 0x79de <__stack+0x39df>
    79ea:	8c 28       	or	r8, r12
    79ec:	9d 28       	or	r9, r13
    79ee:	ae 28       	or	r10, r14
    79f0:	bf 28       	or	r11, r15
    79f2:	a0 96       	adiw	r28, 0x20	; 32
    79f4:	88 82       	st	Y, r8
    79f6:	99 82       	std	Y+1, r9	; 0x01
    79f8:	aa 82       	std	Y+2, r10	; 0x02
    79fa:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[132] = ROL(key->rk[124] + delta[6][22],  1);
    79fc:	75 01       	movw	r14, r10
    79fe:	64 01       	movw	r12, r8
    7a00:	84 e4       	ldi	r24, 0x44	; 68
    7a02:	c8 1a       	sub	r12, r24
    7a04:	8c ee       	ldi	r24, 0xEC	; 236
    7a06:	d8 0a       	sbc	r13, r24
    7a08:	87 e4       	ldi	r24, 0x47	; 71
    7a0a:	e8 0a       	sbc	r14, r24
    7a0c:	85 e7       	ldi	r24, 0x75	; 117
    7a0e:	f8 0a       	sbc	r15, r24
    7a10:	cc 0c       	add	r12, r12
    7a12:	dd 1c       	adc	r13, r13
    7a14:	ee 1c       	adc	r14, r14
    7a16:	ff 1c       	adc	r15, r15
    7a18:	c1 1c       	adc	r12, r1
    7a1a:	a0 96       	adiw	r28, 0x20	; 32
    7a1c:	c8 82       	st	Y, r12
    7a1e:	d9 82       	std	Y+1, r13	; 0x01
    7a20:	ea 82       	std	Y+2, r14	; 0x02
    7a22:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[140] = ROL(key->rk[132] + delta[7][25],  6);
    7a24:	46 01       	movw	r8, r12
    7a26:	57 01       	movw	r10, r14
    7a28:	8e ee       	ldi	r24, 0xEE	; 238
    7a2a:	88 1a       	sub	r8, r24
    7a2c:	87 e7       	ldi	r24, 0x77	; 119
    7a2e:	98 0a       	sbc	r9, r24
    7a30:	84 e3       	ldi	r24, 0x34	; 52
    7a32:	a8 0a       	sbc	r10, r24
    7a34:	80 e5       	ldi	r24, 0x50	; 80
    7a36:	b8 0a       	sbc	r11, r24
    7a38:	75 01       	movw	r14, r10
    7a3a:	64 01       	movw	r12, r8
    7a3c:	6a e1       	ldi	r22, 0x1A	; 26
    7a3e:	f6 94       	lsr	r15
    7a40:	e7 94       	ror	r14
    7a42:	d7 94       	ror	r13
    7a44:	c7 94       	ror	r12
    7a46:	6a 95       	dec	r22
    7a48:	d1 f7       	brne	.-12     	; 0x7a3e <__stack+0x3a3f>
    7a4a:	76 e0       	ldi	r23, 0x06	; 6
    7a4c:	88 0c       	add	r8, r8
    7a4e:	99 1c       	adc	r9, r9
    7a50:	aa 1c       	adc	r10, r10
    7a52:	bb 1c       	adc	r11, r11
    7a54:	7a 95       	dec	r23
    7a56:	d1 f7       	brne	.-12     	; 0x7a4c <__stack+0x3a4d>
    7a58:	8c 28       	or	r8, r12
    7a5a:	9d 28       	or	r9, r13
    7a5c:	ae 28       	or	r10, r14
    7a5e:	bf 28       	or	r11, r15
    7a60:	a0 96       	adiw	r28, 0x20	; 32
    7a62:	88 82       	st	Y, r8
    7a64:	99 82       	std	Y+1, r9	; 0x01
    7a66:	aa 82       	std	Y+2, r10	; 0x02
    7a68:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[148] = ROL(key->rk[140] + delta[0][28], 13);
    7a6a:	83 e6       	ldi	r24, 0x63	; 99
    7a6c:	88 1a       	sub	r8, r24
    7a6e:	81 e0       	ldi	r24, 0x01	; 1
    7a70:	98 0a       	sbc	r9, r24
    7a72:	81 ec       	ldi	r24, 0xC1	; 193
    7a74:	a8 0a       	sbc	r10, r24
    7a76:	83 e4       	ldi	r24, 0x43	; 67
    7a78:	b8 0a       	sbc	r11, r24
    7a7a:	75 01       	movw	r14, r10
    7a7c:	64 01       	movw	r12, r8
    7a7e:	13 e1       	ldi	r17, 0x13	; 19
    7a80:	f6 94       	lsr	r15
    7a82:	e7 94       	ror	r14
    7a84:	d7 94       	ror	r13
    7a86:	c7 94       	ror	r12
    7a88:	1a 95       	dec	r17
    7a8a:	d1 f7       	brne	.-12     	; 0x7a80 <__stack+0x3a81>
    7a8c:	0d e0       	ldi	r16, 0x0D	; 13
    7a8e:	88 0c       	add	r8, r8
    7a90:	99 1c       	adc	r9, r9
    7a92:	aa 1c       	adc	r10, r10
    7a94:	bb 1c       	adc	r11, r11
    7a96:	0a 95       	dec	r16
    7a98:	d1 f7       	brne	.-12     	; 0x7a8e <__stack+0x3a8f>
    7a9a:	8c 28       	or	r8, r12
    7a9c:	9d 28       	or	r9, r13
    7a9e:	ae 28       	or	r10, r14
    7aa0:	bf 28       	or	r11, r15
    7aa2:	a0 96       	adiw	r28, 0x20	; 32
    7aa4:	88 82       	st	Y, r8
    7aa6:	99 82       	std	Y+1, r9	; 0x01
    7aa8:	aa 82       	std	Y+2, r10	; 0x02
    7aaa:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[156] = ROL(key->rk[148] + delta[2][26],  1);
    7aac:	75 01       	movw	r14, r10
    7aae:	64 01       	movw	r12, r8
    7ab0:	8e e0       	ldi	r24, 0x0E	; 14
    7ab2:	c8 1a       	sub	r12, r24
    7ab4:	86 e7       	ldi	r24, 0x76	; 118
    7ab6:	d8 0a       	sbc	r13, r24
    7ab8:	88 e1       	ldi	r24, 0x18	; 24
    7aba:	e8 0a       	sbc	r14, r24
    7abc:	86 ed       	ldi	r24, 0xD6	; 214
    7abe:	f8 0a       	sbc	r15, r24
    7ac0:	cc 0c       	add	r12, r12
    7ac2:	dd 1c       	adc	r13, r13
    7ac4:	ee 1c       	adc	r14, r14
    7ac6:	ff 1c       	adc	r15, r15
    7ac8:	c1 1c       	adc	r12, r1
    7aca:	a0 96       	adiw	r28, 0x20	; 32
    7acc:	c8 82       	st	Y, r12
    7ace:	d9 82       	std	Y+1, r13	; 0x01
    7ad0:	ea 82       	std	Y+2, r14	; 0x02
    7ad2:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[164] = ROL(key->rk[156] + delta[3][29],  6);
    7ad4:	46 01       	movw	r8, r12
    7ad6:	57 01       	movw	r10, r14
    7ad8:	83 ee       	ldi	r24, 0xE3	; 227
    7ada:	88 1a       	sub	r8, r24
    7adc:	89 e1       	ldi	r24, 0x19	; 25
    7ade:	98 0a       	sbc	r9, r24
    7ae0:	84 ee       	ldi	r24, 0xE4	; 228
    7ae2:	a8 0a       	sbc	r10, r24
    7ae4:	80 e7       	ldi	r24, 0x70	; 112
    7ae6:	b8 0a       	sbc	r11, r24
    7ae8:	75 01       	movw	r14, r10
    7aea:	64 01       	movw	r12, r8
    7aec:	8a e1       	ldi	r24, 0x1A	; 26
    7aee:	f6 94       	lsr	r15
    7af0:	e7 94       	ror	r14
    7af2:	d7 94       	ror	r13
    7af4:	c7 94       	ror	r12
    7af6:	8a 95       	dec	r24
    7af8:	d1 f7       	brne	.-12     	; 0x7aee <__stack+0x3aef>
    7afa:	96 e0       	ldi	r25, 0x06	; 6
    7afc:	88 0c       	add	r8, r8
    7afe:	99 1c       	adc	r9, r9
    7b00:	aa 1c       	adc	r10, r10
    7b02:	bb 1c       	adc	r11, r11
    7b04:	9a 95       	dec	r25
    7b06:	d1 f7       	brne	.-12     	; 0x7afc <__stack+0x3afd>
    7b08:	8c 28       	or	r8, r12
    7b0a:	9d 28       	or	r9, r13
    7b0c:	ae 28       	or	r10, r14
    7b0e:	bf 28       	or	r11, r15
    7b10:	a0 96       	adiw	r28, 0x20	; 32
    7b12:	88 82       	st	Y, r8
    7b14:	99 82       	std	Y+1, r9	; 0x01
    7b16:	aa 82       	std	Y+2, r10	; 0x02
    7b18:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[172] = ROL(key->rk[164] + delta[4][ 0], 13);
    7b1a:	82 e6       	ldi	r24, 0x62	; 98
    7b1c:	88 1a       	sub	r8, r24
    7b1e:	8b e5       	ldi	r24, 0x5B	; 91
    7b20:	98 0a       	sbc	r9, r24
    7b22:	81 ea       	ldi	r24, 0xA1	; 161
    7b24:	a8 0a       	sbc	r10, r24
    7b26:	8e e8       	ldi	r24, 0x8E	; 142
    7b28:	b8 0a       	sbc	r11, r24
    7b2a:	75 01       	movw	r14, r10
    7b2c:	64 01       	movw	r12, r8
    7b2e:	63 e1       	ldi	r22, 0x13	; 19
    7b30:	f6 94       	lsr	r15
    7b32:	e7 94       	ror	r14
    7b34:	d7 94       	ror	r13
    7b36:	c7 94       	ror	r12
    7b38:	6a 95       	dec	r22
    7b3a:	d1 f7       	brne	.-12     	; 0x7b30 <__stack+0x3b31>
    7b3c:	7d e0       	ldi	r23, 0x0D	; 13
    7b3e:	88 0c       	add	r8, r8
    7b40:	99 1c       	adc	r9, r9
    7b42:	aa 1c       	adc	r10, r10
    7b44:	bb 1c       	adc	r11, r11
    7b46:	7a 95       	dec	r23
    7b48:	d1 f7       	brne	.-12     	; 0x7b3e <__stack+0x3b3f>
    7b4a:	8c 28       	or	r8, r12
    7b4c:	9d 28       	or	r9, r13
    7b4e:	ae 28       	or	r10, r14
    7b50:	bf 28       	or	r11, r15
    7b52:	a0 96       	adiw	r28, 0x20	; 32
    7b54:	88 82       	st	Y, r8
    7b56:	99 82       	std	Y+1, r9	; 0x01
    7b58:	aa 82       	std	Y+2, r10	; 0x02
    7b5a:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[180] = ROL(key->rk[172] + delta[6][30],  1);
    7b5c:	75 01       	movw	r14, r10
    7b5e:	64 01       	movw	r12, r8
    7b60:	86 e7       	ldi	r24, 0x76	; 118
    7b62:	c8 1a       	sub	r12, r24
    7b64:	83 e4       	ldi	r24, 0x43	; 67
    7b66:	d8 0a       	sbc	r13, r24
    7b68:	8c ee       	ldi	r24, 0xEC	; 236
    7b6a:	e8 0a       	sbc	r14, r24
    7b6c:	87 e4       	ldi	r24, 0x47	; 71
    7b6e:	f8 0a       	sbc	r15, r24
    7b70:	cc 0c       	add	r12, r12
    7b72:	dd 1c       	adc	r13, r13
    7b74:	ee 1c       	adc	r14, r14
    7b76:	ff 1c       	adc	r15, r15
    7b78:	c1 1c       	adc	r12, r1
    7b7a:	a0 96       	adiw	r28, 0x20	; 32
    7b7c:	c8 82       	st	Y, r12
    7b7e:	d9 82       	std	Y+1, r13	; 0x01
    7b80:	ea 82       	std	Y+2, r14	; 0x02
    7b82:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[188] = ROL(key->rk[180] + delta[7][ 1],  6);
    7b84:	46 01       	movw	r8, r12
    7b86:	57 01       	movw	r10, r14
    7b88:	81 e5       	ldi	r24, 0x51	; 81
    7b8a:	88 1a       	sub	r8, r24
    7b8c:	8d ee       	ldi	r24, 0xED	; 237
    7b8e:	98 0a       	sbc	r9, r24
    7b90:	87 e7       	ldi	r24, 0x77	; 119
    7b92:	a8 0a       	sbc	r10, r24
    7b94:	84 e3       	ldi	r24, 0x34	; 52
    7b96:	b8 0a       	sbc	r11, r24
    7b98:	75 01       	movw	r14, r10
    7b9a:	64 01       	movw	r12, r8
    7b9c:	1a e1       	ldi	r17, 0x1A	; 26
    7b9e:	f6 94       	lsr	r15
    7ba0:	e7 94       	ror	r14
    7ba2:	d7 94       	ror	r13
    7ba4:	c7 94       	ror	r12
    7ba6:	1a 95       	dec	r17
    7ba8:	d1 f7       	brne	.-12     	; 0x7b9e <__stack+0x3b9f>
    7baa:	06 e0       	ldi	r16, 0x06	; 6
    7bac:	88 0c       	add	r8, r8
    7bae:	99 1c       	adc	r9, r9
    7bb0:	aa 1c       	adc	r10, r10
    7bb2:	bb 1c       	adc	r11, r11
    7bb4:	0a 95       	dec	r16
    7bb6:	d1 f7       	brne	.-12     	; 0x7bac <__stack+0x3bad>
    7bb8:	c8 28       	or	r12, r8
    7bba:	d9 28       	or	r13, r9
    7bbc:	ea 28       	or	r14, r10
    7bbe:	fb 28       	or	r15, r11
    7bc0:	a0 96       	adiw	r28, 0x20	; 32
    7bc2:	c8 82       	st	Y, r12
    7bc4:	d9 82       	std	Y+1, r13	; 0x01
    7bc6:	ea 82       	std	Y+2, r14	; 0x02
    7bc8:	fb 82       	std	Y+3, r15	; 0x03

		key->rk[  5] = ROL(loadU32(_mk[5]) + delta[0][ 5], 17);
    7bca:	54 96       	adiw	r26, 0x14	; 20
    7bcc:	8d 90       	ld	r8, X+
    7bce:	9d 90       	ld	r9, X+
    7bd0:	ad 90       	ld	r10, X+
    7bd2:	bc 90       	ld	r11, X
    7bd4:	57 97       	sbiw	r26, 0x17	; 23
    7bd6:	88 e8       	ldi	r24, 0x88	; 136
    7bd8:	88 1a       	sub	r8, r24
    7bda:	84 ec       	ldi	r24, 0xC4	; 196
    7bdc:	98 0a       	sbc	r9, r24
    7bde:	82 e0       	ldi	r24, 0x02	; 2
    7be0:	a8 0a       	sbc	r10, r24
    7be2:	82 e8       	ldi	r24, 0x82	; 130
    7be4:	b8 0a       	sbc	r11, r24
    7be6:	75 01       	movw	r14, r10
    7be8:	64 01       	movw	r12, r8
    7bea:	8f e0       	ldi	r24, 0x0F	; 15
    7bec:	f6 94       	lsr	r15
    7bee:	e7 94       	ror	r14
    7bf0:	d7 94       	ror	r13
    7bf2:	c7 94       	ror	r12
    7bf4:	8a 95       	dec	r24
    7bf6:	d1 f7       	brne	.-12     	; 0x7bec <__stack+0x3bed>
    7bf8:	91 e1       	ldi	r25, 0x11	; 17
    7bfa:	88 0c       	add	r8, r8
    7bfc:	99 1c       	adc	r9, r9
    7bfe:	aa 1c       	adc	r10, r10
    7c00:	bb 1c       	adc	r11, r11
    7c02:	9a 95       	dec	r25
    7c04:	d1 f7       	brne	.-12     	; 0x7bfa <__stack+0x3bfb>
    7c06:	8c 28       	or	r8, r12
    7c08:	9d 28       	or	r9, r13
    7c0a:	ae 28       	or	r10, r14
    7c0c:	bf 28       	or	r11, r15
    7c0e:	84 8a       	std	Z+20, r8	; 0x14
    7c10:	95 8a       	std	Z+21, r9	; 0x15
    7c12:	a6 8a       	std	Z+22, r10	; 0x16
    7c14:	b7 8a       	std	Z+23, r11	; 0x17
		key->rk[ 13] = ROL(key->rk[  5] + delta[2][ 3],  3);
    7c16:	8d ea       	ldi	r24, 0xAD	; 173
    7c18:	88 1a       	sub	r8, r24
    7c1a:	8b e1       	ldi	r24, 0x1B	; 27
    7c1c:	98 0a       	sbc	r9, r24
    7c1e:	8c ee       	ldi	r24, 0xEC	; 236
    7c20:	a8 0a       	sbc	r10, r24
    7c22:	80 e3       	ldi	r24, 0x30	; 48
    7c24:	b8 0a       	sbc	r11, r24
    7c26:	75 01       	movw	r14, r10
    7c28:	64 01       	movw	r12, r8
    7c2a:	6d e1       	ldi	r22, 0x1D	; 29
    7c2c:	f6 94       	lsr	r15
    7c2e:	e7 94       	ror	r14
    7c30:	d7 94       	ror	r13
    7c32:	c7 94       	ror	r12
    7c34:	6a 95       	dec	r22
    7c36:	d1 f7       	brne	.-12     	; 0x7c2c <__stack+0x3c2d>
    7c38:	73 e0       	ldi	r23, 0x03	; 3
    7c3a:	88 0c       	add	r8, r8
    7c3c:	99 1c       	adc	r9, r9
    7c3e:	aa 1c       	adc	r10, r10
    7c40:	bb 1c       	adc	r11, r11
    7c42:	7a 95       	dec	r23
    7c44:	d1 f7       	brne	.-12     	; 0x7c3a <__stack+0x3c3b>
    7c46:	8c 28       	or	r8, r12
    7c48:	9d 28       	or	r9, r13
    7c4a:	ae 28       	or	r10, r14
    7c4c:	bf 28       	or	r11, r15
    7c4e:	84 aa       	std	Z+52, r8	; 0x34
    7c50:	95 aa       	std	Z+53, r9	; 0x35
    7c52:	a6 aa       	std	Z+54, r10	; 0x36
    7c54:	b7 aa       	std	Z+55, r11	; 0x37
		key->rk[ 21] = ROL(key->rk[ 13] + delta[3][ 6], 11);
    7c56:	82 ee       	ldi	r24, 0xE2	; 226
    7c58:	88 1a       	sub	r8, r24
    7c5a:	84 ec       	ldi	r24, 0xC4	; 196
    7c5c:	98 0a       	sbc	r9, r24
    7c5e:	83 e3       	ldi	r24, 0x33	; 51
    7c60:	a8 0a       	sbc	r10, r24
    7c62:	88 ec       	ldi	r24, 0xC8	; 200
    7c64:	b8 0a       	sbc	r11, r24
    7c66:	75 01       	movw	r14, r10
    7c68:	64 01       	movw	r12, r8
    7c6a:	15 e1       	ldi	r17, 0x15	; 21
    7c6c:	f6 94       	lsr	r15
    7c6e:	e7 94       	ror	r14
    7c70:	d7 94       	ror	r13
    7c72:	c7 94       	ror	r12
    7c74:	1a 95       	dec	r17
    7c76:	d1 f7       	brne	.-12     	; 0x7c6c <__stack+0x3c6d>
    7c78:	0b e0       	ldi	r16, 0x0B	; 11
    7c7a:	88 0c       	add	r8, r8
    7c7c:	99 1c       	adc	r9, r9
    7c7e:	aa 1c       	adc	r10, r10
    7c80:	bb 1c       	adc	r11, r11
    7c82:	0a 95       	dec	r16
    7c84:	d1 f7       	brne	.-12     	; 0x7c7a <__stack+0x3c7b>
    7c86:	8c 28       	or	r8, r12
    7c88:	9d 28       	or	r9, r13
    7c8a:	ae 28       	or	r10, r14
    7c8c:	bf 28       	or	r11, r15
    7c8e:	cc 59       	subi	r28, 0x9C	; 156
    7c90:	d2 40       	sbci	r29, 0x02	; 2
    7c92:	88 82       	st	Y, r8
    7c94:	99 82       	std	Y+1, r9	; 0x01
    7c96:	aa 82       	std	Y+2, r10	; 0x02
    7c98:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 29] = ROL(key->rk[ 21] + delta[4][ 9], 17);
    7c9a:	8e e1       	ldi	r24, 0x1E	; 30
    7c9c:	88 1a       	sub	r8, r24
    7c9e:	83 ec       	ldi	r24, 0xC3	; 195
    7ca0:	98 0a       	sbc	r9, r24
    7ca2:	86 eb       	ldi	r24, 0xB6	; 182
    7ca4:	a8 0a       	sbc	r10, r24
    7ca6:	82 e4       	ldi	r24, 0x42	; 66
    7ca8:	b8 0a       	sbc	r11, r24
    7caa:	75 01       	movw	r14, r10
    7cac:	64 01       	movw	r12, r8
    7cae:	8f e0       	ldi	r24, 0x0F	; 15
    7cb0:	f6 94       	lsr	r15
    7cb2:	e7 94       	ror	r14
    7cb4:	d7 94       	ror	r13
    7cb6:	c7 94       	ror	r12
    7cb8:	8a 95       	dec	r24
    7cba:	d1 f7       	brne	.-12     	; 0x7cb0 <__stack+0x3cb1>
    7cbc:	91 e1       	ldi	r25, 0x11	; 17
    7cbe:	88 0c       	add	r8, r8
    7cc0:	99 1c       	adc	r9, r9
    7cc2:	aa 1c       	adc	r10, r10
    7cc4:	bb 1c       	adc	r11, r11
    7cc6:	9a 95       	dec	r25
    7cc8:	d1 f7       	brne	.-12     	; 0x7cbe <__stack+0x3cbf>
    7cca:	8c 28       	or	r8, r12
    7ccc:	9d 28       	or	r9, r13
    7cce:	ae 28       	or	r10, r14
    7cd0:	bf 28       	or	r11, r15
    7cd2:	a0 96       	adiw	r28, 0x20	; 32
    7cd4:	88 82       	st	Y, r8
    7cd6:	99 82       	std	Y+1, r9	; 0x01
    7cd8:	aa 82       	std	Y+2, r10	; 0x02
    7cda:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 37] = ROL(key->rk[ 29] + delta[6][ 7],  3);
    7cdc:	80 e9       	ldi	r24, 0x90	; 144
    7cde:	88 1a       	sub	r8, r24
    7ce0:	8a ee       	ldi	r24, 0xEA	; 234
    7ce2:	98 0a       	sbc	r9, r24
    7ce4:	86 e8       	ldi	r24, 0x86	; 134
    7ce6:	a8 0a       	sbc	r10, r24
    7ce8:	88 ed       	ldi	r24, 0xD8	; 216
    7cea:	b8 0a       	sbc	r11, r24
    7cec:	75 01       	movw	r14, r10
    7cee:	64 01       	movw	r12, r8
    7cf0:	6d e1       	ldi	r22, 0x1D	; 29
    7cf2:	f6 94       	lsr	r15
    7cf4:	e7 94       	ror	r14
    7cf6:	d7 94       	ror	r13
    7cf8:	c7 94       	ror	r12
    7cfa:	6a 95       	dec	r22
    7cfc:	d1 f7       	brne	.-12     	; 0x7cf2 <__stack+0x3cf3>
    7cfe:	73 e0       	ldi	r23, 0x03	; 3
    7d00:	88 0c       	add	r8, r8
    7d02:	99 1c       	adc	r9, r9
    7d04:	aa 1c       	adc	r10, r10
    7d06:	bb 1c       	adc	r11, r11
    7d08:	7a 95       	dec	r23
    7d0a:	d1 f7       	brne	.-12     	; 0x7d00 <__stack+0x3d01>
    7d0c:	8c 28       	or	r8, r12
    7d0e:	9d 28       	or	r9, r13
    7d10:	ae 28       	or	r10, r14
    7d12:	bf 28       	or	r11, r15
    7d14:	a0 96       	adiw	r28, 0x20	; 32
    7d16:	88 82       	st	Y, r8
    7d18:	99 82       	std	Y+1, r9	; 0x01
    7d1a:	aa 82       	std	Y+2, r10	; 0x02
    7d1c:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 45] = ROL(key->rk[ 37] + delta[7][10], 11);
    7d1e:	89 e6       	ldi	r24, 0x69	; 105
    7d20:	88 1a       	sub	r8, r24
    7d22:	80 ea       	ldi	r24, 0xA0	; 160
    7d24:	98 0a       	sbc	r9, r24
    7d26:	8a ed       	ldi	r24, 0xDA	; 218
    7d28:	a8 0a       	sbc	r10, r24
    7d2a:	8f ee       	ldi	r24, 0xEF	; 239
    7d2c:	b8 0a       	sbc	r11, r24
    7d2e:	75 01       	movw	r14, r10
    7d30:	64 01       	movw	r12, r8
    7d32:	15 e1       	ldi	r17, 0x15	; 21
    7d34:	f6 94       	lsr	r15
    7d36:	e7 94       	ror	r14
    7d38:	d7 94       	ror	r13
    7d3a:	c7 94       	ror	r12
    7d3c:	1a 95       	dec	r17
    7d3e:	d1 f7       	brne	.-12     	; 0x7d34 <__stack+0x3d35>
    7d40:	0b e0       	ldi	r16, 0x0B	; 11
    7d42:	88 0c       	add	r8, r8
    7d44:	99 1c       	adc	r9, r9
    7d46:	aa 1c       	adc	r10, r10
    7d48:	bb 1c       	adc	r11, r11
    7d4a:	0a 95       	dec	r16
    7d4c:	d1 f7       	brne	.-12     	; 0x7d42 <__stack+0x3d43>
    7d4e:	8c 28       	or	r8, r12
    7d50:	9d 28       	or	r9, r13
    7d52:	ae 28       	or	r10, r14
    7d54:	bf 28       	or	r11, r15
    7d56:	a0 96       	adiw	r28, 0x20	; 32
    7d58:	88 82       	st	Y, r8
    7d5a:	99 82       	std	Y+1, r9	; 0x01
    7d5c:	aa 82       	std	Y+2, r10	; 0x02
    7d5e:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 53] = ROL(key->rk[ 45] + delta[0][13], 17);
    7d60:	83 e8       	ldi	r24, 0x83	; 131
    7d62:	88 1a       	sub	r8, r24
    7d64:	87 e8       	ldi	r24, 0x87	; 135
    7d66:	98 0a       	sbc	r9, r24
    7d68:	84 ec       	ldi	r24, 0xC4	; 196
    7d6a:	a8 0a       	sbc	r10, r24
    7d6c:	82 e0       	ldi	r24, 0x02	; 2
    7d6e:	b8 0a       	sbc	r11, r24
    7d70:	75 01       	movw	r14, r10
    7d72:	64 01       	movw	r12, r8
    7d74:	8f e0       	ldi	r24, 0x0F	; 15
    7d76:	f6 94       	lsr	r15
    7d78:	e7 94       	ror	r14
    7d7a:	d7 94       	ror	r13
    7d7c:	c7 94       	ror	r12
    7d7e:	8a 95       	dec	r24
    7d80:	d1 f7       	brne	.-12     	; 0x7d76 <__stack+0x3d77>
    7d82:	91 e1       	ldi	r25, 0x11	; 17
    7d84:	88 0c       	add	r8, r8
    7d86:	99 1c       	adc	r9, r9
    7d88:	aa 1c       	adc	r10, r10
    7d8a:	bb 1c       	adc	r11, r11
    7d8c:	9a 95       	dec	r25
    7d8e:	d1 f7       	brne	.-12     	; 0x7d84 <__stack+0x3d85>
    7d90:	8c 28       	or	r8, r12
    7d92:	9d 28       	or	r9, r13
    7d94:	ae 28       	or	r10, r14
    7d96:	bf 28       	or	r11, r15
    7d98:	a0 96       	adiw	r28, 0x20	; 32
    7d9a:	88 82       	st	Y, r8
    7d9c:	99 82       	std	Y+1, r9	; 0x01
    7d9e:	aa 82       	std	Y+2, r10	; 0x02
    7da0:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 61] = ROL(key->rk[ 53] + delta[2][11],  3);
    7da2:	81 e3       	ldi	r24, 0x31	; 49
    7da4:	88 1a       	sub	r8, r24
    7da6:	8c ea       	ldi	r24, 0xAC	; 172
    7da8:	98 0a       	sbc	r9, r24
    7daa:	8b e1       	ldi	r24, 0x1B	; 27
    7dac:	a8 0a       	sbc	r10, r24
    7dae:	8c ee       	ldi	r24, 0xEC	; 236
    7db0:	b8 0a       	sbc	r11, r24
    7db2:	75 01       	movw	r14, r10
    7db4:	64 01       	movw	r12, r8
    7db6:	6d e1       	ldi	r22, 0x1D	; 29
    7db8:	f6 94       	lsr	r15
    7dba:	e7 94       	ror	r14
    7dbc:	d7 94       	ror	r13
    7dbe:	c7 94       	ror	r12
    7dc0:	6a 95       	dec	r22
    7dc2:	d1 f7       	brne	.-12     	; 0x7db8 <__stack+0x3db9>
    7dc4:	73 e0       	ldi	r23, 0x03	; 3
    7dc6:	88 0c       	add	r8, r8
    7dc8:	99 1c       	adc	r9, r9
    7dca:	aa 1c       	adc	r10, r10
    7dcc:	bb 1c       	adc	r11, r11
    7dce:	7a 95       	dec	r23
    7dd0:	d1 f7       	brne	.-12     	; 0x7dc6 <__stack+0x3dc7>
    7dd2:	8c 28       	or	r8, r12
    7dd4:	9d 28       	or	r9, r13
    7dd6:	ae 28       	or	r10, r14
    7dd8:	bf 28       	or	r11, r15
    7dda:	a0 96       	adiw	r28, 0x20	; 32
    7ddc:	88 82       	st	Y, r8
    7dde:	99 82       	std	Y+1, r9	; 0x01
    7de0:	aa 82       	std	Y+2, r10	; 0x02
    7de2:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 69] = ROL(key->rk[ 61] + delta[3][14], 11);
    7de4:	89 ec       	ldi	r24, 0xC9	; 201
    7de6:	88 1a       	sub	r8, r24
    7de8:	81 ee       	ldi	r24, 0xE1	; 225
    7dea:	98 0a       	sbc	r9, r24
    7dec:	84 ec       	ldi	r24, 0xC4	; 196
    7dee:	a8 0a       	sbc	r10, r24
    7df0:	83 e3       	ldi	r24, 0x33	; 51
    7df2:	b8 0a       	sbc	r11, r24
    7df4:	75 01       	movw	r14, r10
    7df6:	64 01       	movw	r12, r8
    7df8:	15 e1       	ldi	r17, 0x15	; 21
    7dfa:	f6 94       	lsr	r15
    7dfc:	e7 94       	ror	r14
    7dfe:	d7 94       	ror	r13
    7e00:	c7 94       	ror	r12
    7e02:	1a 95       	dec	r17
    7e04:	d1 f7       	brne	.-12     	; 0x7dfa <__stack+0x3dfb>
    7e06:	0b e0       	ldi	r16, 0x0B	; 11
    7e08:	88 0c       	add	r8, r8
    7e0a:	99 1c       	adc	r9, r9
    7e0c:	aa 1c       	adc	r10, r10
    7e0e:	bb 1c       	adc	r11, r11
    7e10:	0a 95       	dec	r16
    7e12:	d1 f7       	brne	.-12     	; 0x7e08 <__stack+0x3e09>
    7e14:	8c 28       	or	r8, r12
    7e16:	9d 28       	or	r9, r13
    7e18:	ae 28       	or	r10, r14
    7e1a:	bf 28       	or	r11, r15
    7e1c:	a0 96       	adiw	r28, 0x20	; 32
    7e1e:	88 82       	st	Y, r8
    7e20:	99 82       	std	Y+1, r9	; 0x01
    7e22:	aa 82       	std	Y+2, r10	; 0x02
    7e24:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 77] = ROL(key->rk[ 69] + delta[4][17], 17);
    7e26:	83 e4       	ldi	r24, 0x43	; 67
    7e28:	88 1a       	sub	r8, r24
    7e2a:	8d e1       	ldi	r24, 0x1D	; 29
    7e2c:	98 0a       	sbc	r9, r24
    7e2e:	83 ec       	ldi	r24, 0xC3	; 195
    7e30:	a8 0a       	sbc	r10, r24
    7e32:	86 eb       	ldi	r24, 0xB6	; 182
    7e34:	b8 0a       	sbc	r11, r24
    7e36:	75 01       	movw	r14, r10
    7e38:	64 01       	movw	r12, r8
    7e3a:	8f e0       	ldi	r24, 0x0F	; 15
    7e3c:	f6 94       	lsr	r15
    7e3e:	e7 94       	ror	r14
    7e40:	d7 94       	ror	r13
    7e42:	c7 94       	ror	r12
    7e44:	8a 95       	dec	r24
    7e46:	d1 f7       	brne	.-12     	; 0x7e3c <__stack+0x3e3d>
    7e48:	91 e1       	ldi	r25, 0x11	; 17
    7e4a:	88 0c       	add	r8, r8
    7e4c:	99 1c       	adc	r9, r9
    7e4e:	aa 1c       	adc	r10, r10
    7e50:	bb 1c       	adc	r11, r11
    7e52:	9a 95       	dec	r25
    7e54:	d1 f7       	brne	.-12     	; 0x7e4a <__stack+0x3e4b>
    7e56:	8c 28       	or	r8, r12
    7e58:	9d 28       	or	r9, r13
    7e5a:	ae 28       	or	r10, r14
    7e5c:	bf 28       	or	r11, r15
    7e5e:	a0 96       	adiw	r28, 0x20	; 32
    7e60:	88 82       	st	Y, r8
    7e62:	99 82       	std	Y+1, r9	; 0x01
    7e64:	aa 82       	std	Y+2, r10	; 0x02
    7e66:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 85] = ROL(key->rk[ 77] + delta[6][15],  3);
    7e68:	89 ed       	ldi	r24, 0xD9	; 217
    7e6a:	88 1a       	sub	r8, r24
    7e6c:	8f e8       	ldi	r24, 0x8F	; 143
    7e6e:	98 0a       	sbc	r9, r24
    7e70:	8a ee       	ldi	r24, 0xEA	; 234
    7e72:	a8 0a       	sbc	r10, r24
    7e74:	86 e8       	ldi	r24, 0x86	; 134
    7e76:	b8 0a       	sbc	r11, r24
    7e78:	75 01       	movw	r14, r10
    7e7a:	64 01       	movw	r12, r8
    7e7c:	6d e1       	ldi	r22, 0x1D	; 29
    7e7e:	f6 94       	lsr	r15
    7e80:	e7 94       	ror	r14
    7e82:	d7 94       	ror	r13
    7e84:	c7 94       	ror	r12
    7e86:	6a 95       	dec	r22
    7e88:	d1 f7       	brne	.-12     	; 0x7e7e <__stack+0x3e7f>
    7e8a:	73 e0       	ldi	r23, 0x03	; 3
    7e8c:	88 0c       	add	r8, r8
    7e8e:	99 1c       	adc	r9, r9
    7e90:	aa 1c       	adc	r10, r10
    7e92:	bb 1c       	adc	r11, r11
    7e94:	7a 95       	dec	r23
    7e96:	d1 f7       	brne	.-12     	; 0x7e8c <__stack+0x3e8d>
    7e98:	8c 28       	or	r8, r12
    7e9a:	9d 28       	or	r9, r13
    7e9c:	ae 28       	or	r10, r14
    7e9e:	bf 28       	or	r11, r15
    7ea0:	a0 96       	adiw	r28, 0x20	; 32
    7ea2:	88 82       	st	Y, r8
    7ea4:	99 82       	std	Y+1, r9	; 0x01
    7ea6:	aa 82       	std	Y+2, r10	; 0x02
    7ea8:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 93] = ROL(key->rk[ 85] + delta[7][18], 11);
    7eaa:	80 ef       	ldi	r24, 0xF0	; 240
    7eac:	88 1a       	sub	r8, r24
    7eae:	88 e6       	ldi	r24, 0x68	; 104
    7eb0:	98 0a       	sbc	r9, r24
    7eb2:	80 ea       	ldi	r24, 0xA0	; 160
    7eb4:	a8 0a       	sbc	r10, r24
    7eb6:	8a ed       	ldi	r24, 0xDA	; 218
    7eb8:	b8 0a       	sbc	r11, r24
    7eba:	75 01       	movw	r14, r10
    7ebc:	64 01       	movw	r12, r8
    7ebe:	15 e1       	ldi	r17, 0x15	; 21
    7ec0:	f6 94       	lsr	r15
    7ec2:	e7 94       	ror	r14
    7ec4:	d7 94       	ror	r13
    7ec6:	c7 94       	ror	r12
    7ec8:	1a 95       	dec	r17
    7eca:	d1 f7       	brne	.-12     	; 0x7ec0 <__stack+0x3ec1>
    7ecc:	0b e0       	ldi	r16, 0x0B	; 11
    7ece:	88 0c       	add	r8, r8
    7ed0:	99 1c       	adc	r9, r9
    7ed2:	aa 1c       	adc	r10, r10
    7ed4:	bb 1c       	adc	r11, r11
    7ed6:	0a 95       	dec	r16
    7ed8:	d1 f7       	brne	.-12     	; 0x7ece <__stack+0x3ecf>
    7eda:	8c 28       	or	r8, r12
    7edc:	9d 28       	or	r9, r13
    7ede:	ae 28       	or	r10, r14
    7ee0:	bf 28       	or	r11, r15
    7ee2:	a0 96       	adiw	r28, 0x20	; 32
    7ee4:	88 82       	st	Y, r8
    7ee6:	99 82       	std	Y+1, r9	; 0x01
    7ee8:	aa 82       	std	Y+2, r10	; 0x02
    7eea:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[101] = ROL(key->rk[ 93] + delta[0][21], 17);
    7eec:	83 e0       	ldi	r24, 0x03	; 3
    7eee:	88 1a       	sub	r8, r24
    7ef0:	82 e8       	ldi	r24, 0x82	; 130
    7ef2:	98 0a       	sbc	r9, r24
    7ef4:	87 e8       	ldi	r24, 0x87	; 135
    7ef6:	a8 0a       	sbc	r10, r24
    7ef8:	84 ec       	ldi	r24, 0xC4	; 196
    7efa:	b8 0a       	sbc	r11, r24
    7efc:	75 01       	movw	r14, r10
    7efe:	64 01       	movw	r12, r8
    7f00:	8f e0       	ldi	r24, 0x0F	; 15
    7f02:	f6 94       	lsr	r15
    7f04:	e7 94       	ror	r14
    7f06:	d7 94       	ror	r13
    7f08:	c7 94       	ror	r12
    7f0a:	8a 95       	dec	r24
    7f0c:	d1 f7       	brne	.-12     	; 0x7f02 <__stack+0x3f03>
    7f0e:	91 e1       	ldi	r25, 0x11	; 17
    7f10:	88 0c       	add	r8, r8
    7f12:	99 1c       	adc	r9, r9
    7f14:	aa 1c       	adc	r10, r10
    7f16:	bb 1c       	adc	r11, r11
    7f18:	9a 95       	dec	r25
    7f1a:	d1 f7       	brne	.-12     	; 0x7f10 <__stack+0x3f11>
    7f1c:	8c 28       	or	r8, r12
    7f1e:	9d 28       	or	r9, r13
    7f20:	ae 28       	or	r10, r14
    7f22:	bf 28       	or	r11, r15
    7f24:	a0 96       	adiw	r28, 0x20	; 32
    7f26:	88 82       	st	Y, r8
    7f28:	99 82       	std	Y+1, r9	; 0x01
    7f2a:	aa 82       	std	Y+2, r10	; 0x02
    7f2c:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[109] = ROL(key->rk[101] + delta[2][19],  3);
    7f2e:	8d ee       	ldi	r24, 0xED	; 237
    7f30:	88 1a       	sub	r8, r24
    7f32:	80 e3       	ldi	r24, 0x30	; 48
    7f34:	98 0a       	sbc	r9, r24
    7f36:	8c ea       	ldi	r24, 0xAC	; 172
    7f38:	a8 0a       	sbc	r10, r24
    7f3a:	8b e1       	ldi	r24, 0x1B	; 27
    7f3c:	b8 0a       	sbc	r11, r24
    7f3e:	75 01       	movw	r14, r10
    7f40:	64 01       	movw	r12, r8
    7f42:	6d e1       	ldi	r22, 0x1D	; 29
    7f44:	f6 94       	lsr	r15
    7f46:	e7 94       	ror	r14
    7f48:	d7 94       	ror	r13
    7f4a:	c7 94       	ror	r12
    7f4c:	6a 95       	dec	r22
    7f4e:	d1 f7       	brne	.-12     	; 0x7f44 <__stack+0x3f45>
    7f50:	73 e0       	ldi	r23, 0x03	; 3
    7f52:	88 0c       	add	r8, r8
    7f54:	99 1c       	adc	r9, r9
    7f56:	aa 1c       	adc	r10, r10
    7f58:	bb 1c       	adc	r11, r11
    7f5a:	7a 95       	dec	r23
    7f5c:	d1 f7       	brne	.-12     	; 0x7f52 <__stack+0x3f53>
    7f5e:	8c 28       	or	r8, r12
    7f60:	9d 28       	or	r9, r13
    7f62:	ae 28       	or	r10, r14
    7f64:	bf 28       	or	r11, r15
    7f66:	a0 96       	adiw	r28, 0x20	; 32
    7f68:	88 82       	st	Y, r8
    7f6a:	99 82       	std	Y+1, r9	; 0x01
    7f6c:	aa 82       	std	Y+2, r10	; 0x02
    7f6e:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[117] = ROL(key->rk[109] + delta[3][22], 11);
    7f70:	84 e3       	ldi	r24, 0x34	; 52
    7f72:	88 1a       	sub	r8, r24
    7f74:	88 ec       	ldi	r24, 0xC8	; 200
    7f76:	98 0a       	sbc	r9, r24
    7f78:	81 ee       	ldi	r24, 0xE1	; 225
    7f7a:	a8 0a       	sbc	r10, r24
    7f7c:	84 ec       	ldi	r24, 0xC4	; 196
    7f7e:	b8 0a       	sbc	r11, r24
    7f80:	75 01       	movw	r14, r10
    7f82:	64 01       	movw	r12, r8
    7f84:	15 e1       	ldi	r17, 0x15	; 21
    7f86:	f6 94       	lsr	r15
    7f88:	e7 94       	ror	r14
    7f8a:	d7 94       	ror	r13
    7f8c:	c7 94       	ror	r12
    7f8e:	1a 95       	dec	r17
    7f90:	d1 f7       	brne	.-12     	; 0x7f86 <__stack+0x3f87>
    7f92:	0b e0       	ldi	r16, 0x0B	; 11
    7f94:	88 0c       	add	r8, r8
    7f96:	99 1c       	adc	r9, r9
    7f98:	aa 1c       	adc	r10, r10
    7f9a:	bb 1c       	adc	r11, r11
    7f9c:	0a 95       	dec	r16
    7f9e:	d1 f7       	brne	.-12     	; 0x7f94 <__stack+0x3f95>
    7fa0:	8c 28       	or	r8, r12
    7fa2:	9d 28       	or	r9, r13
    7fa4:	ae 28       	or	r10, r14
    7fa6:	bf 28       	or	r11, r15
    7fa8:	a0 96       	adiw	r28, 0x20	; 32
    7faa:	88 82       	st	Y, r8
    7fac:	99 82       	std	Y+1, r9	; 0x01
    7fae:	aa 82       	std	Y+2, r10	; 0x02
    7fb0:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[125] = ROL(key->rk[117] + delta[4][25], 17);
    7fb2:	87 eb       	ldi	r24, 0xB7	; 183
    7fb4:	88 1a       	sub	r8, r24
    7fb6:	82 e4       	ldi	r24, 0x42	; 66
    7fb8:	98 0a       	sbc	r9, r24
    7fba:	8d e1       	ldi	r24, 0x1D	; 29
    7fbc:	a8 0a       	sbc	r10, r24
    7fbe:	83 ec       	ldi	r24, 0xC3	; 195
    7fc0:	b8 0a       	sbc	r11, r24
    7fc2:	75 01       	movw	r14, r10
    7fc4:	64 01       	movw	r12, r8
    7fc6:	8f e0       	ldi	r24, 0x0F	; 15
    7fc8:	f6 94       	lsr	r15
    7fca:	e7 94       	ror	r14
    7fcc:	d7 94       	ror	r13
    7fce:	c7 94       	ror	r12
    7fd0:	8a 95       	dec	r24
    7fd2:	d1 f7       	brne	.-12     	; 0x7fc8 <__stack+0x3fc9>
    7fd4:	91 e1       	ldi	r25, 0x11	; 17
    7fd6:	88 0c       	add	r8, r8
    7fd8:	99 1c       	adc	r9, r9
    7fda:	aa 1c       	adc	r10, r10
    7fdc:	bb 1c       	adc	r11, r11
    7fde:	9a 95       	dec	r25
    7fe0:	d1 f7       	brne	.-12     	; 0x7fd6 <__stack+0x3fd7>
    7fe2:	8c 28       	or	r8, r12
    7fe4:	9d 28       	or	r9, r13
    7fe6:	ae 28       	or	r10, r14
    7fe8:	bf 28       	or	r11, r15
    7fea:	a0 96       	adiw	r28, 0x20	; 32
    7fec:	88 82       	st	Y, r8
    7fee:	99 82       	std	Y+1, r9	; 0x01
    7ff0:	aa 82       	std	Y+2, r10	; 0x02
    7ff2:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[133] = ROL(key->rk[125] + delta[6][23],  3);
    7ff4:	87 e8       	ldi	r24, 0x87	; 135
    7ff6:	88 1a       	sub	r8, r24
    7ff8:	88 ed       	ldi	r24, 0xD8	; 216
    7ffa:	98 0a       	sbc	r9, r24
    7ffc:	8f e8       	ldi	r24, 0x8F	; 143
    7ffe:	a8 0a       	sbc	r10, r24
    8000:	8a ee       	ldi	r24, 0xEA	; 234
    8002:	b8 0a       	sbc	r11, r24
    8004:	75 01       	movw	r14, r10
    8006:	64 01       	movw	r12, r8
    8008:	6d e1       	ldi	r22, 0x1D	; 29
    800a:	f6 94       	lsr	r15
    800c:	e7 94       	ror	r14
    800e:	d7 94       	ror	r13
    8010:	c7 94       	ror	r12
    8012:	6a 95       	dec	r22
    8014:	d1 f7       	brne	.-12     	; 0x800a <__stack+0x400b>
    8016:	73 e0       	ldi	r23, 0x03	; 3
    8018:	88 0c       	add	r8, r8
    801a:	99 1c       	adc	r9, r9
    801c:	aa 1c       	adc	r10, r10
    801e:	bb 1c       	adc	r11, r11
    8020:	7a 95       	dec	r23
    8022:	d1 f7       	brne	.-12     	; 0x8018 <__stack+0x4019>
    8024:	8c 28       	or	r8, r12
    8026:	9d 28       	or	r9, r13
    8028:	ae 28       	or	r10, r14
    802a:	bf 28       	or	r11, r15
    802c:	a0 96       	adiw	r28, 0x20	; 32
    802e:	88 82       	st	Y, r8
    8030:	99 82       	std	Y+1, r9	; 0x01
    8032:	aa 82       	std	Y+2, r10	; 0x02
    8034:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[141] = ROL(key->rk[133] + delta[7][26], 11);
    8036:	8b ed       	ldi	r24, 0xDB	; 219
    8038:	88 1a       	sub	r8, r24
    803a:	8f ee       	ldi	r24, 0xEF	; 239
    803c:	98 0a       	sbc	r9, r24
    803e:	88 e6       	ldi	r24, 0x68	; 104
    8040:	a8 0a       	sbc	r10, r24
    8042:	80 ea       	ldi	r24, 0xA0	; 160
    8044:	b8 0a       	sbc	r11, r24
    8046:	75 01       	movw	r14, r10
    8048:	64 01       	movw	r12, r8
    804a:	15 e1       	ldi	r17, 0x15	; 21
    804c:	f6 94       	lsr	r15
    804e:	e7 94       	ror	r14
    8050:	d7 94       	ror	r13
    8052:	c7 94       	ror	r12
    8054:	1a 95       	dec	r17
    8056:	d1 f7       	brne	.-12     	; 0x804c <__stack+0x404d>
    8058:	0b e0       	ldi	r16, 0x0B	; 11
    805a:	88 0c       	add	r8, r8
    805c:	99 1c       	adc	r9, r9
    805e:	aa 1c       	adc	r10, r10
    8060:	bb 1c       	adc	r11, r11
    8062:	0a 95       	dec	r16
    8064:	d1 f7       	brne	.-12     	; 0x805a <__stack+0x405b>
    8066:	8c 28       	or	r8, r12
    8068:	9d 28       	or	r9, r13
    806a:	ae 28       	or	r10, r14
    806c:	bf 28       	or	r11, r15
    806e:	a0 96       	adiw	r28, 0x20	; 32
    8070:	88 82       	st	Y, r8
    8072:	99 82       	std	Y+1, r9	; 0x01
    8074:	aa 82       	std	Y+2, r10	; 0x02
    8076:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[149] = ROL(key->rk[141] + delta[0][29], 17);
    8078:	85 ec       	ldi	r24, 0xC5	; 197
    807a:	88 1a       	sub	r8, r24
    807c:	82 e0       	ldi	r24, 0x02	; 2
    807e:	98 0a       	sbc	r9, r24
    8080:	82 e8       	ldi	r24, 0x82	; 130
    8082:	a8 0a       	sbc	r10, r24
    8084:	87 e8       	ldi	r24, 0x87	; 135
    8086:	b8 0a       	sbc	r11, r24
    8088:	75 01       	movw	r14, r10
    808a:	64 01       	movw	r12, r8
    808c:	8f e0       	ldi	r24, 0x0F	; 15
    808e:	f6 94       	lsr	r15
    8090:	e7 94       	ror	r14
    8092:	d7 94       	ror	r13
    8094:	c7 94       	ror	r12
    8096:	8a 95       	dec	r24
    8098:	d1 f7       	brne	.-12     	; 0x808e <__stack+0x408f>
    809a:	91 e1       	ldi	r25, 0x11	; 17
    809c:	88 0c       	add	r8, r8
    809e:	99 1c       	adc	r9, r9
    80a0:	aa 1c       	adc	r10, r10
    80a2:	bb 1c       	adc	r11, r11
    80a4:	9a 95       	dec	r25
    80a6:	d1 f7       	brne	.-12     	; 0x809c <__stack+0x409d>
    80a8:	8c 28       	or	r8, r12
    80aa:	9d 28       	or	r9, r13
    80ac:	ae 28       	or	r10, r14
    80ae:	bf 28       	or	r11, r15
    80b0:	a0 96       	adiw	r28, 0x20	; 32
    80b2:	88 82       	st	Y, r8
    80b4:	99 82       	std	Y+1, r9	; 0x01
    80b6:	aa 82       	std	Y+2, r10	; 0x02
    80b8:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[157] = ROL(key->rk[149] + delta[2][27],  3);
    80ba:	8c e1       	ldi	r24, 0x1C	; 28
    80bc:	88 1a       	sub	r8, r24
    80be:	8c ee       	ldi	r24, 0xEC	; 236
    80c0:	98 0a       	sbc	r9, r24
    80c2:	80 e3       	ldi	r24, 0x30	; 48
    80c4:	a8 0a       	sbc	r10, r24
    80c6:	8c ea       	ldi	r24, 0xAC	; 172
    80c8:	b8 0a       	sbc	r11, r24
    80ca:	75 01       	movw	r14, r10
    80cc:	64 01       	movw	r12, r8
    80ce:	6d e1       	ldi	r22, 0x1D	; 29
    80d0:	f6 94       	lsr	r15
    80d2:	e7 94       	ror	r14
    80d4:	d7 94       	ror	r13
    80d6:	c7 94       	ror	r12
    80d8:	6a 95       	dec	r22
    80da:	d1 f7       	brne	.-12     	; 0x80d0 <__stack+0x40d1>
    80dc:	73 e0       	ldi	r23, 0x03	; 3
    80de:	88 0c       	add	r8, r8
    80e0:	99 1c       	adc	r9, r9
    80e2:	aa 1c       	adc	r10, r10
    80e4:	bb 1c       	adc	r11, r11
    80e6:	7a 95       	dec	r23
    80e8:	d1 f7       	brne	.-12     	; 0x80de <__stack+0x40df>
    80ea:	8c 28       	or	r8, r12
    80ec:	9d 28       	or	r9, r13
    80ee:	ae 28       	or	r10, r14
    80f0:	bf 28       	or	r11, r15
    80f2:	a0 96       	adiw	r28, 0x20	; 32
    80f4:	88 82       	st	Y, r8
    80f6:	99 82       	std	Y+1, r9	; 0x01
    80f8:	aa 82       	std	Y+2, r10	; 0x02
    80fa:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[165] = ROL(key->rk[157] + delta[3][30], 11);
    80fc:	85 ec       	ldi	r24, 0xC5	; 197
    80fe:	88 1a       	sub	r8, r24
    8100:	83 e3       	ldi	r24, 0x33	; 51
    8102:	98 0a       	sbc	r9, r24
    8104:	88 ec       	ldi	r24, 0xC8	; 200
    8106:	a8 0a       	sbc	r10, r24
    8108:	81 ee       	ldi	r24, 0xE1	; 225
    810a:	b8 0a       	sbc	r11, r24
    810c:	75 01       	movw	r14, r10
    810e:	64 01       	movw	r12, r8
    8110:	15 e1       	ldi	r17, 0x15	; 21
    8112:	f6 94       	lsr	r15
    8114:	e7 94       	ror	r14
    8116:	d7 94       	ror	r13
    8118:	c7 94       	ror	r12
    811a:	1a 95       	dec	r17
    811c:	d1 f7       	brne	.-12     	; 0x8112 <__stack+0x4113>
    811e:	0b e0       	ldi	r16, 0x0B	; 11
    8120:	88 0c       	add	r8, r8
    8122:	99 1c       	adc	r9, r9
    8124:	aa 1c       	adc	r10, r10
    8126:	bb 1c       	adc	r11, r11
    8128:	0a 95       	dec	r16
    812a:	d1 f7       	brne	.-12     	; 0x8120 <__stack+0x4121>
    812c:	8c 28       	or	r8, r12
    812e:	9d 28       	or	r9, r13
    8130:	ae 28       	or	r10, r14
    8132:	bf 28       	or	r11, r15
    8134:	a0 96       	adiw	r28, 0x20	; 32
    8136:	88 82       	st	Y, r8
    8138:	99 82       	std	Y+1, r9	; 0x01
    813a:	aa 82       	std	Y+2, r10	; 0x02
    813c:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[173] = ROL(key->rk[165] + delta[4][ 1], 17);
    813e:	84 ec       	ldi	r24, 0xC4	; 196
    8140:	88 1a       	sub	r8, r24
    8142:	86 eb       	ldi	r24, 0xB6	; 182
    8144:	98 0a       	sbc	r9, r24
    8146:	82 e4       	ldi	r24, 0x42	; 66
    8148:	a8 0a       	sbc	r10, r24
    814a:	8d e1       	ldi	r24, 0x1D	; 29
    814c:	b8 0a       	sbc	r11, r24
    814e:	75 01       	movw	r14, r10
    8150:	64 01       	movw	r12, r8
    8152:	8f e0       	ldi	r24, 0x0F	; 15
    8154:	f6 94       	lsr	r15
    8156:	e7 94       	ror	r14
    8158:	d7 94       	ror	r13
    815a:	c7 94       	ror	r12
    815c:	8a 95       	dec	r24
    815e:	d1 f7       	brne	.-12     	; 0x8154 <__stack+0x4155>
    8160:	91 e1       	ldi	r25, 0x11	; 17
    8162:	88 0c       	add	r8, r8
    8164:	99 1c       	adc	r9, r9
    8166:	aa 1c       	adc	r10, r10
    8168:	bb 1c       	adc	r11, r11
    816a:	9a 95       	dec	r25
    816c:	d1 f7       	brne	.-12     	; 0x8162 <__stack+0x4163>
    816e:	8c 28       	or	r8, r12
    8170:	9d 28       	or	r9, r13
    8172:	ae 28       	or	r10, r14
    8174:	bf 28       	or	r11, r15
    8176:	a0 96       	adiw	r28, 0x20	; 32
    8178:	88 82       	st	Y, r8
    817a:	99 82       	std	Y+1, r9	; 0x01
    817c:	aa 82       	std	Y+2, r10	; 0x02
    817e:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[181] = ROL(key->rk[173] + delta[6][31],  3);
    8180:	8b ee       	ldi	r24, 0xEB	; 235
    8182:	88 1a       	sub	r8, r24
    8184:	86 e8       	ldi	r24, 0x86	; 134
    8186:	98 0a       	sbc	r9, r24
    8188:	88 ed       	ldi	r24, 0xD8	; 216
    818a:	a8 0a       	sbc	r10, r24
    818c:	8f e8       	ldi	r24, 0x8F	; 143
    818e:	b8 0a       	sbc	r11, r24
    8190:	75 01       	movw	r14, r10
    8192:	64 01       	movw	r12, r8
    8194:	6d e1       	ldi	r22, 0x1D	; 29
    8196:	f6 94       	lsr	r15
    8198:	e7 94       	ror	r14
    819a:	d7 94       	ror	r13
    819c:	c7 94       	ror	r12
    819e:	6a 95       	dec	r22
    81a0:	d1 f7       	brne	.-12     	; 0x8196 <__stack+0x4197>
    81a2:	73 e0       	ldi	r23, 0x03	; 3
    81a4:	88 0c       	add	r8, r8
    81a6:	99 1c       	adc	r9, r9
    81a8:	aa 1c       	adc	r10, r10
    81aa:	bb 1c       	adc	r11, r11
    81ac:	7a 95       	dec	r23
    81ae:	d1 f7       	brne	.-12     	; 0x81a4 <__stack+0x41a5>
    81b0:	8c 28       	or	r8, r12
    81b2:	9d 28       	or	r9, r13
    81b4:	ae 28       	or	r10, r14
    81b6:	bf 28       	or	r11, r15
    81b8:	a0 96       	adiw	r28, 0x20	; 32
    81ba:	88 82       	st	Y, r8
    81bc:	99 82       	std	Y+1, r9	; 0x01
    81be:	aa 82       	std	Y+2, r10	; 0x02
    81c0:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[189] = ROL(key->rk[181] + delta[7][ 2], 11);
    81c2:	81 ea       	ldi	r24, 0xA1	; 161
    81c4:	88 1a       	sub	r8, r24
    81c6:	8a ed       	ldi	r24, 0xDA	; 218
    81c8:	98 0a       	sbc	r9, r24
    81ca:	8f ee       	ldi	r24, 0xEF	; 239
    81cc:	a8 0a       	sbc	r10, r24
    81ce:	88 e6       	ldi	r24, 0x68	; 104
    81d0:	b8 0a       	sbc	r11, r24
    81d2:	75 01       	movw	r14, r10
    81d4:	64 01       	movw	r12, r8
    81d6:	15 e1       	ldi	r17, 0x15	; 21
    81d8:	f6 94       	lsr	r15
    81da:	e7 94       	ror	r14
    81dc:	d7 94       	ror	r13
    81de:	c7 94       	ror	r12
    81e0:	1a 95       	dec	r17
    81e2:	d1 f7       	brne	.-12     	; 0x81d8 <__stack+0x41d9>
    81e4:	0b e0       	ldi	r16, 0x0B	; 11
    81e6:	88 0c       	add	r8, r8
    81e8:	99 1c       	adc	r9, r9
    81ea:	aa 1c       	adc	r10, r10
    81ec:	bb 1c       	adc	r11, r11
    81ee:	0a 95       	dec	r16
    81f0:	d1 f7       	brne	.-12     	; 0x81e6 <__stack+0x41e7>
    81f2:	c8 28       	or	r12, r8
    81f4:	d9 28       	or	r13, r9
    81f6:	ea 28       	or	r14, r10
    81f8:	fb 28       	or	r15, r11
    81fa:	a0 96       	adiw	r28, 0x20	; 32
    81fc:	c8 82       	st	Y, r12
    81fe:	d9 82       	std	Y+1, r13	; 0x01
    8200:	ea 82       	std	Y+2, r14	; 0x02
    8202:	fb 82       	std	Y+3, r15	; 0x03

		key->rk[  6] = ROL(loadU32(_mk[6]) + delta[1][ 1],  1);
    8204:	58 96       	adiw	r26, 0x18	; 24
    8206:	cd 90       	ld	r12, X+
    8208:	dd 90       	ld	r13, X+
    820a:	ed 90       	ld	r14, X+
    820c:	fc 90       	ld	r15, X
    820e:	5b 97       	sbiw	r26, 0x1b	; 27
    8210:	8c ef       	ldi	r24, 0xFC	; 252
    8212:	c8 1a       	sub	r12, r24
    8214:	89 e2       	ldi	r24, 0x29	; 41
    8216:	d8 0a       	sbc	r13, r24
    8218:	8b e3       	ldi	r24, 0x3B	; 59
    821a:	e8 0a       	sbc	r14, r24
    821c:	87 e7       	ldi	r24, 0x77	; 119
    821e:	f8 0a       	sbc	r15, r24
    8220:	cc 0c       	add	r12, r12
    8222:	dd 1c       	adc	r13, r13
    8224:	ee 1c       	adc	r14, r14
    8226:	ff 1c       	adc	r15, r15
    8228:	c1 1c       	adc	r12, r1
    822a:	c0 8e       	std	Z+24, r12	; 0x18
    822c:	d1 8e       	std	Z+25, r13	; 0x19
    822e:	e2 8e       	std	Z+26, r14	; 0x1a
    8230:	f3 8e       	std	Z+27, r15	; 0x1b
		key->rk[ 14] = ROL(key->rk[  6] + delta[2][ 4],  6);
    8232:	46 01       	movw	r8, r12
    8234:	57 01       	movw	r10, r14
    8236:	89 e5       	ldi	r24, 0x59	; 89
    8238:	88 1a       	sub	r8, r24
    823a:	87 e3       	ldi	r24, 0x37	; 55
    823c:	98 0a       	sbc	r9, r24
    823e:	88 ed       	ldi	r24, 0xD8	; 216
    8240:	a8 0a       	sbc	r10, r24
    8242:	81 e6       	ldi	r24, 0x61	; 97
    8244:	b8 0a       	sbc	r11, r24
    8246:	75 01       	movw	r14, r10
    8248:	64 01       	movw	r12, r8
    824a:	8a e1       	ldi	r24, 0x1A	; 26
    824c:	f6 94       	lsr	r15
    824e:	e7 94       	ror	r14
    8250:	d7 94       	ror	r13
    8252:	c7 94       	ror	r12
    8254:	8a 95       	dec	r24
    8256:	d1 f7       	brne	.-12     	; 0x824c <__stack+0x424d>
    8258:	96 e0       	ldi	r25, 0x06	; 6
    825a:	88 0c       	add	r8, r8
    825c:	99 1c       	adc	r9, r9
    825e:	aa 1c       	adc	r10, r10
    8260:	bb 1c       	adc	r11, r11
    8262:	9a 95       	dec	r25
    8264:	d1 f7       	brne	.-12     	; 0x825a <__stack+0x425b>
    8266:	8c 28       	or	r8, r12
    8268:	9d 28       	or	r9, r13
    826a:	ae 28       	or	r10, r14
    826c:	bf 28       	or	r11, r15
    826e:	80 ae       	std	Z+56, r8	; 0x38
    8270:	91 ae       	std	Z+57, r9	; 0x39
    8272:	a2 ae       	std	Z+58, r10	; 0x3a
    8274:	b3 ae       	std	Z+59, r11	; 0x3b
		key->rk[ 22] = ROL(key->rk[ 14] + delta[3][ 7], 13);
    8276:	84 ec       	ldi	r24, 0xC4	; 196
    8278:	88 1a       	sub	r8, r24
    827a:	89 e8       	ldi	r24, 0x89	; 137
    827c:	98 0a       	sbc	r9, r24
    827e:	87 e6       	ldi	r24, 0x67	; 103
    8280:	a8 0a       	sbc	r10, r24
    8282:	80 e9       	ldi	r24, 0x90	; 144
    8284:	b8 0a       	sbc	r11, r24
    8286:	75 01       	movw	r14, r10
    8288:	64 01       	movw	r12, r8
    828a:	63 e1       	ldi	r22, 0x13	; 19
    828c:	f6 94       	lsr	r15
    828e:	e7 94       	ror	r14
    8290:	d7 94       	ror	r13
    8292:	c7 94       	ror	r12
    8294:	6a 95       	dec	r22
    8296:	d1 f7       	brne	.-12     	; 0x828c <__stack+0x428d>
    8298:	7d e0       	ldi	r23, 0x0D	; 13
    829a:	88 0c       	add	r8, r8
    829c:	99 1c       	adc	r9, r9
    829e:	aa 1c       	adc	r10, r10
    82a0:	bb 1c       	adc	r11, r11
    82a2:	7a 95       	dec	r23
    82a4:	d1 f7       	brne	.-12     	; 0x829a <__stack+0x429b>
    82a6:	8c 28       	or	r8, r12
    82a8:	9d 28       	or	r9, r13
    82aa:	ae 28       	or	r10, r14
    82ac:	bf 28       	or	r11, r15
    82ae:	cc 59       	subi	r28, 0x9C	; 156
    82b0:	d2 40       	sbci	r29, 0x02	; 2
    82b2:	88 82       	st	Y, r8
    82b4:	99 82       	std	Y+1, r9	; 0x01
    82b6:	aa 82       	std	Y+2, r10	; 0x02
    82b8:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 30] = ROL(key->rk[ 22] + delta[5][ 5],  1);
    82ba:	75 01       	movw	r14, r10
    82bc:	64 01       	movw	r12, r8
    82be:	88 ea       	ldi	r24, 0xA8	; 168
    82c0:	c8 1a       	sub	r12, r24
    82c2:	8e eb       	ldi	r24, 0xBE	; 190
    82c4:	d8 0a       	sbc	r13, r24
    82c6:	84 e4       	ldi	r24, 0x44	; 68
    82c8:	e8 0a       	sbc	r14, r24
    82ca:	8f e0       	ldi	r24, 0x0F	; 15
    82cc:	f8 0a       	sbc	r15, r24
    82ce:	cc 0c       	add	r12, r12
    82d0:	dd 1c       	adc	r13, r13
    82d2:	ee 1c       	adc	r14, r14
    82d4:	ff 1c       	adc	r15, r15
    82d6:	c1 1c       	adc	r12, r1
    82d8:	a0 96       	adiw	r28, 0x20	; 32
    82da:	c8 82       	st	Y, r12
    82dc:	d9 82       	std	Y+1, r13	; 0x01
    82de:	ea 82       	std	Y+2, r14	; 0x02
    82e0:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 38] = ROL(key->rk[ 30] + delta[6][ 8],  6);
    82e2:	46 01       	movw	r8, r12
    82e4:	57 01       	movw	r10, r14
    82e6:	80 e2       	ldi	r24, 0x20	; 32
    82e8:	88 1a       	sub	r8, r24
    82ea:	85 ed       	ldi	r24, 0xD5	; 213
    82ec:	98 0a       	sbc	r9, r24
    82ee:	8d e0       	ldi	r24, 0x0D	; 13
    82f0:	a8 0a       	sbc	r10, r24
    82f2:	81 eb       	ldi	r24, 0xB1	; 177
    82f4:	b8 0a       	sbc	r11, r24
    82f6:	75 01       	movw	r14, r10
    82f8:	64 01       	movw	r12, r8
    82fa:	1a e1       	ldi	r17, 0x1A	; 26
    82fc:	f6 94       	lsr	r15
    82fe:	e7 94       	ror	r14
    8300:	d7 94       	ror	r13
    8302:	c7 94       	ror	r12
    8304:	1a 95       	dec	r17
    8306:	d1 f7       	brne	.-12     	; 0x82fc <__stack+0x42fd>
    8308:	06 e0       	ldi	r16, 0x06	; 6
    830a:	88 0c       	add	r8, r8
    830c:	99 1c       	adc	r9, r9
    830e:	aa 1c       	adc	r10, r10
    8310:	bb 1c       	adc	r11, r11
    8312:	0a 95       	dec	r16
    8314:	d1 f7       	brne	.-12     	; 0x830a <__stack+0x430b>
    8316:	8c 28       	or	r8, r12
    8318:	9d 28       	or	r9, r13
    831a:	ae 28       	or	r10, r14
    831c:	bf 28       	or	r11, r15
    831e:	a0 96       	adiw	r28, 0x20	; 32
    8320:	88 82       	st	Y, r8
    8322:	99 82       	std	Y+1, r9	; 0x01
    8324:	aa 82       	std	Y+2, r10	; 0x02
    8326:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 46] = ROL(key->rk[ 38] + delta[7][11], 13);
    8328:	82 ed       	ldi	r24, 0xD2	; 210
    832a:	88 1a       	sub	r8, r24
    832c:	80 e4       	ldi	r24, 0x40	; 64
    832e:	98 0a       	sbc	r9, r24
    8330:	85 eb       	ldi	r24, 0xB5	; 181
    8332:	a8 0a       	sbc	r10, r24
    8334:	8f ed       	ldi	r24, 0xDF	; 223
    8336:	b8 0a       	sbc	r11, r24
    8338:	75 01       	movw	r14, r10
    833a:	64 01       	movw	r12, r8
    833c:	83 e1       	ldi	r24, 0x13	; 19
    833e:	f6 94       	lsr	r15
    8340:	e7 94       	ror	r14
    8342:	d7 94       	ror	r13
    8344:	c7 94       	ror	r12
    8346:	8a 95       	dec	r24
    8348:	d1 f7       	brne	.-12     	; 0x833e <__stack+0x433f>
    834a:	9d e0       	ldi	r25, 0x0D	; 13
    834c:	88 0c       	add	r8, r8
    834e:	99 1c       	adc	r9, r9
    8350:	aa 1c       	adc	r10, r10
    8352:	bb 1c       	adc	r11, r11
    8354:	9a 95       	dec	r25
    8356:	d1 f7       	brne	.-12     	; 0x834c <__stack+0x434d>
    8358:	8c 28       	or	r8, r12
    835a:	9d 28       	or	r9, r13
    835c:	ae 28       	or	r10, r14
    835e:	bf 28       	or	r11, r15
    8360:	a0 96       	adiw	r28, 0x20	; 32
    8362:	88 82       	st	Y, r8
    8364:	99 82       	std	Y+1, r9	; 0x01
    8366:	aa 82       	std	Y+2, r10	; 0x02
    8368:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 54] = ROL(key->rk[ 46] + delta[1][ 9],  1);
    836a:	75 01       	movw	r14, r10
    836c:	64 01       	movw	r12, r8
    836e:	88 e7       	ldi	r24, 0x78	; 120
    8370:	c8 1a       	sub	r12, r24
    8372:	8b ef       	ldi	r24, 0xFB	; 251
    8374:	d8 0a       	sbc	r13, r24
    8376:	89 e2       	ldi	r24, 0x29	; 41
    8378:	e8 0a       	sbc	r14, r24
    837a:	8b e3       	ldi	r24, 0x3B	; 59
    837c:	f8 0a       	sbc	r15, r24
    837e:	cc 0c       	add	r12, r12
    8380:	dd 1c       	adc	r13, r13
    8382:	ee 1c       	adc	r14, r14
    8384:	ff 1c       	adc	r15, r15
    8386:	c1 1c       	adc	r12, r1
    8388:	a0 96       	adiw	r28, 0x20	; 32
    838a:	c8 82       	st	Y, r12
    838c:	d9 82       	std	Y+1, r13	; 0x01
    838e:	ea 82       	std	Y+2, r14	; 0x02
    8390:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 62] = ROL(key->rk[ 54] + delta[2][12],  6);
    8392:	46 01       	movw	r8, r12
    8394:	57 01       	movw	r10, r14
    8396:	82 e6       	ldi	r24, 0x62	; 98
    8398:	88 1a       	sub	r8, r24
    839a:	88 e5       	ldi	r24, 0x58	; 88
    839c:	98 0a       	sbc	r9, r24
    839e:	87 e3       	ldi	r24, 0x37	; 55
    83a0:	a8 0a       	sbc	r10, r24
    83a2:	88 ed       	ldi	r24, 0xD8	; 216
    83a4:	b8 0a       	sbc	r11, r24
    83a6:	75 01       	movw	r14, r10
    83a8:	64 01       	movw	r12, r8
    83aa:	6a e1       	ldi	r22, 0x1A	; 26
    83ac:	f6 94       	lsr	r15
    83ae:	e7 94       	ror	r14
    83b0:	d7 94       	ror	r13
    83b2:	c7 94       	ror	r12
    83b4:	6a 95       	dec	r22
    83b6:	d1 f7       	brne	.-12     	; 0x83ac <__stack+0x43ad>
    83b8:	76 e0       	ldi	r23, 0x06	; 6
    83ba:	88 0c       	add	r8, r8
    83bc:	99 1c       	adc	r9, r9
    83be:	aa 1c       	adc	r10, r10
    83c0:	bb 1c       	adc	r11, r11
    83c2:	7a 95       	dec	r23
    83c4:	d1 f7       	brne	.-12     	; 0x83ba <__stack+0x43bb>
    83c6:	8c 28       	or	r8, r12
    83c8:	9d 28       	or	r9, r13
    83ca:	ae 28       	or	r10, r14
    83cc:	bf 28       	or	r11, r15
    83ce:	a0 96       	adiw	r28, 0x20	; 32
    83d0:	88 82       	st	Y, r8
    83d2:	99 82       	std	Y+1, r9	; 0x01
    83d4:	aa 82       	std	Y+2, r10	; 0x02
    83d6:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 70] = ROL(key->rk[ 62] + delta[3][15], 13);
    83d8:	81 e9       	ldi	r24, 0x91	; 145
    83da:	88 1a       	sub	r8, r24
    83dc:	83 ec       	ldi	r24, 0xC3	; 195
    83de:	98 0a       	sbc	r9, r24
    83e0:	89 e8       	ldi	r24, 0x89	; 137
    83e2:	a8 0a       	sbc	r10, r24
    83e4:	87 e6       	ldi	r24, 0x67	; 103
    83e6:	b8 0a       	sbc	r11, r24
    83e8:	75 01       	movw	r14, r10
    83ea:	64 01       	movw	r12, r8
    83ec:	13 e1       	ldi	r17, 0x13	; 19
    83ee:	f6 94       	lsr	r15
    83f0:	e7 94       	ror	r14
    83f2:	d7 94       	ror	r13
    83f4:	c7 94       	ror	r12
    83f6:	1a 95       	dec	r17
    83f8:	d1 f7       	brne	.-12     	; 0x83ee <__stack+0x43ef>
    83fa:	0d e0       	ldi	r16, 0x0D	; 13
    83fc:	88 0c       	add	r8, r8
    83fe:	99 1c       	adc	r9, r9
    8400:	aa 1c       	adc	r10, r10
    8402:	bb 1c       	adc	r11, r11
    8404:	0a 95       	dec	r16
    8406:	d1 f7       	brne	.-12     	; 0x83fc <__stack+0x43fd>
    8408:	8c 28       	or	r8, r12
    840a:	9d 28       	or	r9, r13
    840c:	ae 28       	or	r10, r14
    840e:	bf 28       	or	r11, r15
    8410:	a0 96       	adiw	r28, 0x20	; 32
    8412:	88 82       	st	Y, r8
    8414:	99 82       	std	Y+1, r9	; 0x01
    8416:	aa 82       	std	Y+2, r10	; 0x02
    8418:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 78] = ROL(key->rk[ 70] + delta[5][13],  1);
    841a:	75 01       	movw	r14, r10
    841c:	64 01       	movw	r12, r8
    841e:	80 e1       	ldi	r24, 0x10	; 16
    8420:	c8 1a       	sub	r12, r24
    8422:	87 ea       	ldi	r24, 0xA7	; 167
    8424:	d8 0a       	sbc	r13, r24
    8426:	8e eb       	ldi	r24, 0xBE	; 190
    8428:	e8 0a       	sbc	r14, r24
    842a:	84 e4       	ldi	r24, 0x44	; 68
    842c:	f8 0a       	sbc	r15, r24
    842e:	cc 0c       	add	r12, r12
    8430:	dd 1c       	adc	r13, r13
    8432:	ee 1c       	adc	r14, r14
    8434:	ff 1c       	adc	r15, r15
    8436:	c1 1c       	adc	r12, r1
    8438:	a0 96       	adiw	r28, 0x20	; 32
    843a:	c8 82       	st	Y, r12
    843c:	d9 82       	std	Y+1, r13	; 0x01
    843e:	ea 82       	std	Y+2, r14	; 0x02
    8440:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[ 86] = ROL(key->rk[ 78] + delta[6][16],  6);
    8442:	46 01       	movw	r8, r12
    8444:	57 01       	movw	r10, r14
    8446:	82 eb       	ldi	r24, 0xB2	; 178
    8448:	88 1a       	sub	r8, r24
    844a:	8f e1       	ldi	r24, 0x1F	; 31
    844c:	98 0a       	sbc	r9, r24
    844e:	85 ed       	ldi	r24, 0xD5	; 213
    8450:	a8 0a       	sbc	r10, r24
    8452:	8d e0       	ldi	r24, 0x0D	; 13
    8454:	b8 0a       	sbc	r11, r24
    8456:	75 01       	movw	r14, r10
    8458:	64 01       	movw	r12, r8
    845a:	8a e1       	ldi	r24, 0x1A	; 26
    845c:	f6 94       	lsr	r15
    845e:	e7 94       	ror	r14
    8460:	d7 94       	ror	r13
    8462:	c7 94       	ror	r12
    8464:	8a 95       	dec	r24
    8466:	d1 f7       	brne	.-12     	; 0x845c <__stack+0x445d>
    8468:	96 e0       	ldi	r25, 0x06	; 6
    846a:	88 0c       	add	r8, r8
    846c:	99 1c       	adc	r9, r9
    846e:	aa 1c       	adc	r10, r10
    8470:	bb 1c       	adc	r11, r11
    8472:	9a 95       	dec	r25
    8474:	d1 f7       	brne	.-12     	; 0x846a <__stack+0x446b>
    8476:	8c 28       	or	r8, r12
    8478:	9d 28       	or	r9, r13
    847a:	ae 28       	or	r10, r14
    847c:	bf 28       	or	r11, r15
    847e:	a0 96       	adiw	r28, 0x20	; 32
    8480:	88 82       	st	Y, r8
    8482:	99 82       	std	Y+1, r9	; 0x01
    8484:	aa 82       	std	Y+2, r10	; 0x02
    8486:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[ 94] = ROL(key->rk[ 86] + delta[7][19], 13);
    8488:	80 ee       	ldi	r24, 0xE0	; 224
    848a:	88 1a       	sub	r8, r24
    848c:	81 ed       	ldi	r24, 0xD1	; 209
    848e:	98 0a       	sbc	r9, r24
    8490:	80 e4       	ldi	r24, 0x40	; 64
    8492:	a8 0a       	sbc	r10, r24
    8494:	85 eb       	ldi	r24, 0xB5	; 181
    8496:	b8 0a       	sbc	r11, r24
    8498:	75 01       	movw	r14, r10
    849a:	64 01       	movw	r12, r8
    849c:	63 e1       	ldi	r22, 0x13	; 19
    849e:	f6 94       	lsr	r15
    84a0:	e7 94       	ror	r14
    84a2:	d7 94       	ror	r13
    84a4:	c7 94       	ror	r12
    84a6:	6a 95       	dec	r22
    84a8:	d1 f7       	brne	.-12     	; 0x849e <__stack+0x449f>
    84aa:	7d e0       	ldi	r23, 0x0D	; 13
    84ac:	88 0c       	add	r8, r8
    84ae:	99 1c       	adc	r9, r9
    84b0:	aa 1c       	adc	r10, r10
    84b2:	bb 1c       	adc	r11, r11
    84b4:	7a 95       	dec	r23
    84b6:	d1 f7       	brne	.-12     	; 0x84ac <__stack+0x44ad>
    84b8:	8c 28       	or	r8, r12
    84ba:	9d 28       	or	r9, r13
    84bc:	ae 28       	or	r10, r14
    84be:	bf 28       	or	r11, r15
    84c0:	a0 96       	adiw	r28, 0x20	; 32
    84c2:	88 82       	st	Y, r8
    84c4:	99 82       	std	Y+1, r9	; 0x01
    84c6:	aa 82       	std	Y+2, r10	; 0x02
    84c8:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[102] = ROL(key->rk[ 94] + delta[1][17],  1);
    84ca:	75 01       	movw	r14, r10
    84cc:	64 01       	movw	r12, r8
    84ce:	8c e3       	ldi	r24, 0x3C	; 60
    84d0:	c8 1a       	sub	r12, r24
    84d2:	87 e7       	ldi	r24, 0x77	; 119
    84d4:	d8 0a       	sbc	r13, r24
    84d6:	8b ef       	ldi	r24, 0xFB	; 251
    84d8:	e8 0a       	sbc	r14, r24
    84da:	89 e2       	ldi	r24, 0x29	; 41
    84dc:	f8 0a       	sbc	r15, r24
    84de:	cc 0c       	add	r12, r12
    84e0:	dd 1c       	adc	r13, r13
    84e2:	ee 1c       	adc	r14, r14
    84e4:	ff 1c       	adc	r15, r15
    84e6:	c1 1c       	adc	r12, r1
    84e8:	a0 96       	adiw	r28, 0x20	; 32
    84ea:	c8 82       	st	Y, r12
    84ec:	d9 82       	std	Y+1, r13	; 0x01
    84ee:	ea 82       	std	Y+2, r14	; 0x02
    84f0:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[110] = ROL(key->rk[102] + delta[2][20],  6);
    84f2:	46 01       	movw	r8, r12
    84f4:	57 01       	movw	r10, r14
    84f6:	89 ed       	ldi	r24, 0xD9	; 217
    84f8:	88 1a       	sub	r8, r24
    84fa:	81 e6       	ldi	r24, 0x61	; 97
    84fc:	98 0a       	sbc	r9, r24
    84fe:	88 e5       	ldi	r24, 0x58	; 88
    8500:	a8 0a       	sbc	r10, r24
    8502:	87 e3       	ldi	r24, 0x37	; 55
    8504:	b8 0a       	sbc	r11, r24
    8506:	75 01       	movw	r14, r10
    8508:	64 01       	movw	r12, r8
    850a:	1a e1       	ldi	r17, 0x1A	; 26
    850c:	f6 94       	lsr	r15
    850e:	e7 94       	ror	r14
    8510:	d7 94       	ror	r13
    8512:	c7 94       	ror	r12
    8514:	1a 95       	dec	r17
    8516:	d1 f7       	brne	.-12     	; 0x850c <__stack+0x450d>
    8518:	06 e0       	ldi	r16, 0x06	; 6
    851a:	88 0c       	add	r8, r8
    851c:	99 1c       	adc	r9, r9
    851e:	aa 1c       	adc	r10, r10
    8520:	bb 1c       	adc	r11, r11
    8522:	0a 95       	dec	r16
    8524:	d1 f7       	brne	.-12     	; 0x851a <__stack+0x451b>
    8526:	8c 28       	or	r8, r12
    8528:	9d 28       	or	r9, r13
    852a:	ae 28       	or	r10, r14
    852c:	bf 28       	or	r11, r15
    852e:	a0 96       	adiw	r28, 0x20	; 32
    8530:	88 82       	st	Y, r8
    8532:	99 82       	std	Y+1, r9	; 0x01
    8534:	aa 82       	std	Y+2, r10	; 0x02
    8536:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[118] = ROL(key->rk[110] + delta[3][23], 13);
    8538:	88 e6       	ldi	r24, 0x68	; 104
    853a:	88 1a       	sub	r8, r24
    853c:	80 e9       	ldi	r24, 0x90	; 144
    853e:	98 0a       	sbc	r9, r24
    8540:	83 ec       	ldi	r24, 0xC3	; 195
    8542:	a8 0a       	sbc	r10, r24
    8544:	89 e8       	ldi	r24, 0x89	; 137
    8546:	b8 0a       	sbc	r11, r24
    8548:	75 01       	movw	r14, r10
    854a:	64 01       	movw	r12, r8
    854c:	83 e1       	ldi	r24, 0x13	; 19
    854e:	f6 94       	lsr	r15
    8550:	e7 94       	ror	r14
    8552:	d7 94       	ror	r13
    8554:	c7 94       	ror	r12
    8556:	8a 95       	dec	r24
    8558:	d1 f7       	brne	.-12     	; 0x854e <__stack+0x454f>
    855a:	9d e0       	ldi	r25, 0x0D	; 13
    855c:	88 0c       	add	r8, r8
    855e:	99 1c       	adc	r9, r9
    8560:	aa 1c       	adc	r10, r10
    8562:	bb 1c       	adc	r11, r11
    8564:	9a 95       	dec	r25
    8566:	d1 f7       	brne	.-12     	; 0x855c <__stack+0x455d>
    8568:	8c 28       	or	r8, r12
    856a:	9d 28       	or	r9, r13
    856c:	ae 28       	or	r10, r14
    856e:	bf 28       	or	r11, r15
    8570:	a0 96       	adiw	r28, 0x20	; 32
    8572:	88 82       	st	Y, r8
    8574:	99 82       	std	Y+1, r9	; 0x01
    8576:	aa 82       	std	Y+2, r10	; 0x02
    8578:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[126] = ROL(key->rk[118] + delta[5][21],  1);
    857a:	75 01       	movw	r14, r10
    857c:	64 01       	movw	r12, r8
    857e:	85 e4       	ldi	r24, 0x45	; 69
    8580:	c8 1a       	sub	r12, r24
    8582:	8f e0       	ldi	r24, 0x0F	; 15
    8584:	d8 0a       	sbc	r13, r24
    8586:	87 ea       	ldi	r24, 0xA7	; 167
    8588:	e8 0a       	sbc	r14, r24
    858a:	8e eb       	ldi	r24, 0xBE	; 190
    858c:	f8 0a       	sbc	r15, r24
    858e:	cc 0c       	add	r12, r12
    8590:	dd 1c       	adc	r13, r13
    8592:	ee 1c       	adc	r14, r14
    8594:	ff 1c       	adc	r15, r15
    8596:	c1 1c       	adc	r12, r1
    8598:	a0 96       	adiw	r28, 0x20	; 32
    859a:	c8 82       	st	Y, r12
    859c:	d9 82       	std	Y+1, r13	; 0x01
    859e:	ea 82       	std	Y+2, r14	; 0x02
    85a0:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[134] = ROL(key->rk[126] + delta[6][24],  6);
    85a2:	46 01       	movw	r8, r12
    85a4:	57 01       	movw	r10, r14
    85a6:	8e e0       	ldi	r24, 0x0E	; 14
    85a8:	88 1a       	sub	r8, r24
    85aa:	81 eb       	ldi	r24, 0xB1	; 177
    85ac:	98 0a       	sbc	r9, r24
    85ae:	8f e1       	ldi	r24, 0x1F	; 31
    85b0:	a8 0a       	sbc	r10, r24
    85b2:	85 ed       	ldi	r24, 0xD5	; 213
    85b4:	b8 0a       	sbc	r11, r24
    85b6:	75 01       	movw	r14, r10
    85b8:	64 01       	movw	r12, r8
    85ba:	6a e1       	ldi	r22, 0x1A	; 26
    85bc:	f6 94       	lsr	r15
    85be:	e7 94       	ror	r14
    85c0:	d7 94       	ror	r13
    85c2:	c7 94       	ror	r12
    85c4:	6a 95       	dec	r22
    85c6:	d1 f7       	brne	.-12     	; 0x85bc <__stack+0x45bd>
    85c8:	76 e0       	ldi	r23, 0x06	; 6
    85ca:	88 0c       	add	r8, r8
    85cc:	99 1c       	adc	r9, r9
    85ce:	aa 1c       	adc	r10, r10
    85d0:	bb 1c       	adc	r11, r11
    85d2:	7a 95       	dec	r23
    85d4:	d1 f7       	brne	.-12     	; 0x85ca <__stack+0x45cb>
    85d6:	8c 28       	or	r8, r12
    85d8:	9d 28       	or	r9, r13
    85da:	ae 28       	or	r10, r14
    85dc:	bf 28       	or	r11, r15
    85de:	a0 96       	adiw	r28, 0x20	; 32
    85e0:	88 82       	st	Y, r8
    85e2:	99 82       	std	Y+1, r9	; 0x01
    85e4:	aa 82       	std	Y+2, r10	; 0x02
    85e6:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[142] = ROL(key->rk[134] + delta[7][27], 13);
    85e8:	86 eb       	ldi	r24, 0xB6	; 182
    85ea:	88 1a       	sub	r8, r24
    85ec:	8f ed       	ldi	r24, 0xDF	; 223
    85ee:	98 0a       	sbc	r9, r24
    85f0:	81 ed       	ldi	r24, 0xD1	; 209
    85f2:	a8 0a       	sbc	r10, r24
    85f4:	80 e4       	ldi	r24, 0x40	; 64
    85f6:	b8 0a       	sbc	r11, r24
    85f8:	75 01       	movw	r14, r10
    85fa:	64 01       	movw	r12, r8
    85fc:	13 e1       	ldi	r17, 0x13	; 19
    85fe:	f6 94       	lsr	r15
    8600:	e7 94       	ror	r14
    8602:	d7 94       	ror	r13
    8604:	c7 94       	ror	r12
    8606:	1a 95       	dec	r17
    8608:	d1 f7       	brne	.-12     	; 0x85fe <__stack+0x45ff>
    860a:	0d e0       	ldi	r16, 0x0D	; 13
    860c:	88 0c       	add	r8, r8
    860e:	99 1c       	adc	r9, r9
    8610:	aa 1c       	adc	r10, r10
    8612:	bb 1c       	adc	r11, r11
    8614:	0a 95       	dec	r16
    8616:	d1 f7       	brne	.-12     	; 0x860c <__stack+0x460d>
    8618:	8c 28       	or	r8, r12
    861a:	9d 28       	or	r9, r13
    861c:	ae 28       	or	r10, r14
    861e:	bf 28       	or	r11, r15
    8620:	a0 96       	adiw	r28, 0x20	; 32
    8622:	88 82       	st	Y, r8
    8624:	99 82       	std	Y+1, r9	; 0x01
    8626:	aa 82       	std	Y+2, r10	; 0x02
    8628:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[150] = ROL(key->rk[142] + delta[1][25],  1);
    862a:	75 01       	movw	r14, r10
    862c:	64 01       	movw	r12, r8
    862e:	8a e2       	ldi	r24, 0x2A	; 42
    8630:	c8 1a       	sub	r12, r24
    8632:	8b e3       	ldi	r24, 0x3B	; 59
    8634:	d8 0a       	sbc	r13, r24
    8636:	87 e7       	ldi	r24, 0x77	; 119
    8638:	e8 0a       	sbc	r14, r24
    863a:	8b ef       	ldi	r24, 0xFB	; 251
    863c:	f8 0a       	sbc	r15, r24
    863e:	cc 0c       	add	r12, r12
    8640:	dd 1c       	adc	r13, r13
    8642:	ee 1c       	adc	r14, r14
    8644:	ff 1c       	adc	r15, r15
    8646:	c1 1c       	adc	r12, r1
    8648:	a0 96       	adiw	r28, 0x20	; 32
    864a:	c8 82       	st	Y, r12
    864c:	d9 82       	std	Y+1, r13	; 0x01
    864e:	ea 82       	std	Y+2, r14	; 0x02
    8650:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[158] = ROL(key->rk[150] + delta[2][28],  6);
    8652:	46 01       	movw	r8, r12
    8654:	57 01       	movw	r10, r14
    8656:	88 e3       	ldi	r24, 0x38	; 56
    8658:	88 1a       	sub	r8, r24
    865a:	88 ed       	ldi	r24, 0xD8	; 216
    865c:	98 0a       	sbc	r9, r24
    865e:	81 e6       	ldi	r24, 0x61	; 97
    8660:	a8 0a       	sbc	r10, r24
    8662:	88 e5       	ldi	r24, 0x58	; 88
    8664:	b8 0a       	sbc	r11, r24
    8666:	75 01       	movw	r14, r10
    8668:	64 01       	movw	r12, r8
    866a:	8a e1       	ldi	r24, 0x1A	; 26
    866c:	f6 94       	lsr	r15
    866e:	e7 94       	ror	r14
    8670:	d7 94       	ror	r13
    8672:	c7 94       	ror	r12
    8674:	8a 95       	dec	r24
    8676:	d1 f7       	brne	.-12     	; 0x866c <__stack+0x466d>
    8678:	96 e0       	ldi	r25, 0x06	; 6
    867a:	88 0c       	add	r8, r8
    867c:	99 1c       	adc	r9, r9
    867e:	aa 1c       	adc	r10, r10
    8680:	bb 1c       	adc	r11, r11
    8682:	9a 95       	dec	r25
    8684:	d1 f7       	brne	.-12     	; 0x867a <__stack+0x467b>
    8686:	8c 28       	or	r8, r12
    8688:	9d 28       	or	r9, r13
    868a:	ae 28       	or	r10, r14
    868c:	bf 28       	or	r11, r15
    868e:	a0 96       	adiw	r28, 0x20	; 32
    8690:	88 82       	st	Y, r8
    8692:	99 82       	std	Y+1, r9	; 0x01
    8694:	aa 82       	std	Y+2, r10	; 0x02
    8696:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[166] = ROL(key->rk[158] + delta[3][31], 13);
    8698:	8a e8       	ldi	r24, 0x8A	; 138
    869a:	88 1a       	sub	r8, r24
    869c:	87 e6       	ldi	r24, 0x67	; 103
    869e:	98 0a       	sbc	r9, r24
    86a0:	80 e9       	ldi	r24, 0x90	; 144
    86a2:	a8 0a       	sbc	r10, r24
    86a4:	83 ec       	ldi	r24, 0xC3	; 195
    86a6:	b8 0a       	sbc	r11, r24
    86a8:	75 01       	movw	r14, r10
    86aa:	64 01       	movw	r12, r8
    86ac:	63 e1       	ldi	r22, 0x13	; 19
    86ae:	f6 94       	lsr	r15
    86b0:	e7 94       	ror	r14
    86b2:	d7 94       	ror	r13
    86b4:	c7 94       	ror	r12
    86b6:	6a 95       	dec	r22
    86b8:	d1 f7       	brne	.-12     	; 0x86ae <__stack+0x46af>
    86ba:	7d e0       	ldi	r23, 0x0D	; 13
    86bc:	88 0c       	add	r8, r8
    86be:	99 1c       	adc	r9, r9
    86c0:	aa 1c       	adc	r10, r10
    86c2:	bb 1c       	adc	r11, r11
    86c4:	7a 95       	dec	r23
    86c6:	d1 f7       	brne	.-12     	; 0x86bc <__stack+0x46bd>
    86c8:	8c 28       	or	r8, r12
    86ca:	9d 28       	or	r9, r13
    86cc:	ae 28       	or	r10, r14
    86ce:	bf 28       	or	r11, r15
    86d0:	a0 96       	adiw	r28, 0x20	; 32
    86d2:	88 82       	st	Y, r8
    86d4:	99 82       	std	Y+1, r9	; 0x01
    86d6:	aa 82       	std	Y+2, r10	; 0x02
    86d8:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[174] = ROL(key->rk[166] + delta[5][29],  1);
    86da:	75 01       	movw	r14, r10
    86dc:	64 01       	movw	r12, r8
    86de:	8f eb       	ldi	r24, 0xBF	; 191
    86e0:	c8 1a       	sub	r12, r24
    86e2:	84 e4       	ldi	r24, 0x44	; 68
    86e4:	d8 0a       	sbc	r13, r24
    86e6:	8f e0       	ldi	r24, 0x0F	; 15
    86e8:	e8 0a       	sbc	r14, r24
    86ea:	87 ea       	ldi	r24, 0xA7	; 167
    86ec:	f8 0a       	sbc	r15, r24
    86ee:	cc 0c       	add	r12, r12
    86f0:	dd 1c       	adc	r13, r13
    86f2:	ee 1c       	adc	r14, r14
    86f4:	ff 1c       	adc	r15, r15
    86f6:	c1 1c       	adc	r12, r1
    86f8:	a0 96       	adiw	r28, 0x20	; 32
    86fa:	c8 82       	st	Y, r12
    86fc:	d9 82       	std	Y+1, r13	; 0x01
    86fe:	ea 82       	std	Y+2, r14	; 0x02
    8700:	fb 82       	std	Y+3, r15	; 0x03
		key->rk[182] = ROL(key->rk[174] + delta[6][ 0],  6);
    8702:	46 01       	movw	r8, r12
    8704:	57 01       	movw	r10, r14
    8706:	86 ed       	ldi	r24, 0xD6	; 214
    8708:	88 1a       	sub	r8, r24
    870a:	8d e0       	ldi	r24, 0x0D	; 13
    870c:	98 0a       	sbc	r9, r24
    870e:	81 eb       	ldi	r24, 0xB1	; 177
    8710:	a8 0a       	sbc	r10, r24
    8712:	8f e1       	ldi	r24, 0x1F	; 31
    8714:	b8 0a       	sbc	r11, r24
    8716:	75 01       	movw	r14, r10
    8718:	64 01       	movw	r12, r8
    871a:	1a e1       	ldi	r17, 0x1A	; 26
    871c:	f6 94       	lsr	r15
    871e:	e7 94       	ror	r14
    8720:	d7 94       	ror	r13
    8722:	c7 94       	ror	r12
    8724:	1a 95       	dec	r17
    8726:	d1 f7       	brne	.-12     	; 0x871c <__stack+0x471d>
    8728:	06 e0       	ldi	r16, 0x06	; 6
    872a:	88 0c       	add	r8, r8
    872c:	99 1c       	adc	r9, r9
    872e:	aa 1c       	adc	r10, r10
    8730:	bb 1c       	adc	r11, r11
    8732:	0a 95       	dec	r16
    8734:	d1 f7       	brne	.-12     	; 0x872a <__stack+0x472b>
    8736:	8c 28       	or	r8, r12
    8738:	9d 28       	or	r9, r13
    873a:	ae 28       	or	r10, r14
    873c:	bf 28       	or	r11, r15
    873e:	a0 96       	adiw	r28, 0x20	; 32
    8740:	88 82       	st	Y, r8
    8742:	99 82       	std	Y+1, r9	; 0x01
    8744:	aa 82       	std	Y+2, r10	; 0x02
    8746:	bb 82       	std	Y+3, r11	; 0x03
		key->rk[190] = ROL(key->rk[182] + delta[7][ 3], 13);
    8748:	81 e4       	ldi	r24, 0x41	; 65
    874a:	88 1a       	sub	r8, r24
    874c:	85 eb       	ldi	r24, 0xB5	; 181
    874e:	98 0a       	sbc	r9, r24
    8750:	8f ed       	ldi	r24, 0xDF	; 223
    8752:	a8 0a       	sbc	r10, r24
    8754:	81 ed       	ldi	r24, 0xD1	; 209
    8756:	b8 0a       	sbc	r11, r24
    8758:	75 01       	movw	r14, r10
    875a:	64 01       	movw	r12, r8
    875c:	83 e1       	ldi	r24, 0x13	; 19
    875e:	f6 94       	lsr	r15
    8760:	e7 94       	ror	r14
    8762:	d7 94       	ror	r13
    8764:	c7 94       	ror	r12
    8766:	8a 95       	dec	r24
    8768:	d1 f7       	brne	.-12     	; 0x875e <__stack+0x475f>
    876a:	9d e0       	ldi	r25, 0x0D	; 13
    876c:	88 0c       	add	r8, r8
    876e:	99 1c       	adc	r9, r9
    8770:	aa 1c       	adc	r10, r10
    8772:	bb 1c       	adc	r11, r11
    8774:	9a 95       	dec	r25
    8776:	d1 f7       	brne	.-12     	; 0x876c <__stack+0x476d>
    8778:	c8 28       	or	r12, r8
    877a:	d9 28       	or	r13, r9
    877c:	ea 28       	or	r14, r10
    877e:	fb 28       	or	r15, r11
    8780:	a0 96       	adiw	r28, 0x20	; 32
    8782:	c8 82       	st	Y, r12
    8784:	d9 82       	std	Y+1, r13	; 0x01
    8786:	ea 82       	std	Y+2, r14	; 0x02
    8788:	fb 82       	std	Y+3, r15	; 0x03

		key->rk[  7] = ROL(loadU32(_mk[7]) + delta[1][ 2],  3);
    878a:	5c 96       	adiw	r26, 0x1c	; 28
    878c:	8d 91       	ld	r24, X+
    878e:	9d 91       	ld	r25, X+
    8790:	0d 90       	ld	r0, X+
    8792:	bc 91       	ld	r27, X
    8794:	a0 2d       	mov	r26, r0
    8796:	87 5f       	subi	r24, 0xF7	; 247
    8798:	93 45       	sbci	r25, 0x53	; 83
    879a:	a6 47       	sbci	r26, 0x76	; 118
    879c:	be 4e       	sbci	r27, 0xEE	; 238
    879e:	6c 01       	movw	r12, r24
    87a0:	7d 01       	movw	r14, r26
    87a2:	6d e1       	ldi	r22, 0x1D	; 29
    87a4:	f6 94       	lsr	r15
    87a6:	e7 94       	ror	r14
    87a8:	d7 94       	ror	r13
    87aa:	c7 94       	ror	r12
    87ac:	6a 95       	dec	r22
    87ae:	d1 f7       	brne	.-12     	; 0x87a4 <__stack+0x47a5>
    87b0:	73 e0       	ldi	r23, 0x03	; 3
    87b2:	88 0f       	add	r24, r24
    87b4:	99 1f       	adc	r25, r25
    87b6:	aa 1f       	adc	r26, r26
    87b8:	bb 1f       	adc	r27, r27
    87ba:	7a 95       	dec	r23
    87bc:	d1 f7       	brne	.-12     	; 0x87b2 <__stack+0x47b3>
    87be:	8c 29       	or	r24, r12
    87c0:	9d 29       	or	r25, r13
    87c2:	ae 29       	or	r26, r14
    87c4:	bf 29       	or	r27, r15
    87c6:	84 8f       	std	Z+28, r24	; 0x1c
    87c8:	95 8f       	std	Z+29, r25	; 0x1d
    87ca:	a6 8f       	std	Z+30, r26	; 0x1e
    87cc:	b7 8f       	std	Z+31, r27	; 0x1f
		key->rk[ 15] = ROL(key->rk[  7] + delta[2][ 5], 11);
    87ce:	81 5b       	subi	r24, 0xB1	; 177
    87d0:	9e 46       	sbci	r25, 0x6E	; 110
    87d2:	a0 4b       	sbci	r26, 0xB0	; 176
    87d4:	b3 4c       	sbci	r27, 0xC3	; 195
    87d6:	6c 01       	movw	r12, r24
    87d8:	7d 01       	movw	r14, r26
    87da:	15 e1       	ldi	r17, 0x15	; 21
    87dc:	f6 94       	lsr	r15
    87de:	e7 94       	ror	r14
    87e0:	d7 94       	ror	r13
    87e2:	c7 94       	ror	r12
    87e4:	1a 95       	dec	r17
    87e6:	d1 f7       	brne	.-12     	; 0x87dc <__stack+0x47dd>
    87e8:	0b e0       	ldi	r16, 0x0B	; 11
    87ea:	88 0f       	add	r24, r24
    87ec:	99 1f       	adc	r25, r25
    87ee:	aa 1f       	adc	r26, r26
    87f0:	bb 1f       	adc	r27, r27
    87f2:	0a 95       	dec	r16
    87f4:	d1 f7       	brne	.-12     	; 0x87ea <__stack+0x47eb>
    87f6:	8c 29       	or	r24, r12
    87f8:	9d 29       	or	r25, r13
    87fa:	ae 29       	or	r26, r14
    87fc:	bf 29       	or	r27, r15
    87fe:	84 af       	std	Z+60, r24	; 0x3c
    8800:	95 af       	std	Z+61, r25	; 0x3d
    8802:	a6 af       	std	Z+62, r26	; 0x3e
    8804:	b7 af       	std	Z+63, r27	; 0x3f
		key->rk[ 23] = ROL(key->rk[ 15] + delta[3][ 8], 17);
    8806:	88 58       	subi	r24, 0x88	; 136
    8808:	93 41       	sbci	r25, 0x13	; 19
    880a:	af 4c       	sbci	r26, 0xCF	; 207
    880c:	b0 42       	sbci	r27, 0x20	; 32
    880e:	6c 01       	movw	r12, r24
    8810:	7d 01       	movw	r14, r26
    8812:	6f e0       	ldi	r22, 0x0F	; 15
    8814:	f6 94       	lsr	r15
    8816:	e7 94       	ror	r14
    8818:	d7 94       	ror	r13
    881a:	c7 94       	ror	r12
    881c:	6a 95       	dec	r22
    881e:	d1 f7       	brne	.-12     	; 0x8814 <__stack+0x4815>
    8820:	71 e1       	ldi	r23, 0x11	; 17
    8822:	88 0f       	add	r24, r24
    8824:	99 1f       	adc	r25, r25
    8826:	aa 1f       	adc	r26, r26
    8828:	bb 1f       	adc	r27, r27
    882a:	7a 95       	dec	r23
    882c:	d1 f7       	brne	.-12     	; 0x8822 <__stack+0x4823>
    882e:	8c 29       	or	r24, r12
    8830:	9d 29       	or	r25, r13
    8832:	ae 29       	or	r26, r14
    8834:	bf 29       	or	r27, r15
    8836:	cc 59       	subi	r28, 0x9C	; 156
    8838:	d2 40       	sbci	r29, 0x02	; 2
    883a:	88 83       	st	Y, r24
    883c:	99 83       	std	Y+1, r25	; 0x01
    883e:	aa 83       	std	Y+2, r26	; 0x02
    8840:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[ 31] = ROL(key->rk[ 23] + delta[5][ 6],  3);
    8842:	8f 54       	subi	r24, 0x4F	; 79
    8844:	9d 47       	sbci	r25, 0x7D	; 125
    8846:	a9 48       	sbci	r26, 0x89	; 137
    8848:	be 41       	sbci	r27, 0x1E	; 30
    884a:	6c 01       	movw	r12, r24
    884c:	7d 01       	movw	r14, r26
    884e:	1d e1       	ldi	r17, 0x1D	; 29
    8850:	f6 94       	lsr	r15
    8852:	e7 94       	ror	r14
    8854:	d7 94       	ror	r13
    8856:	c7 94       	ror	r12
    8858:	1a 95       	dec	r17
    885a:	d1 f7       	brne	.-12     	; 0x8850 <__stack+0x4851>
    885c:	03 e0       	ldi	r16, 0x03	; 3
    885e:	88 0f       	add	r24, r24
    8860:	99 1f       	adc	r25, r25
    8862:	aa 1f       	adc	r26, r26
    8864:	bb 1f       	adc	r27, r27
    8866:	0a 95       	dec	r16
    8868:	d1 f7       	brne	.-12     	; 0x885e <__stack+0x485f>
    886a:	8c 29       	or	r24, r12
    886c:	9d 29       	or	r25, r13
    886e:	ae 29       	or	r26, r14
    8870:	bf 29       	or	r27, r15
    8872:	a0 96       	adiw	r28, 0x20	; 32
    8874:	88 83       	st	Y, r24
    8876:	99 83       	std	Y+1, r25	; 0x01
    8878:	aa 83       	std	Y+2, r26	; 0x02
    887a:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[ 39] = ROL(key->rk[ 31] + delta[6][ 9], 11);
    887c:	80 54       	subi	r24, 0x40	; 64
    887e:	9a 4a       	sbci	r25, 0xAA	; 170
    8880:	ab 41       	sbci	r26, 0x1B	; 27
    8882:	b2 46       	sbci	r27, 0x62	; 98
    8884:	6c 01       	movw	r12, r24
    8886:	7d 01       	movw	r14, r26
    8888:	65 e1       	ldi	r22, 0x15	; 21
    888a:	f6 94       	lsr	r15
    888c:	e7 94       	ror	r14
    888e:	d7 94       	ror	r13
    8890:	c7 94       	ror	r12
    8892:	6a 95       	dec	r22
    8894:	d1 f7       	brne	.-12     	; 0x888a <__stack+0x488b>
    8896:	7b e0       	ldi	r23, 0x0B	; 11
    8898:	88 0f       	add	r24, r24
    889a:	99 1f       	adc	r25, r25
    889c:	aa 1f       	adc	r26, r26
    889e:	bb 1f       	adc	r27, r27
    88a0:	7a 95       	dec	r23
    88a2:	d1 f7       	brne	.-12     	; 0x8898 <__stack+0x4899>
    88a4:	8c 29       	or	r24, r12
    88a6:	9d 29       	or	r25, r13
    88a8:	ae 29       	or	r26, r14
    88aa:	bf 29       	or	r27, r15
    88ac:	a0 96       	adiw	r28, 0x20	; 32
    88ae:	88 83       	st	Y, r24
    88b0:	99 83       	std	Y+1, r25	; 0x01
    88b2:	aa 83       	std	Y+2, r26	; 0x02
    88b4:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[ 47] = ROL(key->rk[ 39] + delta[7][12], 17);
    88b6:	84 5a       	subi	r24, 0xA4	; 164
    88b8:	91 48       	sbci	r25, 0x81	; 129
    88ba:	aa 46       	sbci	r26, 0x6A	; 106
    88bc:	bf 4b       	sbci	r27, 0xBF	; 191
    88be:	6c 01       	movw	r12, r24
    88c0:	7d 01       	movw	r14, r26
    88c2:	1f e0       	ldi	r17, 0x0F	; 15
    88c4:	f6 94       	lsr	r15
    88c6:	e7 94       	ror	r14
    88c8:	d7 94       	ror	r13
    88ca:	c7 94       	ror	r12
    88cc:	1a 95       	dec	r17
    88ce:	d1 f7       	brne	.-12     	; 0x88c4 <__stack+0x48c5>
    88d0:	01 e1       	ldi	r16, 0x11	; 17
    88d2:	88 0f       	add	r24, r24
    88d4:	99 1f       	adc	r25, r25
    88d6:	aa 1f       	adc	r26, r26
    88d8:	bb 1f       	adc	r27, r27
    88da:	0a 95       	dec	r16
    88dc:	d1 f7       	brne	.-12     	; 0x88d2 <__stack+0x48d3>
    88de:	8c 29       	or	r24, r12
    88e0:	9d 29       	or	r25, r13
    88e2:	ae 29       	or	r26, r14
    88e4:	bf 29       	or	r27, r15
    88e6:	a0 96       	adiw	r28, 0x20	; 32
    88e8:	88 83       	st	Y, r24
    88ea:	99 83       	std	Y+1, r25	; 0x01
    88ec:	aa 83       	std	Y+2, r26	; 0x02
    88ee:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[ 55] = ROL(key->rk[ 47] + delta[1][10],  3);
    88f0:	8f 5e       	subi	r24, 0xEF	; 239
    88f2:	96 4f       	sbci	r25, 0xF6	; 246
    88f4:	a3 45       	sbci	r26, 0x53	; 83
    88f6:	b6 47       	sbci	r27, 0x76	; 118
    88f8:	6c 01       	movw	r12, r24
    88fa:	7d 01       	movw	r14, r26
    88fc:	6d e1       	ldi	r22, 0x1D	; 29
    88fe:	f6 94       	lsr	r15
    8900:	e7 94       	ror	r14
    8902:	d7 94       	ror	r13
    8904:	c7 94       	ror	r12
    8906:	6a 95       	dec	r22
    8908:	d1 f7       	brne	.-12     	; 0x88fe <__stack+0x48ff>
    890a:	73 e0       	ldi	r23, 0x03	; 3
    890c:	88 0f       	add	r24, r24
    890e:	99 1f       	adc	r25, r25
    8910:	aa 1f       	adc	r26, r26
    8912:	bb 1f       	adc	r27, r27
    8914:	7a 95       	dec	r23
    8916:	d1 f7       	brne	.-12     	; 0x890c <__stack+0x490d>
    8918:	8c 29       	or	r24, r12
    891a:	9d 29       	or	r25, r13
    891c:	ae 29       	or	r26, r14
    891e:	bf 29       	or	r27, r15
    8920:	a0 96       	adiw	r28, 0x20	; 32
    8922:	88 83       	st	Y, r24
    8924:	99 83       	std	Y+1, r25	; 0x01
    8926:	aa 83       	std	Y+2, r26	; 0x02
    8928:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[ 63] = ROL(key->rk[ 55] + delta[2][13], 11);
    892a:	84 5c       	subi	r24, 0xC4	; 196
    892c:	90 4b       	sbci	r25, 0xB0	; 176
    892e:	ae 46       	sbci	r26, 0x6E	; 110
    8930:	b0 4b       	sbci	r27, 0xB0	; 176
    8932:	6c 01       	movw	r12, r24
    8934:	7d 01       	movw	r14, r26
    8936:	15 e1       	ldi	r17, 0x15	; 21
    8938:	f6 94       	lsr	r15
    893a:	e7 94       	ror	r14
    893c:	d7 94       	ror	r13
    893e:	c7 94       	ror	r12
    8940:	1a 95       	dec	r17
    8942:	d1 f7       	brne	.-12     	; 0x8938 <__stack+0x4939>
    8944:	0b e0       	ldi	r16, 0x0B	; 11
    8946:	88 0f       	add	r24, r24
    8948:	99 1f       	adc	r25, r25
    894a:	aa 1f       	adc	r26, r26
    894c:	bb 1f       	adc	r27, r27
    894e:	0a 95       	dec	r16
    8950:	d1 f7       	brne	.-12     	; 0x8946 <__stack+0x4947>
    8952:	8c 29       	or	r24, r12
    8954:	9d 29       	or	r25, r13
    8956:	ae 29       	or	r26, r14
    8958:	bf 29       	or	r27, r15
    895a:	a0 96       	adiw	r28, 0x20	; 32
    895c:	88 83       	st	Y, r24
    895e:	99 83       	std	Y+1, r25	; 0x01
    8960:	aa 83       	std	Y+2, r26	; 0x02
    8962:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[ 71] = ROL(key->rk[ 63] + delta[3][16], 17);
    8964:	81 52       	subi	r24, 0x21	; 33
    8966:	97 48       	sbci	r25, 0x87	; 135
    8968:	a3 41       	sbci	r26, 0x13	; 19
    896a:	bf 4c       	sbci	r27, 0xCF	; 207
    896c:	6c 01       	movw	r12, r24
    896e:	7d 01       	movw	r14, r26
    8970:	6f e0       	ldi	r22, 0x0F	; 15
    8972:	f6 94       	lsr	r15
    8974:	e7 94       	ror	r14
    8976:	d7 94       	ror	r13
    8978:	c7 94       	ror	r12
    897a:	6a 95       	dec	r22
    897c:	d1 f7       	brne	.-12     	; 0x8972 <__stack+0x4973>
    897e:	71 e1       	ldi	r23, 0x11	; 17
    8980:	88 0f       	add	r24, r24
    8982:	99 1f       	adc	r25, r25
    8984:	aa 1f       	adc	r26, r26
    8986:	bb 1f       	adc	r27, r27
    8988:	7a 95       	dec	r23
    898a:	d1 f7       	brne	.-12     	; 0x8980 <__stack+0x4981>
    898c:	8c 29       	or	r24, r12
    898e:	9d 29       	or	r25, r13
    8990:	ae 29       	or	r26, r14
    8992:	bf 29       	or	r27, r15
    8994:	a0 96       	adiw	r28, 0x20	; 32
    8996:	88 83       	st	Y, r24
    8998:	99 83       	std	Y+1, r25	; 0x01
    899a:	aa 83       	std	Y+2, r26	; 0x02
    899c:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[ 79] = ROL(key->rk[ 71] + delta[5][14],  3);
    899e:	8f 51       	subi	r24, 0x1F	; 31
    89a0:	9e 44       	sbci	r25, 0x4E	; 78
    89a2:	ad 47       	sbci	r26, 0x7D	; 125
    89a4:	b9 48       	sbci	r27, 0x89	; 137
    89a6:	6c 01       	movw	r12, r24
    89a8:	7d 01       	movw	r14, r26
    89aa:	1d e1       	ldi	r17, 0x1D	; 29
    89ac:	f6 94       	lsr	r15
    89ae:	e7 94       	ror	r14
    89b0:	d7 94       	ror	r13
    89b2:	c7 94       	ror	r12
    89b4:	1a 95       	dec	r17
    89b6:	d1 f7       	brne	.-12     	; 0x89ac <__stack+0x49ad>
    89b8:	03 e0       	ldi	r16, 0x03	; 3
    89ba:	88 0f       	add	r24, r24
    89bc:	99 1f       	adc	r25, r25
    89be:	aa 1f       	adc	r26, r26
    89c0:	bb 1f       	adc	r27, r27
    89c2:	0a 95       	dec	r16
    89c4:	d1 f7       	brne	.-12     	; 0x89ba <__stack+0x49bb>
    89c6:	8c 29       	or	r24, r12
    89c8:	9d 29       	or	r25, r13
    89ca:	ae 29       	or	r26, r14
    89cc:	bf 29       	or	r27, r15
    89ce:	a0 96       	adiw	r28, 0x20	; 32
    89d0:	88 83       	st	Y, r24
    89d2:	99 83       	std	Y+1, r25	; 0x01
    89d4:	aa 83       	std	Y+2, r26	; 0x02
    89d6:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[ 87] = ROL(key->rk[ 79] + delta[6][17], 11);
    89d8:	83 56       	subi	r24, 0x63	; 99
    89da:	9f 43       	sbci	r25, 0x3F	; 63
    89dc:	aa 4a       	sbci	r26, 0xAA	; 170
    89de:	bb 41       	sbci	r27, 0x1B	; 27
    89e0:	6c 01       	movw	r12, r24
    89e2:	7d 01       	movw	r14, r26
    89e4:	65 e1       	ldi	r22, 0x15	; 21
    89e6:	f6 94       	lsr	r15
    89e8:	e7 94       	ror	r14
    89ea:	d7 94       	ror	r13
    89ec:	c7 94       	ror	r12
    89ee:	6a 95       	dec	r22
    89f0:	d1 f7       	brne	.-12     	; 0x89e6 <__stack+0x49e7>
    89f2:	7b e0       	ldi	r23, 0x0B	; 11
    89f4:	88 0f       	add	r24, r24
    89f6:	99 1f       	adc	r25, r25
    89f8:	aa 1f       	adc	r26, r26
    89fa:	bb 1f       	adc	r27, r27
    89fc:	7a 95       	dec	r23
    89fe:	d1 f7       	brne	.-12     	; 0x89f4 <__stack+0x49f5>
    8a00:	8c 29       	or	r24, r12
    8a02:	9d 29       	or	r25, r13
    8a04:	ae 29       	or	r26, r14
    8a06:	bf 29       	or	r27, r15
    8a08:	a0 96       	adiw	r28, 0x20	; 32
    8a0a:	88 83       	st	Y, r24
    8a0c:	99 83       	std	Y+1, r25	; 0x01
    8a0e:	aa 83       	std	Y+2, r26	; 0x02
    8a10:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[ 95] = ROL(key->rk[ 87] + delta[7][20], 17);
    8a12:	80 5c       	subi	r24, 0xC0	; 192
    8a14:	93 4a       	sbci	r25, 0xA3	; 163
    8a16:	a1 48       	sbci	r26, 0x81	; 129
    8a18:	ba 46       	sbci	r27, 0x6A	; 106
    8a1a:	6c 01       	movw	r12, r24
    8a1c:	7d 01       	movw	r14, r26
    8a1e:	1f e0       	ldi	r17, 0x0F	; 15
    8a20:	f6 94       	lsr	r15
    8a22:	e7 94       	ror	r14
    8a24:	d7 94       	ror	r13
    8a26:	c7 94       	ror	r12
    8a28:	1a 95       	dec	r17
    8a2a:	d1 f7       	brne	.-12     	; 0x8a20 <__stack+0x4a21>
    8a2c:	01 e1       	ldi	r16, 0x11	; 17
    8a2e:	88 0f       	add	r24, r24
    8a30:	99 1f       	adc	r25, r25
    8a32:	aa 1f       	adc	r26, r26
    8a34:	bb 1f       	adc	r27, r27
    8a36:	0a 95       	dec	r16
    8a38:	d1 f7       	brne	.-12     	; 0x8a2e <__stack+0x4a2f>
    8a3a:	8c 29       	or	r24, r12
    8a3c:	9d 29       	or	r25, r13
    8a3e:	ae 29       	or	r26, r14
    8a40:	bf 29       	or	r27, r15
    8a42:	a0 96       	adiw	r28, 0x20	; 32
    8a44:	88 83       	st	Y, r24
    8a46:	99 83       	std	Y+1, r25	; 0x01
    8a48:	aa 83       	std	Y+2, r26	; 0x02
    8a4a:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[103] = ROL(key->rk[ 95] + delta[1][18],  3);
    8a4c:	87 57       	subi	r24, 0x77	; 119
    8a4e:	9e 4e       	sbci	r25, 0xEE	; 238
    8a50:	a6 4f       	sbci	r26, 0xF6	; 246
    8a52:	b3 45       	sbci	r27, 0x53	; 83
    8a54:	6c 01       	movw	r12, r24
    8a56:	7d 01       	movw	r14, r26
    8a58:	6d e1       	ldi	r22, 0x1D	; 29
    8a5a:	f6 94       	lsr	r15
    8a5c:	e7 94       	ror	r14
    8a5e:	d7 94       	ror	r13
    8a60:	c7 94       	ror	r12
    8a62:	6a 95       	dec	r22
    8a64:	d1 f7       	brne	.-12     	; 0x8a5a <__stack+0x4a5b>
    8a66:	73 e0       	ldi	r23, 0x03	; 3
    8a68:	88 0f       	add	r24, r24
    8a6a:	99 1f       	adc	r25, r25
    8a6c:	aa 1f       	adc	r26, r26
    8a6e:	bb 1f       	adc	r27, r27
    8a70:	7a 95       	dec	r23
    8a72:	d1 f7       	brne	.-12     	; 0x8a68 <__stack+0x4a69>
    8a74:	8c 29       	or	r24, r12
    8a76:	9d 29       	or	r25, r13
    8a78:	ae 29       	or	r26, r14
    8a7a:	bf 29       	or	r27, r15
    8a7c:	a0 96       	adiw	r28, 0x20	; 32
    8a7e:	88 83       	st	Y, r24
    8a80:	99 83       	std	Y+1, r25	; 0x01
    8a82:	aa 83       	std	Y+2, r26	; 0x02
    8a84:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[111] = ROL(key->rk[103] + delta[2][21], 11);
    8a86:	81 5b       	subi	r24, 0xB1	; 177
    8a88:	93 4c       	sbci	r25, 0xC3	; 195
    8a8a:	a0 4b       	sbci	r26, 0xB0	; 176
    8a8c:	be 46       	sbci	r27, 0x6E	; 110
    8a8e:	6c 01       	movw	r12, r24
    8a90:	7d 01       	movw	r14, r26
    8a92:	15 e1       	ldi	r17, 0x15	; 21
    8a94:	f6 94       	lsr	r15
    8a96:	e7 94       	ror	r14
    8a98:	d7 94       	ror	r13
    8a9a:	c7 94       	ror	r12
    8a9c:	1a 95       	dec	r17
    8a9e:	d1 f7       	brne	.-12     	; 0x8a94 <__stack+0x4a95>
    8aa0:	0b e0       	ldi	r16, 0x0B	; 11
    8aa2:	88 0f       	add	r24, r24
    8aa4:	99 1f       	adc	r25, r25
    8aa6:	aa 1f       	adc	r26, r26
    8aa8:	bb 1f       	adc	r27, r27
    8aaa:	0a 95       	dec	r16
    8aac:	d1 f7       	brne	.-12     	; 0x8aa2 <__stack+0x4aa3>
    8aae:	8c 29       	or	r24, r12
    8ab0:	9d 29       	or	r25, r13
    8ab2:	ae 29       	or	r26, r14
    8ab4:	bf 29       	or	r27, r15
    8ab6:	a0 96       	adiw	r28, 0x20	; 32
    8ab8:	88 83       	st	Y, r24
    8aba:	99 83       	std	Y+1, r25	; 0x01
    8abc:	aa 83       	std	Y+2, r26	; 0x02
    8abe:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[119] = ROL(key->rk[111] + delta[3][24], 17);
    8ac0:	80 5d       	subi	r24, 0xD0	; 208
    8ac2:	90 42       	sbci	r25, 0x20	; 32
    8ac4:	a7 48       	sbci	r26, 0x87	; 135
    8ac6:	b3 41       	sbci	r27, 0x13	; 19
    8ac8:	6c 01       	movw	r12, r24
    8aca:	7d 01       	movw	r14, r26
    8acc:	6f e0       	ldi	r22, 0x0F	; 15
    8ace:	f6 94       	lsr	r15
    8ad0:	e7 94       	ror	r14
    8ad2:	d7 94       	ror	r13
    8ad4:	c7 94       	ror	r12
    8ad6:	6a 95       	dec	r22
    8ad8:	d1 f7       	brne	.-12     	; 0x8ace <__stack+0x4acf>
    8ada:	71 e1       	ldi	r23, 0x11	; 17
    8adc:	88 0f       	add	r24, r24
    8ade:	99 1f       	adc	r25, r25
    8ae0:	aa 1f       	adc	r26, r26
    8ae2:	bb 1f       	adc	r27, r27
    8ae4:	7a 95       	dec	r23
    8ae6:	d1 f7       	brne	.-12     	; 0x8adc <__stack+0x4add>
    8ae8:	8c 29       	or	r24, r12
    8aea:	9d 29       	or	r25, r13
    8aec:	ae 29       	or	r26, r14
    8aee:	bf 29       	or	r27, r15
    8af0:	a0 96       	adiw	r28, 0x20	; 32
    8af2:	88 83       	st	Y, r24
    8af4:	99 83       	std	Y+1, r25	; 0x01
    8af6:	aa 83       	std	Y+2, r26	; 0x02
    8af8:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[127] = ROL(key->rk[119] + delta[5][22],  3);
    8afa:	8a 58       	subi	r24, 0x8A	; 138
    8afc:	9e 41       	sbci	r25, 0x1E	; 30
    8afe:	ae 44       	sbci	r26, 0x4E	; 78
    8b00:	bd 47       	sbci	r27, 0x7D	; 125
    8b02:	6c 01       	movw	r12, r24
    8b04:	7d 01       	movw	r14, r26
    8b06:	1d e1       	ldi	r17, 0x1D	; 29
    8b08:	f6 94       	lsr	r15
    8b0a:	e7 94       	ror	r14
    8b0c:	d7 94       	ror	r13
    8b0e:	c7 94       	ror	r12
    8b10:	1a 95       	dec	r17
    8b12:	d1 f7       	brne	.-12     	; 0x8b08 <__stack+0x4b09>
    8b14:	03 e0       	ldi	r16, 0x03	; 3
    8b16:	88 0f       	add	r24, r24
    8b18:	99 1f       	adc	r25, r25
    8b1a:	aa 1f       	adc	r26, r26
    8b1c:	bb 1f       	adc	r27, r27
    8b1e:	0a 95       	dec	r16
    8b20:	d1 f7       	brne	.-12     	; 0x8b16 <__stack+0x4b17>
    8b22:	8c 29       	or	r24, r12
    8b24:	9d 29       	or	r25, r13
    8b26:	ae 29       	or	r26, r14
    8b28:	bf 29       	or	r27, r15
    8b2a:	a0 96       	adiw	r28, 0x20	; 32
    8b2c:	88 83       	st	Y, r24
    8b2e:	99 83       	std	Y+1, r25	; 0x01
    8b30:	aa 83       	std	Y+2, r26	; 0x02
    8b32:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[135] = ROL(key->rk[127] + delta[6][25], 11);
    8b34:	8c 51       	subi	r24, 0x1C	; 28
    8b36:	92 46       	sbci	r25, 0x62	; 98
    8b38:	af 43       	sbci	r26, 0x3F	; 63
    8b3a:	ba 4a       	sbci	r27, 0xAA	; 170
    8b3c:	6c 01       	movw	r12, r24
    8b3e:	7d 01       	movw	r14, r26
    8b40:	65 e1       	ldi	r22, 0x15	; 21
    8b42:	f6 94       	lsr	r15
    8b44:	e7 94       	ror	r14
    8b46:	d7 94       	ror	r13
    8b48:	c7 94       	ror	r12
    8b4a:	6a 95       	dec	r22
    8b4c:	d1 f7       	brne	.-12     	; 0x8b42 <__stack+0x4b43>
    8b4e:	7b e0       	ldi	r23, 0x0B	; 11
    8b50:	88 0f       	add	r24, r24
    8b52:	99 1f       	adc	r25, r25
    8b54:	aa 1f       	adc	r26, r26
    8b56:	bb 1f       	adc	r27, r27
    8b58:	7a 95       	dec	r23
    8b5a:	d1 f7       	brne	.-12     	; 0x8b50 <__stack+0x4b51>
    8b5c:	8c 29       	or	r24, r12
    8b5e:	9d 29       	or	r25, r13
    8b60:	ae 29       	or	r26, r14
    8b62:	bf 29       	or	r27, r15
    8b64:	a0 96       	adiw	r28, 0x20	; 32
    8b66:	88 83       	st	Y, r24
    8b68:	99 83       	std	Y+1, r25	; 0x01
    8b6a:	aa 83       	std	Y+2, r26	; 0x02
    8b6c:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[143] = ROL(key->rk[135] + delta[7][28], 17);
    8b6e:	8b 56       	subi	r24, 0x6B	; 107
    8b70:	9f 4b       	sbci	r25, 0xBF	; 191
    8b72:	a3 4a       	sbci	r26, 0xA3	; 163
    8b74:	b1 48       	sbci	r27, 0x81	; 129
    8b76:	6c 01       	movw	r12, r24
    8b78:	7d 01       	movw	r14, r26
    8b7a:	1f e0       	ldi	r17, 0x0F	; 15
    8b7c:	f6 94       	lsr	r15
    8b7e:	e7 94       	ror	r14
    8b80:	d7 94       	ror	r13
    8b82:	c7 94       	ror	r12
    8b84:	1a 95       	dec	r17
    8b86:	d1 f7       	brne	.-12     	; 0x8b7c <__stack+0x4b7d>
    8b88:	01 e1       	ldi	r16, 0x11	; 17
    8b8a:	88 0f       	add	r24, r24
    8b8c:	99 1f       	adc	r25, r25
    8b8e:	aa 1f       	adc	r26, r26
    8b90:	bb 1f       	adc	r27, r27
    8b92:	0a 95       	dec	r16
    8b94:	d1 f7       	brne	.-12     	; 0x8b8a <__stack+0x4b8b>
    8b96:	8c 29       	or	r24, r12
    8b98:	9d 29       	or	r25, r13
    8b9a:	ae 29       	or	r26, r14
    8b9c:	bf 29       	or	r27, r15
    8b9e:	a0 96       	adiw	r28, 0x20	; 32
    8ba0:	88 83       	st	Y, r24
    8ba2:	99 83       	std	Y+1, r25	; 0x01
    8ba4:	aa 83       	std	Y+2, r26	; 0x02
    8ba6:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[151] = ROL(key->rk[143] + delta[1][26],  3);
    8ba8:	84 55       	subi	r24, 0x54	; 84
    8baa:	96 47       	sbci	r25, 0x76	; 118
    8bac:	ae 4e       	sbci	r26, 0xEE	; 238
    8bae:	b6 4f       	sbci	r27, 0xF6	; 246
    8bb0:	6c 01       	movw	r12, r24
    8bb2:	7d 01       	movw	r14, r26
    8bb4:	6d e1       	ldi	r22, 0x1D	; 29
    8bb6:	f6 94       	lsr	r15
    8bb8:	e7 94       	ror	r14
    8bba:	d7 94       	ror	r13
    8bbc:	c7 94       	ror	r12
    8bbe:	6a 95       	dec	r22
    8bc0:	d1 f7       	brne	.-12     	; 0x8bb6 <__stack+0x4bb7>
    8bc2:	73 e0       	ldi	r23, 0x03	; 3
    8bc4:	88 0f       	add	r24, r24
    8bc6:	99 1f       	adc	r25, r25
    8bc8:	aa 1f       	adc	r26, r26
    8bca:	bb 1f       	adc	r27, r27
    8bcc:	7a 95       	dec	r23
    8bce:	d1 f7       	brne	.-12     	; 0x8bc4 <__stack+0x4bc5>
    8bd0:	8c 29       	or	r24, r12
    8bd2:	9d 29       	or	r25, r13
    8bd4:	ae 29       	or	r26, r14
    8bd6:	bf 29       	or	r27, r15
    8bd8:	a0 96       	adiw	r28, 0x20	; 32
    8bda:	88 83       	st	Y, r24
    8bdc:	99 83       	std	Y+1, r25	; 0x01
    8bde:	aa 83       	std	Y+2, r26	; 0x02
    8be0:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[159] = ROL(key->rk[151] + delta[2][29], 11);
    8be2:	8f 56       	subi	r24, 0x6F	; 111
    8be4:	90 4b       	sbci	r25, 0xB0	; 176
    8be6:	a3 4c       	sbci	r26, 0xC3	; 195
    8be8:	b0 4b       	sbci	r27, 0xB0	; 176
    8bea:	6c 01       	movw	r12, r24
    8bec:	7d 01       	movw	r14, r26
    8bee:	15 e1       	ldi	r17, 0x15	; 21
    8bf0:	f6 94       	lsr	r15
    8bf2:	e7 94       	ror	r14
    8bf4:	d7 94       	ror	r13
    8bf6:	c7 94       	ror	r12
    8bf8:	1a 95       	dec	r17
    8bfa:	d1 f7       	brne	.-12     	; 0x8bf0 <__stack+0x4bf1>
    8bfc:	0b e0       	ldi	r16, 0x0B	; 11
    8bfe:	88 0f       	add	r24, r24
    8c00:	99 1f       	adc	r25, r25
    8c02:	aa 1f       	adc	r26, r26
    8c04:	bb 1f       	adc	r27, r27
    8c06:	0a 95       	dec	r16
    8c08:	d1 f7       	brne	.-12     	; 0x8bfe <__stack+0x4bff>
    8c0a:	8c 29       	or	r24, r12
    8c0c:	9d 29       	or	r25, r13
    8c0e:	ae 29       	or	r26, r14
    8c10:	bf 29       	or	r27, r15
    8c12:	a0 96       	adiw	r28, 0x20	; 32
    8c14:	88 83       	st	Y, r24
    8c16:	99 83       	std	Y+1, r25	; 0x01
    8c18:	aa 83       	std	Y+2, r26	; 0x02
    8c1a:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[167] = ROL(key->rk[159] + delta[3][ 0], 17);
    8c1c:	84 51       	subi	r24, 0x14	; 20
    8c1e:	9f 4c       	sbci	r25, 0xCF	; 207
    8c20:	a0 42       	sbci	r26, 0x20	; 32
    8c22:	b7 48       	sbci	r27, 0x87	; 135
    8c24:	6c 01       	movw	r12, r24
    8c26:	7d 01       	movw	r14, r26
    8c28:	6f e0       	ldi	r22, 0x0F	; 15
    8c2a:	f6 94       	lsr	r15
    8c2c:	e7 94       	ror	r14
    8c2e:	d7 94       	ror	r13
    8c30:	c7 94       	ror	r12
    8c32:	6a 95       	dec	r22
    8c34:	d1 f7       	brne	.-12     	; 0x8c2a <__stack+0x4c2b>
    8c36:	71 e1       	ldi	r23, 0x11	; 17
    8c38:	88 0f       	add	r24, r24
    8c3a:	99 1f       	adc	r25, r25
    8c3c:	aa 1f       	adc	r26, r26
    8c3e:	bb 1f       	adc	r27, r27
    8c40:	7a 95       	dec	r23
    8c42:	d1 f7       	brne	.-12     	; 0x8c38 <__stack+0x4c39>
    8c44:	8c 29       	or	r24, r12
    8c46:	9d 29       	or	r25, r13
    8c48:	ae 29       	or	r26, r14
    8c4a:	bf 29       	or	r27, r15
    8c4c:	a0 96       	adiw	r28, 0x20	; 32
    8c4e:	88 83       	st	Y, r24
    8c50:	99 83       	std	Y+1, r25	; 0x01
    8c52:	aa 83       	std	Y+2, r26	; 0x02
    8c54:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[175] = ROL(key->rk[167] + delta[5][30],  3);
    8c56:	8e 57       	subi	r24, 0x7E	; 126
    8c58:	99 48       	sbci	r25, 0x89	; 137
    8c5a:	ae 41       	sbci	r26, 0x1E	; 30
    8c5c:	be 44       	sbci	r27, 0x4E	; 78
    8c5e:	6c 01       	movw	r12, r24
    8c60:	7d 01       	movw	r14, r26
    8c62:	1d e1       	ldi	r17, 0x1D	; 29
    8c64:	f6 94       	lsr	r15
    8c66:	e7 94       	ror	r14
    8c68:	d7 94       	ror	r13
    8c6a:	c7 94       	ror	r12
    8c6c:	1a 95       	dec	r17
    8c6e:	d1 f7       	brne	.-12     	; 0x8c64 <__stack+0x4c65>
    8c70:	03 e0       	ldi	r16, 0x03	; 3
    8c72:	88 0f       	add	r24, r24
    8c74:	99 1f       	adc	r25, r25
    8c76:	aa 1f       	adc	r26, r26
    8c78:	bb 1f       	adc	r27, r27
    8c7a:	0a 95       	dec	r16
    8c7c:	d1 f7       	brne	.-12     	; 0x8c72 <__stack+0x4c73>
    8c7e:	8c 29       	or	r24, r12
    8c80:	9d 29       	or	r25, r13
    8c82:	ae 29       	or	r26, r14
    8c84:	bf 29       	or	r27, r15
    8c86:	a0 96       	adiw	r28, 0x20	; 32
    8c88:	88 83       	st	Y, r24
    8c8a:	99 83       	std	Y+1, r25	; 0x01
    8c8c:	aa 83       	std	Y+2, r26	; 0x02
    8c8e:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[183] = ROL(key->rk[175] + delta[6][ 1], 11);
    8c90:	8b 5a       	subi	r24, 0xAB	; 171
    8c92:	9b 41       	sbci	r25, 0x1B	; 27
    8c94:	a2 46       	sbci	r26, 0x62	; 98
    8c96:	bf 43       	sbci	r27, 0x3F	; 63
    8c98:	6c 01       	movw	r12, r24
    8c9a:	7d 01       	movw	r14, r26
    8c9c:	65 e1       	ldi	r22, 0x15	; 21
    8c9e:	f6 94       	lsr	r15
    8ca0:	e7 94       	ror	r14
    8ca2:	d7 94       	ror	r13
    8ca4:	c7 94       	ror	r12
    8ca6:	6a 95       	dec	r22
    8ca8:	d1 f7       	brne	.-12     	; 0x8c9e <__stack+0x4c9f>
    8caa:	7b e0       	ldi	r23, 0x0B	; 11
    8cac:	88 0f       	add	r24, r24
    8cae:	99 1f       	adc	r25, r25
    8cb0:	aa 1f       	adc	r26, r26
    8cb2:	bb 1f       	adc	r27, r27
    8cb4:	7a 95       	dec	r23
    8cb6:	d1 f7       	brne	.-12     	; 0x8cac <__stack+0x4cad>
    8cb8:	8c 29       	or	r24, r12
    8cba:	9d 29       	or	r25, r13
    8cbc:	ae 29       	or	r26, r14
    8cbe:	bf 29       	or	r27, r15
    8cc0:	a0 96       	adiw	r28, 0x20	; 32
    8cc2:	88 83       	st	Y, r24
    8cc4:	99 83       	std	Y+1, r25	; 0x01
    8cc6:	aa 83       	std	Y+2, r26	; 0x02
    8cc8:	bb 83       	std	Y+3, r27	; 0x03
		key->rk[191] = ROL(key->rk[183] + delta[7][ 4], 17);
    8cca:	82 58       	subi	r24, 0x82	; 130
    8ccc:	9a 46       	sbci	r25, 0x6A	; 106
    8cce:	af 4b       	sbci	r26, 0xBF	; 191
    8cd0:	b3 4a       	sbci	r27, 0xA3	; 163
    8cd2:	6c 01       	movw	r12, r24
    8cd4:	7d 01       	movw	r14, r26
    8cd6:	cf e0       	ldi	r28, 0x0F	; 15
    8cd8:	f6 94       	lsr	r15
    8cda:	e7 94       	ror	r14
    8cdc:	d7 94       	ror	r13
    8cde:	c7 94       	ror	r12
    8ce0:	ca 95       	dec	r28
    8ce2:	d1 f7       	brne	.-12     	; 0x8cd8 <__stack+0x4cd9>
    8ce4:	d1 e1       	ldi	r29, 0x11	; 17
    8ce6:	88 0f       	add	r24, r24
    8ce8:	99 1f       	adc	r25, r25
    8cea:	aa 1f       	adc	r26, r26
    8cec:	bb 1f       	adc	r27, r27
    8cee:	da 95       	dec	r29
    8cf0:	d1 f7       	brne	.-12     	; 0x8ce6 <__stack+0x4ce7>
    8cf2:	c8 2a       	or	r12, r24
    8cf4:	d9 2a       	or	r13, r25
    8cf6:	ea 2a       	or	r14, r26
    8cf8:	fb 2a       	or	r15, r27
    8cfa:	df 01       	movw	r26, r30
    8cfc:	a4 50       	subi	r26, 0x04	; 4
    8cfe:	bd 4f       	sbci	r27, 0xFD	; 253
    8d00:	cd 92       	st	X+, r12
    8d02:	dd 92       	st	X+, r13
    8d04:	ed 92       	st	X+, r14
    8d06:	fc 92       	st	X, r15
    8d08:	13 97       	sbiw	r26, 0x03	; 3

	default:
			return;
	}

	key->round = (mk_len >> 1) + 16;
    8d0a:	fd 5f       	subi	r31, 0xFD	; 253
    8d0c:	89 01       	movw	r16, r18
    8d0e:	9a 01       	movw	r18, r20
    8d10:	36 95       	lsr	r19
    8d12:	27 95       	ror	r18
    8d14:	17 95       	ror	r17
    8d16:	07 95       	ror	r16
    8d18:	00 5f       	subi	r16, 0xF0	; 240
    8d1a:	00 83       	st	Z, r16
}
    8d1c:	df 91       	pop	r29
    8d1e:	cf 91       	pop	r28
    8d20:	1f 91       	pop	r17
    8d22:	0f 91       	pop	r16
    8d24:	ff 90       	pop	r15
    8d26:	ef 90       	pop	r14
    8d28:	df 90       	pop	r13
    8d2a:	cf 90       	pop	r12
    8d2c:	bf 90       	pop	r11
    8d2e:	af 90       	pop	r10
    8d30:	9f 90       	pop	r9
    8d32:	8f 90       	pop	r8
    8d34:	08 95       	ret

00008d36 <lea128_init>:


void lea128_init(LEA_KEY* ctx,uint8_t * key){
	lea_init(ctx,key,16);
    8d36:	20 e1       	ldi	r18, 0x10	; 16
    8d38:	30 e0       	ldi	r19, 0x00	; 0
    8d3a:	40 e0       	ldi	r20, 0x00	; 0
    8d3c:	50 e0       	ldi	r21, 0x00	; 0
    8d3e:	0c 94 f3 0f 	jmp	0x1fe6	; 0x1fe6 <lea_init>

00008d42 <lea192_init>:
}

void lea192_init(LEA_KEY* ctx,uint8_t * key){
	lea_init(ctx,key,24);
    8d42:	28 e1       	ldi	r18, 0x18	; 24
    8d44:	30 e0       	ldi	r19, 0x00	; 0
    8d46:	40 e0       	ldi	r20, 0x00	; 0
    8d48:	50 e0       	ldi	r21, 0x00	; 0
    8d4a:	0c 94 f3 0f 	jmp	0x1fe6	; 0x1fe6 <lea_init>

00008d4e <lea256_init>:
}

void lea256_init(LEA_KEY* ctx,uint8_t * key){
	lea_init(ctx,key,32);
    8d4e:	20 e2       	ldi	r18, 0x20	; 32
    8d50:	30 e0       	ldi	r19, 0x00	; 0
    8d52:	40 e0       	ldi	r20, 0x00	; 0
    8d54:	50 e0       	ldi	r21, 0x00	; 0
    8d56:	0c 94 f3 0f 	jmp	0x1fe6	; 0x1fe6 <lea_init>

00008d5a <lea128_enc>:

#include "lea.h"
#include "lea_enc.h"

void lea128_enc(void* buffer, LEA_KEY* ctx){
	lea_encrypt_core(buffer,ctx);
    8d5a:	0c 94 62 02 	jmp	0x4c4	; 0x4c4 <lea_encrypt_core>

00008d5e <main>:
int main
	(
	void
	)
	{
    platform_init();
    8d5e:	0e 94 47 02 	call	0x48e	; 0x48e <platform_init>
	init_uart();	
    8d62:	0e 94 69 01 	call	0x2d2	; 0x2d2 <init_uart0>
	trigger_setup();
    8d66:	81 e0       	ldi	r24, 0x01	; 1
    8d68:	80 93 01 06 	sts	0x0601, r24
		
	char c;
	int ptr = 0;
    
	//Initial key
	lea_indep_init();
    8d6c:	0e 94 5f 01 	call	0x2be	; 0x2be <lea_indep_init>
	lea_indep_key(tmp);
    8d70:	80 e0       	ldi	r24, 0x00	; 0
    8d72:	90 e2       	ldi	r25, 0x20	; 32
    8d74:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lea_indep_key>

	char state = 0;
    8d78:	10 e0       	ldi	r17, 0x00	; 0
	p014BAF2278A69D331D5180103643E99A\n
	r6743C3D1519AB4F2CD9A78AB09A511BD\n
    */
		
	char c;
	int ptr = 0;
    8d7a:	c0 e0       	ldi	r28, 0x00	; 0
    8d7c:	d0 e0       	ldi	r29, 0x00	; 0
			if ((c == '\n') || (c == '\r')) {
				asciibuf[ptr] = 0;
				hex_decode(asciibuf, ptr, pt);

				/* Do Encryption */					
				trigger_high();
    8d7e:	ff 24       	eor	r15, r15
    8d80:	f3 94       	inc	r15

	char state = 0;
	 
	while(1){
	
		c = getch();
    8d82:	0e 94 9f 01 	call	0x33e	; 0x33e <input_ch_0>
		
		if (c == 'x') {
    8d86:	88 37       	cpi	r24, 0x78	; 120
    8d88:	11 f4       	brne	.+4      	; 0x8d8e <main+0x30>
			ptr = 0;
			state = IDLE;
    8d8a:	10 e0       	ldi	r17, 0x00	; 0
    8d8c:	03 c0       	rjmp	.+6      	; 0x8d94 <main+0x36>
			continue;		
		}
		
		if (c == 'k') {
    8d8e:	8b 36       	cpi	r24, 0x6B	; 107
    8d90:	21 f4       	brne	.+8      	; 0x8d9a <main+0x3c>
			ptr = 0;
			state = KEY;			
    8d92:	11 e0       	ldi	r17, 0x01	; 1
			state = IDLE;
			continue;		
		}
		
		if (c == 'k') {
			ptr = 0;
    8d94:	c0 e0       	ldi	r28, 0x00	; 0
    8d96:	d0 e0       	ldi	r29, 0x00	; 0
    8d98:	f4 cf       	rjmp	.-24     	; 0x8d82 <main+0x24>
			state = KEY;			
			continue;
		}
		
		else if (c == 'p') {
    8d9a:	80 37       	cpi	r24, 0x70	; 112
    8d9c:	11 f4       	brne	.+4      	; 0x8da2 <main+0x44>
			ptr = 0;
			state = PLAIN;
    8d9e:	12 e0       	ldi	r17, 0x02	; 2
    8da0:	f9 cf       	rjmp	.-14     	; 0x8d94 <main+0x36>
			continue;
		}
		
		
		else if (state == KEY) {
    8da2:	11 30       	cpi	r17, 0x01	; 1
    8da4:	b1 f4       	brne	.+44     	; 0x8dd2 <main+0x74>
    8da6:	fe 01       	movw	r30, r28
    8da8:	e0 5e       	subi	r30, 0xE0	; 224
    8daa:	ff 4d       	sbci	r31, 0xDF	; 223
			if ((c == '\n') || (c == '\r')) {
    8dac:	8a 30       	cpi	r24, 0x0A	; 10
    8dae:	19 f0       	breq	.+6      	; 0x8db6 <main+0x58>
    8db0:	8d 30       	cpi	r24, 0x0D	; 13
    8db2:	09 f0       	breq	.+2      	; 0x8db6 <main+0x58>
    8db4:	47 c0       	rjmp	.+142    	; 0x8e44 <main+0xe6>
				asciibuf[ptr] = 0;
    8db6:	10 82       	st	Z, r1
				hex_decode(asciibuf, ptr, tmp);
    8db8:	40 e0       	ldi	r20, 0x00	; 0
    8dba:	50 e2       	ldi	r21, 0x20	; 32
    8dbc:	be 01       	movw	r22, r28
    8dbe:	80 e2       	ldi	r24, 0x20	; 32
    8dc0:	90 e2       	ldi	r25, 0x20	; 32
    8dc2:	0e 94 07 01 	call	0x20e	; 0x20e <hex_decode>
				lea_indep_key(tmp);
    8dc6:	80 e0       	ldi	r24, 0x00	; 0
    8dc8:	90 e2       	ldi	r25, 0x20	; 32
    8dca:	0e 94 60 01 	call	0x2c0	; 0x2c0 <lea_indep_key>
				putch('\n');
				
				state = IDLE;
			} else {
                if (ptr >= BUFLEN){
                    state = IDLE;
    8dce:	10 e0       	ldi	r17, 0x00	; 0
    8dd0:	d8 cf       	rjmp	.-80     	; 0x8d82 <main+0x24>
			} else {
				asciibuf[ptr++] = c;
			}
		}
		
		else if (state == PLAIN) {
    8dd2:	12 30       	cpi	r17, 0x02	; 2
    8dd4:	b1 f6       	brne	.-84     	; 0x8d82 <main+0x24>
			if ((c == '\n') || (c == '\r')) {
    8dd6:	8a 30       	cpi	r24, 0x0A	; 10
    8dd8:	11 f0       	breq	.+4      	; 0x8dde <main+0x80>
    8dda:	8d 30       	cpi	r24, 0x0D	; 13
    8ddc:	69 f5       	brne	.+90     	; 0x8e38 <main+0xda>
				asciibuf[ptr] = 0;
    8dde:	fe 01       	movw	r30, r28
    8de0:	e0 5e       	subi	r30, 0xE0	; 224
    8de2:	ff 4d       	sbci	r31, 0xDF	; 223
    8de4:	10 82       	st	Z, r1
				hex_decode(asciibuf, ptr, pt);
    8de6:	40 e6       	ldi	r20, 0x60	; 96
    8de8:	50 e2       	ldi	r21, 0x20	; 32
    8dea:	be 01       	movw	r22, r28
    8dec:	80 e2       	ldi	r24, 0x20	; 32
    8dee:	90 e2       	ldi	r25, 0x20	; 32
    8df0:	0e 94 07 01 	call	0x20e	; 0x20e <hex_decode>

				/* Do Encryption */					
				trigger_high();
    8df4:	f0 92 05 06 	sts	0x0605, r15
				
				//uint32_t* mk =( uint32_t*)pt;
				//pt[0] = mk[0];
				lea_indep_enc(pt); /* encrypting the data block */
    8df8:	80 e6       	ldi	r24, 0x60	; 96
    8dfa:	90 e2       	ldi	r25, 0x20	; 32
    8dfc:	0e 94 65 01 	call	0x2ca	; 0x2ca <lea_indep_enc>
				trigger_low();
    8e00:	f0 92 06 06 	sts	0x0606, r15
				               
				/* Print Results */
				hex_print(pt, 16, asciibuf);
    8e04:	40 e2       	ldi	r20, 0x20	; 32
    8e06:	50 e2       	ldi	r21, 0x20	; 32
    8e08:	60 e1       	ldi	r22, 0x10	; 16
    8e0a:	70 e0       	ldi	r23, 0x00	; 0
    8e0c:	80 e6       	ldi	r24, 0x60	; 96
    8e0e:	90 e2       	ldi	r25, 0x20	; 32
    8e10:	0e 94 32 01 	call	0x264	; 0x264 <hex_print>
				
				putch('r');
    8e14:	82 e7       	ldi	r24, 0x72	; 114
    8e16:	0e 94 a6 01 	call	0x34c	; 0x34c <output_ch_0>
    8e1a:	00 e2       	ldi	r16, 0x20	; 32
    8e1c:	10 e2       	ldi	r17, 0x20	; 32
				for(int i = 0; i < 32; i++){
					putch(asciibuf[i]);
    8e1e:	f8 01       	movw	r30, r16
    8e20:	81 91       	ld	r24, Z+
    8e22:	8f 01       	movw	r16, r30
    8e24:	0e 94 a6 01 	call	0x34c	; 0x34c <output_ch_0>
				               
				/* Print Results */
				hex_print(pt, 16, asciibuf);
				
				putch('r');
				for(int i = 0; i < 32; i++){
    8e28:	f0 e2       	ldi	r31, 0x20	; 32
    8e2a:	00 34       	cpi	r16, 0x40	; 64
    8e2c:	1f 07       	cpc	r17, r31
    8e2e:	b9 f7       	brne	.-18     	; 0x8e1e <main+0xc0>
					putch(asciibuf[i]);
				}
				putch('\n');
    8e30:	8a e0       	ldi	r24, 0x0A	; 10
    8e32:	0e 94 a6 01 	call	0x34c	; 0x34c <output_ch_0>
    8e36:	cb cf       	rjmp	.-106    	; 0x8dce <main+0x70>
				
				state = IDLE;
			} else {
                if (ptr >= BUFLEN){
    8e38:	c0 34       	cpi	r28, 0x40	; 64
    8e3a:	d1 05       	cpc	r29, r1
    8e3c:	44 f6       	brge	.-112    	; 0x8dce <main+0x70>
                    state = IDLE;
                } else {
                    asciibuf[ptr++] = c;
    8e3e:	fe 01       	movw	r30, r28
    8e40:	e0 5e       	subi	r30, 0xE0	; 224
    8e42:	ff 4d       	sbci	r31, 0xDF	; 223
    8e44:	80 83       	st	Z, r24
    8e46:	21 96       	adiw	r28, 0x01	; 1
    8e48:	9c cf       	rjmp	.-200    	; 0x8d82 <main+0x24>

00008e4a <_exit>:
    8e4a:	f8 94       	cli

00008e4c <__stop_program>:
    8e4c:	ff cf       	rjmp	.-2      	; 0x8e4c <__stop_program>
